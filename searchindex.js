Search.setIndex({"alltitles": {"2-Player Games": [[305, "player-games"]], "Acknowledgements": [[302, "acknowledgements"]], "Already Have a Precomputed Payoff Matrix?": [[308, "already-have-a-precomputed-payoff-matrix"]], "Analytical Models in EGTtools": [[305, "analytical-models-in-egttools"]], "And can visualize what happens if we start several runs from random points in the simplex": [[298, "And-can-visualize-what-happens-if-we-start-several-runs-from-random-points-in-the-simplex"]], "And we can also compare how far our approximations are from the analytical results": [[298, "And-we-can-also-compare-how-far-our-approximations-are-from-the-analytical-results"]], "Apply Analytical Methods": [[305, null]], "Build from source": [[303, "build-from-source"]], "Calculate gradients": [[300, "Calculate-gradients"], [300, "id1"]], "Calculate stationary distribution": [[300, "Calculate-stationary-distribution"]], "Citing EGTtools": [[302, "citing-egttools"]], "Creating New Strategies": [[307, null]], "Creating a New Game Directly in Python": [[308, null]], "Creating a New Game in C++ (EGTtools)": [[306, null]], "Define payoff matrix": [[301, "Define-payoff-matrix"]], "Define the population size and the intensity of selection": [[301, "Define-the-population-size-and-the-intensity-of-selection"]], "EGTtools \u2013 Toolbox for Evolutionary Game Theory": [[302, null]], "Estimate Fixation Probabilities": [[309, "estimate-fixation-probabilities"]], "Estimate Stationary Distributions": [[309, "estimate-stationary-distributions"]], "Estimate Strategy Distributions": [[309, "estimate-strategy-distributions"]], "Estimate numerically the stationary distribution": [[298, "Estimate-numerically-the-stationary-distribution"]], "Evolutionary Dynamics of the Hawk-Dove Game in Finite populations": [[296, "Evolutionary-Dynamics-of-the-Hawk-Dove-Game-in-Finite-populations"], [297, "Evolutionary-Dynamics-of-the-Hawk-Dove-Game-in-Finite-populations"]], "Evolutionary Dynamics of the Hawk-Dove Game in Infinite populations": [[296, "Evolutionary-Dynamics-of-the-Hawk-Dove-Game-in-Infinite-populations"], [297, "Evolutionary-Dynamics-of-the-Hawk-Dove-Game-in-Infinite-populations"]], "Evolutionary dynamics in infinite populations": [[300, "Evolutionary-dynamics-in-infinite-populations"], [301, "Evolutionary-dynamics-in-infinite-populations"]], "Evolutionary dynamics of Hawk-Dove": [[296, null]], "Evolutionary dynamics of Hawk-Dove with new Analytical module": [[297, null]], "Example: Defining a New CPR Strategy": [[307, "example-defining-a-new-cpr-strategy"]], "Example: Defining a New Normal Form Strategy": [[307, "example-defining-a-new-normal-form-strategy"]], "Example: Stochastic Dynamics of a Hawk-Dove Game": [[305, "example-stochastic-dynamics-of-a-hawk-dove-game"]], "Example: The N-Player Stag Hunt Game": [[308, "example-the-n-player-stag-hunt-game"]], "Examples": [[294, null]], "Examples of use of EGTtools": [[295, null]], "Extending Existing Games": [[307, "extending-existing-games"]], "Finite populations": [[300, "Finite-populations"]], "Fixation probabilities and Invasion diagram": [[299, null]], "From PyPi": [[303, "from-pypi"]], "Implementation Notes": [[307, "implementation-notes"]], "Implementing a Game from Scratch: the AbstractGame Class": [[308, "implementing-a-game-from-scratch-the-abstractgame-class"]], "Indices and tables": [[302, "indices-and-tables"]], "Installation": [[303, null]], "Instantiate the Normal Form Game": [[299, "Instantiate-the-Normal-Form-Game"]], "List of Implemented Games": [[308, "list-of-implemented-games"]], "Methods Overview": [[309, "methods-overview"]], "N-Player Games": [[305, "n-player-games"]], "Now we instanciate the StochDynamics class to perform analytical calculations": [[299, "Now-we-instanciate-the-StochDynamics-class-to-perform-analytical-calculations"]], "Numerical Methods in EGTtools": [[309, null]], "Numerical simulations": [[298, null]], "Overview": [[306, "overview"]], "Payoff matrix for a Normal Form Game": [[299, "Payoff-matrix-for-a-Normal-Form-Game"]], "Pip version": [[303, "pip-version"]], "Plot invasion diagram": [[299, "Plot-invasion-diagram"]], "Plot the evolutionary dynamics in a 2-Simplex": [[300, null]], "Plot the gradient field and the stationary distribution": [[301, "Plot-the-gradient-field-and-the-stationary-distribution"]], "Plot the gradient field using a streamplot": [[301, "Plot-the-gradient-field-using-a-streamplot"]], "Plot the trajectories from the stationary points": [[301, "Plot-the-trajectories-from-the-stationary-points"]], "Plotting the Stationary Distribution": [[310, "plotting-the-stationary-distribution"]], "Populations with 2 Strategies": [[310, "populations-with-2-strategies"]], "Populations with 3 Strategies": [[310, "populations-with-3-strategies"]], "Populations with More Than 3 Strategies": [[310, "populations-with-more-than-3-strategies"]], "Projects using EGTtools": [[294, "projects-using-egttools"]], "Python distributions": [[303, "python-distributions"]], "References": [[311, null]], "Registering Your Game in Python": [[306, "registering-your-game-in-python"]], "Related Tutorials": [[306, "related-tutorials"]], "Replicator dynamics in a 2-simplex (3 strategies)": [[295, "Replicator-dynamics-in-a-2-simplex-(3-strategies)"]], "Replicator equation": [[296, "Replicator-equation"], [297, "Replicator-equation"]], "Required Methods": [[306, "required-methods"]], "Run Full Trajectories": [[309, "run-full-trajectories"]], "Run a Single Simulation": [[309, "run-a-single-simulation"]], "Select which strategies we want to analyse": [[299, "Select-which-strategies-we-want-to-analyse"]], "Simplified 2-Simplex plot": [[301, null]], "Simplifying Game Implementation: AbstractTwoPLayerGame and AbstractNPlayerGame": [[308, "simplifying-game-implementation-abstracttwoplayergame-and-abstractnplayergame"]], "Small Mutation Limit (SML)": [[305, "small-mutation-limit-sml"]], "Standalone Custom Strategies": [[307, "standalone-custom-strategies"]], "Stochastic Dynamics in Finite Populations - Moran process with pairwise comparison rule": [[295, "Stochastic-Dynamics-in-Finite-Populations---Moran-process-with-pairwise-comparison-rule"]], "Stochastic Dynamics in Finite Populations: The Pairwise Comparison Rule": [[305, "stochastic-dynamics-in-finite-populations-the-pairwise-comparison-rule"]], "Stochastic Dynamics in finite populations - Moran process with pairwise comparison": [[301, "Stochastic-Dynamics-in-finite-populations---Moran-process-with-pairwise-comparison"]], "Stochastic dynamics in a 1-Simplex (only 2 strategies)": [[295, "Stochastic-dynamics-in-a-1-Simplex-(only-2-strategies)"]], "Stochastic dynamics in a 2-simplex (3 strategies)": [[295, "Stochastic-dynamics-in-a-2-simplex-(3-strategies)"]], "Testing and Integration": [[306, "testing-and-integration"]], "The Gradient of Selection and Stability in Infinite Populations": [[310, "the-gradient-of-selection-and-stability-in-infinite-populations"], [310, "id2"]], "The Gradient of Selection and Stationary Distribution in Finite Populations": [[310, "the-gradient-of-selection-and-stationary-distribution-in-finite-populations"]], "The Gradient of Selection in Finite Populations": [[310, "the-gradient-of-selection-in-finite-populations"]], "The Replicator Dynamics": [[305, "the-replicator-dynamics"]], "The Simplex2D Class": [[310, "the-simplex2d-class"]], "The replicator dynamics": [[295, "The-replicator-dynamics"]], "Troubleshooting": [[303, "troubleshooting"]], "Tutorials": [[304, null], [309, "tutorials"]], "Utility functions": [[312, null]], "Visualizing Results": [[310, null]], "We can also plot a single run": [[298, "We-can-also-plot-a-single-run"]], "egttools": [[0, null]], "egttools.analytical": [[1, null]], "egttools.analytical.PairwiseComparison": [[2, null]], "egttools.analytical.StochDynamics": [[3, null]], "egttools.analytical.replicator_equation": [[4, null]], "egttools.analytical.replicator_equation_n_player": [[5, null]], "egttools.analytical.sed_analytical": [[6, null]], "egttools.analytical.sed_analytical.StochDynamics": [[7, null]], "egttools.analytical.sed_analytical.calculate_nb_states": [[8, null]], "egttools.analytical.sed_analytical.calculate_state": [[9, null]], "egttools.analytical.sed_analytical.csr_matrix": [[10, null]], "egttools.analytical.sed_analytical.eig": [[11, null]], "egttools.analytical.sed_analytical.lil_matrix": [[12, null]], "egttools.analytical.sed_analytical.permutations": [[13, null]], "egttools.analytical.sed_analytical.replicator_equation": [[14, null]], "egttools.analytical.sed_analytical.replicator_equation_n_player": [[15, null]], "egttools.analytical.sed_analytical.sample_simplex": [[16, null]], "egttools.analytical.sed_analytical.warn": [[17, null]], "egttools.analytical.utils": [[18, null]], "egttools.analytical.utils.StochDynamics": [[19, null]], "egttools.analytical.utils.calculate_gradients": [[20, null]], "egttools.analytical.utils.check_if_point_in_unit_simplex": [[21, null]], "egttools.analytical.utils.check_if_there_is_random_drift": [[22, null]], "egttools.analytical.utils.check_replicator_stability_pairwise_games": [[23, null]], "egttools.analytical.utils.eigvals": [[24, null]], "egttools.analytical.utils.find_roots": [[25, null]], "egttools.analytical.utils.find_roots_and_stability": [[26, null]], "egttools.analytical.utils.get_pairwise_gradient_from_replicator": [[27, null]], "egttools.analytical.utils.get_pairwise_gradient_from_replicator_n_player": [[28, null]], "egttools.analytical.utils.replicator_equation": [[29, null]], "egttools.analytical.utils.replicator_equation_n_player": [[30, null]], "egttools.analytical.utils.root": [[31, null]], "egttools.analytical.utils.sample_unit_simplex": [[32, null]], "egttools.behaviors": [[33, null]], "egttools.behaviors.CPR": [[34, null]], "egttools.behaviors.CPR.abstract_cpr_strategy": [[35, null]], "egttools.behaviors.CPR.abstract_cpr_strategy.ABC": [[36, null]], "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy": [[37, null]], "egttools.behaviors.CPR.abstract_cpr_strategy.abstractmethod": [[38, null]], "egttools.behaviors.CPR.cpr_strategies": [[39, null]], "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy": [[40, null]], "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy": [[41, null]], "egttools.behaviors.CPR.cpr_strategies.FairExtraction": [[42, null]], "egttools.behaviors.CPR.cpr_strategies.FakeStrategy": [[43, null]], "egttools.behaviors.CPR.cpr_strategies.FixedExtraction": [[44, null]], "egttools.behaviors.CPR.cpr_strategies.FreeStrategy": [[45, null]], "egttools.behaviors.CPR.cpr_strategies.HighExtraction": [[46, null]], "egttools.behaviors.CPR.cpr_strategies.NashExtraction": [[47, null]], "egttools.behaviors.CPR.cpr_strategies.fair_extraction": [[48, null]], "egttools.behaviors.CPR.cpr_strategies.high_extraction": [[49, null]], "egttools.behaviors.CPR.cpr_strategies.nash_extraction": [[50, null]], "egttools.behaviors.CPR.cpr_strategies.payoff_no_commitment": [[51, null]], "egttools.behaviors.CRD": [[52, null]], "egttools.behaviors.CRD.AbstractCRDStrategy": [[53, null]], "egttools.behaviors.CRD.CRDMemoryOnePlayer": [[54, null]], "egttools.behaviors.CRD.GoalBasedCRDStrategy": [[55, null]], "egttools.behaviors.CRD.MovingAverageCRDStrategy": [[56, null]], "egttools.behaviors.CRD.TimeBasedCRDStrategy": [[57, null]], "egttools.behaviors.CRD.goal_based": [[58, null]], "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy": [[59, null]], "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy": [[60, null]], "egttools.behaviors.CRD.moving_average": [[61, null]], "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy": [[62, null]], "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy": [[63, null]], "egttools.behaviors.CRD.time_based": [[64, null]], "egttools.behaviors.CRD.time_based.AbstractCRDStrategy": [[65, null]], "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy": [[66, null]], "egttools.behaviors.NormalForm": [[67, null]], "egttools.behaviors.NormalForm.AbstractNFGStrategy": [[68, null]], "egttools.behaviors.NormalForm.TwoActions": [[69, null]], "egttools.behaviors.NormalForm.TwoActions.ActionInertia": [[70, null]], "egttools.behaviors.NormalForm.TwoActions.Cooperator": [[71, null]], "egttools.behaviors.NormalForm.TwoActions.Defector": [[72, null]], "egttools.behaviors.NormalForm.TwoActions.Detective": [[73, null]], "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM": [[74, null]], "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT": [[75, null]], "egttools.behaviors.NormalForm.TwoActions.GRIM": [[76, null]], "egttools.behaviors.NormalForm.TwoActions.GenerousTFT": [[77, null]], "egttools.behaviors.NormalForm.TwoActions.GradualTFT": [[78, null]], "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT": [[79, null]], "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy": [[80, null]], "egttools.behaviors.NormalForm.TwoActions.Pavlov": [[81, null]], "egttools.behaviors.NormalForm.TwoActions.Random": [[82, null]], "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT": [[83, null]], "egttools.behaviors.NormalForm.TwoActions.TFT": [[84, null]], "egttools.behaviors.NormalForm.TwoActions.TFTT": [[85, null]], "egttools.behaviors.NormalForm.TwoActions.TTFT": [[86, null]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies": [[87, null]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy": [[88, null]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective": [[89, null]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM": [[90, null]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT": [[91, null]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy": [[92, null]], "egttools.behaviors.opinion_behaviors": [[93, null]], "egttools.behaviors.opinion_behaviors.Opinion": [[94, null]], "egttools.behaviors.opinion_behaviors.opinion_factory": [[95, null]], "egttools.behaviors.pgg_behaviors": [[96, null]], "egttools.behaviors.pgg_behaviors.PGGOneShotStrategy": [[97, null]], "egttools.behaviors.pgg_behaviors.player_factory": [[98, null]], "egttools.calculate_nb_states": [[99, null]], "egttools.calculate_state": [[100, null]], "egttools.calculate_strategies_distribution": [[101, null]], "egttools.datastructures": [[102, null]], "egttools.datastructures.DataTable": [[103, null]], "egttools.distributions": [[104, null]], "egttools.distributions.TimingUncertainty": [[105, null]], "egttools.distributions.binom": [[106, null]], "egttools.distributions.comb": [[107, null]], "egttools.distributions.multinomial_pmf": [[108, null]], "egttools.distributions.multivariate_hypergeometric_pdf": [[109, null]], "egttools.files": [[110, null]], "egttools.games": [[111, null]], "egttools.games.AbstractGame": [[112, null]], "egttools.games.AbstractNPlayerGame": [[113, null]], "egttools.games.AbstractSpatialGame": [[114, null]], "egttools.games.AbstractTwoPLayerGame": [[115, null]], "egttools.games.CRDGame": [[116, null]], "egttools.games.CRDGameTU": [[117, null]], "egttools.games.CommonPoolResourceDilemma": [[118, null]], "egttools.games.CommonPoolResourceDilemmaCommitment": [[119, null]], "egttools.games.InformalRiskGame": [[120, null]], "egttools.games.Matrix2PlayerGameHolder": [[121, null]], "egttools.games.MatrixNPlayerGameHolder": [[122, null]], "egttools.games.NPlayerStagHunt": [[123, null]], "egttools.games.NormalFormGame": [[124, null]], "egttools.games.NormalFormNetworkGame": [[125, null]], "egttools.games.OneShotCRD": [[126, null]], "egttools.games.OneShotCRDNetworkGame": [[127, null]], "egttools.games.PGG": [[128, null]], "egttools.games.abstract_games": [[129, null]], "egttools.games.abstract_games.AbstractGame": [[130, null]], "egttools.games.abstract_games.AbstractNPlayerGame": [[131, null]], "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff": [[132, null]], "egttools.games.abstract_games.AbstractTwoPLayerGame": [[133, null]], "egttools.games.abstract_games.abstractmethod": [[134, null]], "egttools.games.abstract_games.calculate_state": [[135, null]], "egttools.games.abstract_games.sample_simplex": [[136, null]], "egttools.games.informal_risk": [[137, null]], "egttools.games.informal_risk.AbstractGame": [[138, null]], "egttools.games.informal_risk.InformalRiskGame": [[139, null]], "egttools.games.informal_risk.calculate_nb_states": [[140, null]], "egttools.games.informal_risk.calculate_state": [[141, null]], "egttools.games.informal_risk.sample_simplex": [[142, null]], "egttools.games.nonlinear_games": [[143, null]], "egttools.games.nonlinear_games.AbstractCPRStrategy": [[144, null]], "egttools.games.nonlinear_games.AbstractNPlayerGame": [[145, null]], "egttools.games.nonlinear_games.CommonPoolResourceDilemma": [[146, null]], "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment": [[147, null]], "egttools.games.nonlinear_games.NPlayerStagHunt": [[148, null]], "egttools.games.nonlinear_games.calculate_state": [[149, null]], "egttools.games.nonlinear_games.sample_simplex": [[150, null]], "egttools.games.opinion_game": [[151, null]], "egttools.games.opinion_game.AbstractNPlayerGame": [[152, null]], "egttools.games.opinion_game.OpinionGame": [[153, null]], "egttools.games.opinion_game.moment": [[154, null]], "egttools.games.opinion_game.sample_simplex": [[155, null]], "egttools.games.opinion_game.sigmoid": [[156, null]], "egttools.games.pgg": [[157, null]], "egttools.games.pgg.AbstractNPlayerGame": [[158, null]], "egttools.games.pgg.PGG": [[159, null]], "egttools.games.pgg.PGGOneShotStrategy": [[160, null]], "egttools.games.pgg.sample_simplex": [[161, null]], "egttools.helpers": [[162, null]], "egttools.helpers.vectorized": [[163, null]], "egttools.helpers.vectorized.barycentric_to_xy_coordinates": [[164, null]], "egttools.helpers.vectorized.cpp_vectorized_replicator_equation_n_player": [[165, null]], "egttools.helpers.vectorized.replicator_equation_n_player": [[166, null]], "egttools.helpers.vectorized.vectorized_barycentric_to_xy_coordinates": [[167, null]], "egttools.helpers.vectorized.vectorized_replicator_equation": [[168, null]], "egttools.helpers.vectorized.vectorized_replicator_equation_n_player": [[169, null]], "egttools.is_blas_lapack_enabled": [[170, null]], "egttools.is_openmp_enabled": [[171, null]], "egttools.numerical": [[172, null]], "egttools.numerical.GeneralPopulationEvolver": [[173, null]], "egttools.numerical.NetworkEvolver": [[174, null]], "egttools.numerical.PairwiseComparisonNumerical": [[175, null]], "egttools.numerical.numerical_": [[176, null]], "egttools.numerical.numerical_.GeneralPopulationEvolver": [[177, null]], "egttools.numerical.numerical_.NetworkEvolver": [[178, null]], "egttools.numerical.numerical_.PairwiseComparison": [[179, null]], "egttools.numerical.numerical_.PairwiseComparisonNumerical": [[180, null]], "egttools.numerical.numerical_.calculate_nb_states": [[181, null]], "egttools.numerical.numerical_.calculate_state": [[182, null]], "egttools.numerical.numerical_.calculate_strategies_distribution": [[183, null]], "egttools.numerical.numerical_.is_blas_lapack_enabled": [[184, null]], "egttools.numerical.numerical_.is_openmp_enabled": [[185, null]], "egttools.numerical.numerical_.replicator_equation": [[186, null]], "egttools.numerical.numerical_.replicator_equation_n_player": [[187, null]], "egttools.numerical.numerical_.sample_simplex": [[188, null]], "egttools.numerical.numerical_.sample_simplex_directly": [[189, null]], "egttools.numerical.numerical_.sample_unit_simplex": [[190, null]], "egttools.numerical.numerical_.vectorized_replicator_equation_n_player": [[191, null]], "egttools.numerical.structure": [[192, null]], "egttools.numerical.structure.AbstractStructure": [[193, null]], "egttools.numerical.structure.Network": [[194, null]], "egttools.numerical.structure.NetworkGroup": [[195, null]], "egttools.numerical.structure.NetworkGroupSync": [[196, null]], "egttools.numerical.structure.NetworkSync": [[197, null]], "egttools.numerical.structure.factories": [[198, null]], "egttools.numerical.structure.factories.AbstractSpatialGame": [[199, null]], "egttools.numerical.structure.factories.Network": [[200, null]], "egttools.numerical.structure.factories.NetworkGroup": [[201, null]], "egttools.numerical.structure.factories.NetworkGroupSync": [[202, null]], "egttools.numerical.structure.factories.NetworkSync": [[203, null]], "egttools.numerical.structure.factories.network_factory": [[204, null]], "egttools.numerical.structure.factories.network_group_factory": [[205, null]], "egttools.numerical.structure.factories.network_group_sync_factory": [[206, null]], "egttools.numerical.structure.factories.network_sync_factory": [[207, null]], "egttools.plotting": [[208, null]], "egttools.plotting.Simplex2D": [[209, null]], "egttools.plotting.draw_invasion_diagram": [[210, null]], "egttools.plotting.helpers": [[211, null]], "egttools.plotting.helpers.NDArray": [[212, null]], "egttools.plotting.helpers.add_arrow": [[213, null]], "egttools.plotting.helpers.barycentric_to_xy_coordinates": [[214, null]], "egttools.plotting.helpers.calculate_nb_states": [[215, null]], "egttools.plotting.helpers.calculate_stability": [[216, null]], "egttools.plotting.helpers.calculate_stationary_points": [[217, null]], "egttools.plotting.helpers.check_if_point_in_unit_simplex": [[218, null]], "egttools.plotting.helpers.find_roots_in_discrete_barycentric_coordinates": [[219, null]], "egttools.plotting.helpers.find_where_point_is_in_simplex": [[220, null]], "egttools.plotting.helpers.perturb_state": [[221, null]], "egttools.plotting.helpers.perturb_state_discrete": [[222, null]], "egttools.plotting.helpers.root": [[223, null]], "egttools.plotting.helpers.sample_simplex": [[224, null]], "egttools.plotting.helpers.simplex_iterator": [[225, null]], "egttools.plotting.helpers.xy_to_barycentric_coordinates": [[226, null]], "egttools.plotting.indicators": [[227, null]], "egttools.plotting.indicators.AutoMinorLocator": [[228, null]], "egttools.plotting.indicators.draw_invasion_diagram": [[229, null]], "egttools.plotting.indicators.plot_gradient": [[230, null]], "egttools.plotting.indicators.plot_gradients": [[231, null]], "egttools.plotting.plot_gradient": [[232, null]], "egttools.plotting.plot_gradients": [[233, null]], "egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex": [[234, null]], "egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots": [[235, null]], "egttools.plotting.plot_replicator_dynamics_in_simplex": [[236, null]], "egttools.plotting.simplex2d": [[237, null]], "egttools.plotting.simplex2d.Circle": [[238, null]], "egttools.plotting.simplex2d.Simplex2D": [[239, null]], "egttools.plotting.simplex2d.TypeVar": [[240, null]], "egttools.plotting.simplex2d.add_arrow": [[241, null]], "egttools.plotting.simplex2d.barycentric_to_xy_coordinates": [[242, null]], "egttools.plotting.simplex2d.calculate_nb_states": [[243, null]], "egttools.plotting.simplex2d.find_where_point_is_in_simplex": [[244, null]], "egttools.plotting.simplex2d.odeint": [[245, null]], "egttools.plotting.simplex2d.perturb_state": [[246, null]], "egttools.plotting.simplex2d.perturb_state_discrete": [[247, null]], "egttools.plotting.simplex2d.sample_simplex": [[248, null]], "egttools.plotting.simplex2d.sample_unit_simplex": [[249, null]], "egttools.plotting.simplex2d.xy_to_barycentric_coordinates": [[250, null]], "egttools.plotting.simplified": [[251, null]], "egttools.plotting.simplified.AbstractGame": [[252, null]], "egttools.plotting.simplified.Matrix2PlayerGameHolder": [[253, null]], "egttools.plotting.simplified.MatrixNPlayerGameHolder": [[254, null]], "egttools.plotting.simplified.NDArray": [[255, null]], "egttools.plotting.simplified.PairwiseComparison": [[256, null]], "egttools.plotting.simplified.Simplex2D": [[257, null]], "egttools.plotting.simplified.barycentric_to_xy_coordinates": [[258, null]], "egttools.plotting.simplified.calculate_nb_states": [[259, null]], "egttools.plotting.simplified.calculate_stability": [[260, null]], "egttools.plotting.simplified.check_if_there_is_random_drift": [[261, null]], "egttools.plotting.simplified.check_replicator_stability_pairwise_games": [[262, null]], "egttools.plotting.simplified.find_roots": [[263, null]], "egttools.plotting.simplified.find_roots_in_discrete_barycentric_coordinates": [[264, null]], "egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex": [[265, null]], "egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots": [[266, null]], "egttools.plotting.simplified.plot_replicator_dynamics_in_simplex": [[267, null]], "egttools.plotting.simplified.replicator_equation": [[268, null]], "egttools.plotting.simplified.replicator_equation_n_player": [[269, null]], "egttools.plotting.simplified.vectorized_barycentric_to_xy_coordinates": [[270, null]], "egttools.plotting.simplified.vectorized_replicator_equation": [[271, null]], "egttools.plotting.simplified.vectorized_replicator_equation_n_player": [[272, null]], "egttools.plotting.simplified.xy_to_barycentric_coordinates": [[273, null]], "egttools.sample_simplex": [[274, null]], "egttools.sample_unit_simplex": [[275, null]], "egttools.show_build_info": [[276, null]], "egttools.utils": [[277, null]], "egttools.utils.AbstractGame": [[278, null]], "egttools.utils.Graph": [[279, null]], "egttools.utils.calculate_nb_unique_combinations": [[280, null]], "egttools.utils.calculate_stationary_distribution": [[281, null]], "egttools.utils.calculate_stationary_distribution_non_hermitian": [[282, null]], "egttools.utils.combine": [[283, null]], "egttools.utils.csc_matrix": [[284, null]], "egttools.utils.csr_matrix": [[285, null]], "egttools.utils.eigvals": [[286, null]], "egttools.utils.find_saddle_type_and_gradient_direction": [[287, null]], "egttools.utils.get_payoff_function": [[288, null]], "egttools.utils.schur": [[289, null]], "egttools.utils.transform_graph_to_dict_of_lists": [[290, null]], "egttools.utils.transform_payoffs_to_pairwise": [[291, null]], "egttools.utils.warn": [[292, null]]}, "docnames": ["_autosummary/egttools", "_autosummary/egttools.analytical", "_autosummary/egttools.analytical.PairwiseComparison", "_autosummary/egttools.analytical.StochDynamics", "_autosummary/egttools.analytical.replicator_equation", "_autosummary/egttools.analytical.replicator_equation_n_player", "_autosummary/egttools.analytical.sed_analytical", "_autosummary/egttools.analytical.sed_analytical.StochDynamics", "_autosummary/egttools.analytical.sed_analytical.calculate_nb_states", "_autosummary/egttools.analytical.sed_analytical.calculate_state", "_autosummary/egttools.analytical.sed_analytical.csr_matrix", "_autosummary/egttools.analytical.sed_analytical.eig", "_autosummary/egttools.analytical.sed_analytical.lil_matrix", "_autosummary/egttools.analytical.sed_analytical.permutations", "_autosummary/egttools.analytical.sed_analytical.replicator_equation", "_autosummary/egttools.analytical.sed_analytical.replicator_equation_n_player", "_autosummary/egttools.analytical.sed_analytical.sample_simplex", "_autosummary/egttools.analytical.sed_analytical.warn", "_autosummary/egttools.analytical.utils", "_autosummary/egttools.analytical.utils.StochDynamics", "_autosummary/egttools.analytical.utils.calculate_gradients", "_autosummary/egttools.analytical.utils.check_if_point_in_unit_simplex", "_autosummary/egttools.analytical.utils.check_if_there_is_random_drift", "_autosummary/egttools.analytical.utils.check_replicator_stability_pairwise_games", "_autosummary/egttools.analytical.utils.eigvals", "_autosummary/egttools.analytical.utils.find_roots", "_autosummary/egttools.analytical.utils.find_roots_and_stability", "_autosummary/egttools.analytical.utils.get_pairwise_gradient_from_replicator", "_autosummary/egttools.analytical.utils.get_pairwise_gradient_from_replicator_n_player", "_autosummary/egttools.analytical.utils.replicator_equation", "_autosummary/egttools.analytical.utils.replicator_equation_n_player", "_autosummary/egttools.analytical.utils.root", "_autosummary/egttools.analytical.utils.sample_unit_simplex", "_autosummary/egttools.behaviors", "_autosummary/egttools.behaviors.CPR", "_autosummary/egttools.behaviors.CPR.abstract_cpr_strategy", "_autosummary/egttools.behaviors.CPR.abstract_cpr_strategy.ABC", "_autosummary/egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy", "_autosummary/egttools.behaviors.CPR.abstract_cpr_strategy.abstractmethod", "_autosummary/egttools.behaviors.CPR.cpr_strategies", "_autosummary/egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy", "_autosummary/egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy", "_autosummary/egttools.behaviors.CPR.cpr_strategies.FairExtraction", "_autosummary/egttools.behaviors.CPR.cpr_strategies.FakeStrategy", "_autosummary/egttools.behaviors.CPR.cpr_strategies.FixedExtraction", "_autosummary/egttools.behaviors.CPR.cpr_strategies.FreeStrategy", "_autosummary/egttools.behaviors.CPR.cpr_strategies.HighExtraction", "_autosummary/egttools.behaviors.CPR.cpr_strategies.NashExtraction", "_autosummary/egttools.behaviors.CPR.cpr_strategies.fair_extraction", "_autosummary/egttools.behaviors.CPR.cpr_strategies.high_extraction", "_autosummary/egttools.behaviors.CPR.cpr_strategies.nash_extraction", "_autosummary/egttools.behaviors.CPR.cpr_strategies.payoff_no_commitment", "_autosummary/egttools.behaviors.CRD", "_autosummary/egttools.behaviors.CRD.AbstractCRDStrategy", "_autosummary/egttools.behaviors.CRD.CRDMemoryOnePlayer", "_autosummary/egttools.behaviors.CRD.GoalBasedCRDStrategy", "_autosummary/egttools.behaviors.CRD.MovingAverageCRDStrategy", "_autosummary/egttools.behaviors.CRD.TimeBasedCRDStrategy", "_autosummary/egttools.behaviors.CRD.goal_based", "_autosummary/egttools.behaviors.CRD.goal_based.AbstractCRDStrategy", "_autosummary/egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy", "_autosummary/egttools.behaviors.CRD.moving_average", "_autosummary/egttools.behaviors.CRD.moving_average.AbstractCRDStrategy", "_autosummary/egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy", "_autosummary/egttools.behaviors.CRD.time_based", "_autosummary/egttools.behaviors.CRD.time_based.AbstractCRDStrategy", "_autosummary/egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy", "_autosummary/egttools.behaviors.NormalForm", "_autosummary/egttools.behaviors.NormalForm.AbstractNFGStrategy", "_autosummary/egttools.behaviors.NormalForm.TwoActions", "_autosummary/egttools.behaviors.NormalForm.TwoActions.ActionInertia", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Cooperator", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Defector", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Detective", "_autosummary/egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM", "_autosummary/egttools.behaviors.NormalForm.TwoActions.EpsilonTFT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.GRIM", "_autosummary/egttools.behaviors.NormalForm.TwoActions.GenerousTFT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.GradualTFT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.ImperfectTFT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Pavlov", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Random", "_autosummary/egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.TFT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.TFTT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.TTFT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy", "_autosummary/egttools.behaviors.opinion_behaviors", "_autosummary/egttools.behaviors.opinion_behaviors.Opinion", "_autosummary/egttools.behaviors.opinion_behaviors.opinion_factory", "_autosummary/egttools.behaviors.pgg_behaviors", "_autosummary/egttools.behaviors.pgg_behaviors.PGGOneShotStrategy", "_autosummary/egttools.behaviors.pgg_behaviors.player_factory", "_autosummary/egttools.calculate_nb_states", "_autosummary/egttools.calculate_state", "_autosummary/egttools.calculate_strategies_distribution", "_autosummary/egttools.datastructures", "_autosummary/egttools.datastructures.DataTable", "_autosummary/egttools.distributions", "_autosummary/egttools.distributions.TimingUncertainty", "_autosummary/egttools.distributions.binom", "_autosummary/egttools.distributions.comb", "_autosummary/egttools.distributions.multinomial_pmf", "_autosummary/egttools.distributions.multivariate_hypergeometric_pdf", "_autosummary/egttools.files", "_autosummary/egttools.games", "_autosummary/egttools.games.AbstractGame", "_autosummary/egttools.games.AbstractNPlayerGame", "_autosummary/egttools.games.AbstractSpatialGame", "_autosummary/egttools.games.AbstractTwoPLayerGame", "_autosummary/egttools.games.CRDGame", "_autosummary/egttools.games.CRDGameTU", "_autosummary/egttools.games.CommonPoolResourceDilemma", "_autosummary/egttools.games.CommonPoolResourceDilemmaCommitment", "_autosummary/egttools.games.InformalRiskGame", "_autosummary/egttools.games.Matrix2PlayerGameHolder", "_autosummary/egttools.games.MatrixNPlayerGameHolder", "_autosummary/egttools.games.NPlayerStagHunt", "_autosummary/egttools.games.NormalFormGame", "_autosummary/egttools.games.NormalFormNetworkGame", "_autosummary/egttools.games.OneShotCRD", "_autosummary/egttools.games.OneShotCRDNetworkGame", "_autosummary/egttools.games.PGG", "_autosummary/egttools.games.abstract_games", "_autosummary/egttools.games.abstract_games.AbstractGame", "_autosummary/egttools.games.abstract_games.AbstractNPlayerGame", "_autosummary/egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff", "_autosummary/egttools.games.abstract_games.AbstractTwoPLayerGame", "_autosummary/egttools.games.abstract_games.abstractmethod", "_autosummary/egttools.games.abstract_games.calculate_state", "_autosummary/egttools.games.abstract_games.sample_simplex", "_autosummary/egttools.games.informal_risk", "_autosummary/egttools.games.informal_risk.AbstractGame", "_autosummary/egttools.games.informal_risk.InformalRiskGame", "_autosummary/egttools.games.informal_risk.calculate_nb_states", "_autosummary/egttools.games.informal_risk.calculate_state", "_autosummary/egttools.games.informal_risk.sample_simplex", "_autosummary/egttools.games.nonlinear_games", "_autosummary/egttools.games.nonlinear_games.AbstractCPRStrategy", "_autosummary/egttools.games.nonlinear_games.AbstractNPlayerGame", "_autosummary/egttools.games.nonlinear_games.CommonPoolResourceDilemma", "_autosummary/egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment", "_autosummary/egttools.games.nonlinear_games.NPlayerStagHunt", "_autosummary/egttools.games.nonlinear_games.calculate_state", "_autosummary/egttools.games.nonlinear_games.sample_simplex", "_autosummary/egttools.games.opinion_game", "_autosummary/egttools.games.opinion_game.AbstractNPlayerGame", "_autosummary/egttools.games.opinion_game.OpinionGame", "_autosummary/egttools.games.opinion_game.moment", "_autosummary/egttools.games.opinion_game.sample_simplex", "_autosummary/egttools.games.opinion_game.sigmoid", "_autosummary/egttools.games.pgg", "_autosummary/egttools.games.pgg.AbstractNPlayerGame", "_autosummary/egttools.games.pgg.PGG", "_autosummary/egttools.games.pgg.PGGOneShotStrategy", "_autosummary/egttools.games.pgg.sample_simplex", "_autosummary/egttools.helpers", "_autosummary/egttools.helpers.vectorized", "_autosummary/egttools.helpers.vectorized.barycentric_to_xy_coordinates", "_autosummary/egttools.helpers.vectorized.cpp_vectorized_replicator_equation_n_player", "_autosummary/egttools.helpers.vectorized.replicator_equation_n_player", "_autosummary/egttools.helpers.vectorized.vectorized_barycentric_to_xy_coordinates", "_autosummary/egttools.helpers.vectorized.vectorized_replicator_equation", "_autosummary/egttools.helpers.vectorized.vectorized_replicator_equation_n_player", "_autosummary/egttools.is_blas_lapack_enabled", "_autosummary/egttools.is_openmp_enabled", "_autosummary/egttools.numerical", "_autosummary/egttools.numerical.GeneralPopulationEvolver", "_autosummary/egttools.numerical.NetworkEvolver", "_autosummary/egttools.numerical.PairwiseComparisonNumerical", "_autosummary/egttools.numerical.numerical_", "_autosummary/egttools.numerical.numerical_.GeneralPopulationEvolver", "_autosummary/egttools.numerical.numerical_.NetworkEvolver", "_autosummary/egttools.numerical.numerical_.PairwiseComparison", "_autosummary/egttools.numerical.numerical_.PairwiseComparisonNumerical", "_autosummary/egttools.numerical.numerical_.calculate_nb_states", "_autosummary/egttools.numerical.numerical_.calculate_state", "_autosummary/egttools.numerical.numerical_.calculate_strategies_distribution", "_autosummary/egttools.numerical.numerical_.is_blas_lapack_enabled", "_autosummary/egttools.numerical.numerical_.is_openmp_enabled", "_autosummary/egttools.numerical.numerical_.replicator_equation", "_autosummary/egttools.numerical.numerical_.replicator_equation_n_player", "_autosummary/egttools.numerical.numerical_.sample_simplex", "_autosummary/egttools.numerical.numerical_.sample_simplex_directly", "_autosummary/egttools.numerical.numerical_.sample_unit_simplex", "_autosummary/egttools.numerical.numerical_.vectorized_replicator_equation_n_player", "_autosummary/egttools.numerical.structure", "_autosummary/egttools.numerical.structure.AbstractStructure", "_autosummary/egttools.numerical.structure.Network", "_autosummary/egttools.numerical.structure.NetworkGroup", "_autosummary/egttools.numerical.structure.NetworkGroupSync", "_autosummary/egttools.numerical.structure.NetworkSync", "_autosummary/egttools.numerical.structure.factories", "_autosummary/egttools.numerical.structure.factories.AbstractSpatialGame", "_autosummary/egttools.numerical.structure.factories.Network", "_autosummary/egttools.numerical.structure.factories.NetworkGroup", "_autosummary/egttools.numerical.structure.factories.NetworkGroupSync", "_autosummary/egttools.numerical.structure.factories.NetworkSync", "_autosummary/egttools.numerical.structure.factories.network_factory", "_autosummary/egttools.numerical.structure.factories.network_group_factory", "_autosummary/egttools.numerical.structure.factories.network_group_sync_factory", "_autosummary/egttools.numerical.structure.factories.network_sync_factory", "_autosummary/egttools.plotting", "_autosummary/egttools.plotting.Simplex2D", "_autosummary/egttools.plotting.draw_invasion_diagram", "_autosummary/egttools.plotting.helpers", "_autosummary/egttools.plotting.helpers.NDArray", "_autosummary/egttools.plotting.helpers.add_arrow", "_autosummary/egttools.plotting.helpers.barycentric_to_xy_coordinates", "_autosummary/egttools.plotting.helpers.calculate_nb_states", "_autosummary/egttools.plotting.helpers.calculate_stability", "_autosummary/egttools.plotting.helpers.calculate_stationary_points", "_autosummary/egttools.plotting.helpers.check_if_point_in_unit_simplex", "_autosummary/egttools.plotting.helpers.find_roots_in_discrete_barycentric_coordinates", "_autosummary/egttools.plotting.helpers.find_where_point_is_in_simplex", "_autosummary/egttools.plotting.helpers.perturb_state", "_autosummary/egttools.plotting.helpers.perturb_state_discrete", "_autosummary/egttools.plotting.helpers.root", "_autosummary/egttools.plotting.helpers.sample_simplex", "_autosummary/egttools.plotting.helpers.simplex_iterator", "_autosummary/egttools.plotting.helpers.xy_to_barycentric_coordinates", "_autosummary/egttools.plotting.indicators", "_autosummary/egttools.plotting.indicators.AutoMinorLocator", "_autosummary/egttools.plotting.indicators.draw_invasion_diagram", "_autosummary/egttools.plotting.indicators.plot_gradient", "_autosummary/egttools.plotting.indicators.plot_gradients", "_autosummary/egttools.plotting.plot_gradient", "_autosummary/egttools.plotting.plot_gradients", "_autosummary/egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex", "_autosummary/egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots", "_autosummary/egttools.plotting.plot_replicator_dynamics_in_simplex", "_autosummary/egttools.plotting.simplex2d", "_autosummary/egttools.plotting.simplex2d.Circle", "_autosummary/egttools.plotting.simplex2d.Simplex2D", "_autosummary/egttools.plotting.simplex2d.TypeVar", "_autosummary/egttools.plotting.simplex2d.add_arrow", "_autosummary/egttools.plotting.simplex2d.barycentric_to_xy_coordinates", "_autosummary/egttools.plotting.simplex2d.calculate_nb_states", "_autosummary/egttools.plotting.simplex2d.find_where_point_is_in_simplex", "_autosummary/egttools.plotting.simplex2d.odeint", "_autosummary/egttools.plotting.simplex2d.perturb_state", "_autosummary/egttools.plotting.simplex2d.perturb_state_discrete", "_autosummary/egttools.plotting.simplex2d.sample_simplex", "_autosummary/egttools.plotting.simplex2d.sample_unit_simplex", "_autosummary/egttools.plotting.simplex2d.xy_to_barycentric_coordinates", "_autosummary/egttools.plotting.simplified", "_autosummary/egttools.plotting.simplified.AbstractGame", "_autosummary/egttools.plotting.simplified.Matrix2PlayerGameHolder", "_autosummary/egttools.plotting.simplified.MatrixNPlayerGameHolder", "_autosummary/egttools.plotting.simplified.NDArray", "_autosummary/egttools.plotting.simplified.PairwiseComparison", "_autosummary/egttools.plotting.simplified.Simplex2D", "_autosummary/egttools.plotting.simplified.barycentric_to_xy_coordinates", "_autosummary/egttools.plotting.simplified.calculate_nb_states", "_autosummary/egttools.plotting.simplified.calculate_stability", "_autosummary/egttools.plotting.simplified.check_if_there_is_random_drift", "_autosummary/egttools.plotting.simplified.check_replicator_stability_pairwise_games", "_autosummary/egttools.plotting.simplified.find_roots", "_autosummary/egttools.plotting.simplified.find_roots_in_discrete_barycentric_coordinates", "_autosummary/egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex", "_autosummary/egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots", "_autosummary/egttools.plotting.simplified.plot_replicator_dynamics_in_simplex", "_autosummary/egttools.plotting.simplified.replicator_equation", "_autosummary/egttools.plotting.simplified.replicator_equation_n_player", "_autosummary/egttools.plotting.simplified.vectorized_barycentric_to_xy_coordinates", "_autosummary/egttools.plotting.simplified.vectorized_replicator_equation", "_autosummary/egttools.plotting.simplified.vectorized_replicator_equation_n_player", "_autosummary/egttools.plotting.simplified.xy_to_barycentric_coordinates", "_autosummary/egttools.sample_simplex", "_autosummary/egttools.sample_unit_simplex", "_autosummary/egttools.show_build_info", "_autosummary/egttools.utils", "_autosummary/egttools.utils.AbstractGame", "_autosummary/egttools.utils.Graph", "_autosummary/egttools.utils.calculate_nb_unique_combinations", "_autosummary/egttools.utils.calculate_stationary_distribution", "_autosummary/egttools.utils.calculate_stationary_distribution_non_hermitian", "_autosummary/egttools.utils.combine", "_autosummary/egttools.utils.csc_matrix", "_autosummary/egttools.utils.csr_matrix", "_autosummary/egttools.utils.eigvals", "_autosummary/egttools.utils.find_saddle_type_and_gradient_direction", "_autosummary/egttools.utils.get_payoff_function", "_autosummary/egttools.utils.schur", "_autosummary/egttools.utils.transform_graph_to_dict_of_lists", "_autosummary/egttools.utils.transform_payoffs_to_pairwise", "_autosummary/egttools.utils.warn", "api", "examples", "examples/examples_of_use", "examples/hawk_dove_dynamics", "examples/hawk_dove_dynamics_pairwise_comparison", "examples/normal_form_game_mc_simulations", "examples/plot_invasion_diagram", "examples/plot_simplex", "examples/plot_simplex_simplified", "index", "installation", "tutorials", "tutorials/analytical_methods", "tutorials/create_cpp_game", "tutorials/create_new_behaviors", "tutorials/create_new_python_game", "tutorials/numerical_methods", "tutorials/plotting", "tutorials/references", "tutorials/utility_functions"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/egttools.rst", "_autosummary/egttools.analytical.rst", "_autosummary/egttools.analytical.PairwiseComparison.rst", "_autosummary/egttools.analytical.StochDynamics.rst", "_autosummary/egttools.analytical.replicator_equation.rst", "_autosummary/egttools.analytical.replicator_equation_n_player.rst", "_autosummary/egttools.analytical.sed_analytical.rst", "_autosummary/egttools.analytical.sed_analytical.StochDynamics.rst", "_autosummary/egttools.analytical.sed_analytical.calculate_nb_states.rst", "_autosummary/egttools.analytical.sed_analytical.calculate_state.rst", "_autosummary/egttools.analytical.sed_analytical.csr_matrix.rst", "_autosummary/egttools.analytical.sed_analytical.eig.rst", "_autosummary/egttools.analytical.sed_analytical.lil_matrix.rst", "_autosummary/egttools.analytical.sed_analytical.permutations.rst", "_autosummary/egttools.analytical.sed_analytical.replicator_equation.rst", "_autosummary/egttools.analytical.sed_analytical.replicator_equation_n_player.rst", "_autosummary/egttools.analytical.sed_analytical.sample_simplex.rst", "_autosummary/egttools.analytical.sed_analytical.warn.rst", "_autosummary/egttools.analytical.utils.rst", "_autosummary/egttools.analytical.utils.StochDynamics.rst", "_autosummary/egttools.analytical.utils.calculate_gradients.rst", "_autosummary/egttools.analytical.utils.check_if_point_in_unit_simplex.rst", "_autosummary/egttools.analytical.utils.check_if_there_is_random_drift.rst", "_autosummary/egttools.analytical.utils.check_replicator_stability_pairwise_games.rst", "_autosummary/egttools.analytical.utils.eigvals.rst", "_autosummary/egttools.analytical.utils.find_roots.rst", "_autosummary/egttools.analytical.utils.find_roots_and_stability.rst", "_autosummary/egttools.analytical.utils.get_pairwise_gradient_from_replicator.rst", "_autosummary/egttools.analytical.utils.get_pairwise_gradient_from_replicator_n_player.rst", "_autosummary/egttools.analytical.utils.replicator_equation.rst", "_autosummary/egttools.analytical.utils.replicator_equation_n_player.rst", "_autosummary/egttools.analytical.utils.root.rst", "_autosummary/egttools.analytical.utils.sample_unit_simplex.rst", "_autosummary/egttools.behaviors.rst", "_autosummary/egttools.behaviors.CPR.rst", "_autosummary/egttools.behaviors.CPR.abstract_cpr_strategy.rst", "_autosummary/egttools.behaviors.CPR.abstract_cpr_strategy.ABC.rst", "_autosummary/egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.rst", "_autosummary/egttools.behaviors.CPR.abstract_cpr_strategy.abstractmethod.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.FairExtraction.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.FakeStrategy.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.FixedExtraction.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.FreeStrategy.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.HighExtraction.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.NashExtraction.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.fair_extraction.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.high_extraction.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.nash_extraction.rst", "_autosummary/egttools.behaviors.CPR.cpr_strategies.payoff_no_commitment.rst", "_autosummary/egttools.behaviors.CRD.rst", "_autosummary/egttools.behaviors.CRD.AbstractCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.CRDMemoryOnePlayer.rst", "_autosummary/egttools.behaviors.CRD.GoalBasedCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.MovingAverageCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.TimeBasedCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.goal_based.rst", "_autosummary/egttools.behaviors.CRD.goal_based.AbstractCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.moving_average.rst", "_autosummary/egttools.behaviors.CRD.moving_average.AbstractCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.time_based.rst", "_autosummary/egttools.behaviors.CRD.time_based.AbstractCRDStrategy.rst", "_autosummary/egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy.rst", "_autosummary/egttools.behaviors.NormalForm.rst", "_autosummary/egttools.behaviors.NormalForm.AbstractNFGStrategy.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.ActionInertia.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Cooperator.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Defector.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Detective.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.EpsilonTFT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.GRIM.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.GenerousTFT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.GradualTFT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.ImperfectTFT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Pavlov.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.Random.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.TFT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.TFTT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.TTFT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT.rst", "_autosummary/egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy.rst", "_autosummary/egttools.behaviors.opinion_behaviors.rst", "_autosummary/egttools.behaviors.opinion_behaviors.Opinion.rst", "_autosummary/egttools.behaviors.opinion_behaviors.opinion_factory.rst", "_autosummary/egttools.behaviors.pgg_behaviors.rst", "_autosummary/egttools.behaviors.pgg_behaviors.PGGOneShotStrategy.rst", "_autosummary/egttools.behaviors.pgg_behaviors.player_factory.rst", "_autosummary/egttools.calculate_nb_states.rst", "_autosummary/egttools.calculate_state.rst", "_autosummary/egttools.calculate_strategies_distribution.rst", "_autosummary/egttools.datastructures.rst", "_autosummary/egttools.datastructures.DataTable.rst", "_autosummary/egttools.distributions.rst", "_autosummary/egttools.distributions.TimingUncertainty.rst", "_autosummary/egttools.distributions.binom.rst", "_autosummary/egttools.distributions.comb.rst", "_autosummary/egttools.distributions.multinomial_pmf.rst", "_autosummary/egttools.distributions.multivariate_hypergeometric_pdf.rst", "_autosummary/egttools.files.rst", "_autosummary/egttools.games.rst", "_autosummary/egttools.games.AbstractGame.rst", "_autosummary/egttools.games.AbstractNPlayerGame.rst", "_autosummary/egttools.games.AbstractSpatialGame.rst", "_autosummary/egttools.games.AbstractTwoPLayerGame.rst", "_autosummary/egttools.games.CRDGame.rst", "_autosummary/egttools.games.CRDGameTU.rst", "_autosummary/egttools.games.CommonPoolResourceDilemma.rst", "_autosummary/egttools.games.CommonPoolResourceDilemmaCommitment.rst", "_autosummary/egttools.games.InformalRiskGame.rst", "_autosummary/egttools.games.Matrix2PlayerGameHolder.rst", "_autosummary/egttools.games.MatrixNPlayerGameHolder.rst", "_autosummary/egttools.games.NPlayerStagHunt.rst", "_autosummary/egttools.games.NormalFormGame.rst", "_autosummary/egttools.games.NormalFormNetworkGame.rst", "_autosummary/egttools.games.OneShotCRD.rst", "_autosummary/egttools.games.OneShotCRDNetworkGame.rst", "_autosummary/egttools.games.PGG.rst", "_autosummary/egttools.games.abstract_games.rst", "_autosummary/egttools.games.abstract_games.AbstractGame.rst", "_autosummary/egttools.games.abstract_games.AbstractNPlayerGame.rst", "_autosummary/egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.rst", "_autosummary/egttools.games.abstract_games.AbstractTwoPLayerGame.rst", "_autosummary/egttools.games.abstract_games.abstractmethod.rst", "_autosummary/egttools.games.abstract_games.calculate_state.rst", "_autosummary/egttools.games.abstract_games.sample_simplex.rst", "_autosummary/egttools.games.informal_risk.rst", "_autosummary/egttools.games.informal_risk.AbstractGame.rst", "_autosummary/egttools.games.informal_risk.InformalRiskGame.rst", "_autosummary/egttools.games.informal_risk.calculate_nb_states.rst", "_autosummary/egttools.games.informal_risk.calculate_state.rst", "_autosummary/egttools.games.informal_risk.sample_simplex.rst", "_autosummary/egttools.games.nonlinear_games.rst", "_autosummary/egttools.games.nonlinear_games.AbstractCPRStrategy.rst", "_autosummary/egttools.games.nonlinear_games.AbstractNPlayerGame.rst", "_autosummary/egttools.games.nonlinear_games.CommonPoolResourceDilemma.rst", "_autosummary/egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.rst", "_autosummary/egttools.games.nonlinear_games.NPlayerStagHunt.rst", "_autosummary/egttools.games.nonlinear_games.calculate_state.rst", "_autosummary/egttools.games.nonlinear_games.sample_simplex.rst", "_autosummary/egttools.games.opinion_game.rst", "_autosummary/egttools.games.opinion_game.AbstractNPlayerGame.rst", "_autosummary/egttools.games.opinion_game.OpinionGame.rst", "_autosummary/egttools.games.opinion_game.moment.rst", "_autosummary/egttools.games.opinion_game.sample_simplex.rst", "_autosummary/egttools.games.opinion_game.sigmoid.rst", "_autosummary/egttools.games.pgg.rst", "_autosummary/egttools.games.pgg.AbstractNPlayerGame.rst", "_autosummary/egttools.games.pgg.PGG.rst", "_autosummary/egttools.games.pgg.PGGOneShotStrategy.rst", "_autosummary/egttools.games.pgg.sample_simplex.rst", "_autosummary/egttools.helpers.rst", "_autosummary/egttools.helpers.vectorized.rst", "_autosummary/egttools.helpers.vectorized.barycentric_to_xy_coordinates.rst", "_autosummary/egttools.helpers.vectorized.cpp_vectorized_replicator_equation_n_player.rst", "_autosummary/egttools.helpers.vectorized.replicator_equation_n_player.rst", "_autosummary/egttools.helpers.vectorized.vectorized_barycentric_to_xy_coordinates.rst", "_autosummary/egttools.helpers.vectorized.vectorized_replicator_equation.rst", "_autosummary/egttools.helpers.vectorized.vectorized_replicator_equation_n_player.rst", "_autosummary/egttools.is_blas_lapack_enabled.rst", "_autosummary/egttools.is_openmp_enabled.rst", "_autosummary/egttools.numerical.rst", "_autosummary/egttools.numerical.GeneralPopulationEvolver.rst", "_autosummary/egttools.numerical.NetworkEvolver.rst", "_autosummary/egttools.numerical.PairwiseComparisonNumerical.rst", "_autosummary/egttools.numerical.numerical_.rst", "_autosummary/egttools.numerical.numerical_.GeneralPopulationEvolver.rst", "_autosummary/egttools.numerical.numerical_.NetworkEvolver.rst", "_autosummary/egttools.numerical.numerical_.PairwiseComparison.rst", "_autosummary/egttools.numerical.numerical_.PairwiseComparisonNumerical.rst", "_autosummary/egttools.numerical.numerical_.calculate_nb_states.rst", "_autosummary/egttools.numerical.numerical_.calculate_state.rst", "_autosummary/egttools.numerical.numerical_.calculate_strategies_distribution.rst", "_autosummary/egttools.numerical.numerical_.is_blas_lapack_enabled.rst", "_autosummary/egttools.numerical.numerical_.is_openmp_enabled.rst", "_autosummary/egttools.numerical.numerical_.replicator_equation.rst", "_autosummary/egttools.numerical.numerical_.replicator_equation_n_player.rst", "_autosummary/egttools.numerical.numerical_.sample_simplex.rst", "_autosummary/egttools.numerical.numerical_.sample_simplex_directly.rst", "_autosummary/egttools.numerical.numerical_.sample_unit_simplex.rst", "_autosummary/egttools.numerical.numerical_.vectorized_replicator_equation_n_player.rst", "_autosummary/egttools.numerical.structure.rst", "_autosummary/egttools.numerical.structure.AbstractStructure.rst", "_autosummary/egttools.numerical.structure.Network.rst", "_autosummary/egttools.numerical.structure.NetworkGroup.rst", "_autosummary/egttools.numerical.structure.NetworkGroupSync.rst", "_autosummary/egttools.numerical.structure.NetworkSync.rst", "_autosummary/egttools.numerical.structure.factories.rst", "_autosummary/egttools.numerical.structure.factories.AbstractSpatialGame.rst", "_autosummary/egttools.numerical.structure.factories.Network.rst", "_autosummary/egttools.numerical.structure.factories.NetworkGroup.rst", "_autosummary/egttools.numerical.structure.factories.NetworkGroupSync.rst", "_autosummary/egttools.numerical.structure.factories.NetworkSync.rst", "_autosummary/egttools.numerical.structure.factories.network_factory.rst", "_autosummary/egttools.numerical.structure.factories.network_group_factory.rst", "_autosummary/egttools.numerical.structure.factories.network_group_sync_factory.rst", "_autosummary/egttools.numerical.structure.factories.network_sync_factory.rst", "_autosummary/egttools.plotting.rst", "_autosummary/egttools.plotting.Simplex2D.rst", "_autosummary/egttools.plotting.draw_invasion_diagram.rst", "_autosummary/egttools.plotting.helpers.rst", "_autosummary/egttools.plotting.helpers.NDArray.rst", "_autosummary/egttools.plotting.helpers.add_arrow.rst", "_autosummary/egttools.plotting.helpers.barycentric_to_xy_coordinates.rst", "_autosummary/egttools.plotting.helpers.calculate_nb_states.rst", "_autosummary/egttools.plotting.helpers.calculate_stability.rst", "_autosummary/egttools.plotting.helpers.calculate_stationary_points.rst", "_autosummary/egttools.plotting.helpers.check_if_point_in_unit_simplex.rst", "_autosummary/egttools.plotting.helpers.find_roots_in_discrete_barycentric_coordinates.rst", "_autosummary/egttools.plotting.helpers.find_where_point_is_in_simplex.rst", "_autosummary/egttools.plotting.helpers.perturb_state.rst", "_autosummary/egttools.plotting.helpers.perturb_state_discrete.rst", "_autosummary/egttools.plotting.helpers.root.rst", "_autosummary/egttools.plotting.helpers.sample_simplex.rst", "_autosummary/egttools.plotting.helpers.simplex_iterator.rst", "_autosummary/egttools.plotting.helpers.xy_to_barycentric_coordinates.rst", "_autosummary/egttools.plotting.indicators.rst", "_autosummary/egttools.plotting.indicators.AutoMinorLocator.rst", "_autosummary/egttools.plotting.indicators.draw_invasion_diagram.rst", "_autosummary/egttools.plotting.indicators.plot_gradient.rst", "_autosummary/egttools.plotting.indicators.plot_gradients.rst", "_autosummary/egttools.plotting.plot_gradient.rst", "_autosummary/egttools.plotting.plot_gradients.rst", "_autosummary/egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex.rst", "_autosummary/egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots.rst", "_autosummary/egttools.plotting.plot_replicator_dynamics_in_simplex.rst", "_autosummary/egttools.plotting.simplex2d.rst", "_autosummary/egttools.plotting.simplex2d.Circle.rst", "_autosummary/egttools.plotting.simplex2d.Simplex2D.rst", "_autosummary/egttools.plotting.simplex2d.TypeVar.rst", "_autosummary/egttools.plotting.simplex2d.add_arrow.rst", "_autosummary/egttools.plotting.simplex2d.barycentric_to_xy_coordinates.rst", "_autosummary/egttools.plotting.simplex2d.calculate_nb_states.rst", "_autosummary/egttools.plotting.simplex2d.find_where_point_is_in_simplex.rst", "_autosummary/egttools.plotting.simplex2d.odeint.rst", "_autosummary/egttools.plotting.simplex2d.perturb_state.rst", "_autosummary/egttools.plotting.simplex2d.perturb_state_discrete.rst", "_autosummary/egttools.plotting.simplex2d.sample_simplex.rst", "_autosummary/egttools.plotting.simplex2d.sample_unit_simplex.rst", "_autosummary/egttools.plotting.simplex2d.xy_to_barycentric_coordinates.rst", "_autosummary/egttools.plotting.simplified.rst", "_autosummary/egttools.plotting.simplified.AbstractGame.rst", "_autosummary/egttools.plotting.simplified.Matrix2PlayerGameHolder.rst", "_autosummary/egttools.plotting.simplified.MatrixNPlayerGameHolder.rst", "_autosummary/egttools.plotting.simplified.NDArray.rst", "_autosummary/egttools.plotting.simplified.PairwiseComparison.rst", "_autosummary/egttools.plotting.simplified.Simplex2D.rst", "_autosummary/egttools.plotting.simplified.barycentric_to_xy_coordinates.rst", "_autosummary/egttools.plotting.simplified.calculate_nb_states.rst", "_autosummary/egttools.plotting.simplified.calculate_stability.rst", "_autosummary/egttools.plotting.simplified.check_if_there_is_random_drift.rst", "_autosummary/egttools.plotting.simplified.check_replicator_stability_pairwise_games.rst", "_autosummary/egttools.plotting.simplified.find_roots.rst", "_autosummary/egttools.plotting.simplified.find_roots_in_discrete_barycentric_coordinates.rst", "_autosummary/egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex.rst", "_autosummary/egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots.rst", "_autosummary/egttools.plotting.simplified.plot_replicator_dynamics_in_simplex.rst", "_autosummary/egttools.plotting.simplified.replicator_equation.rst", "_autosummary/egttools.plotting.simplified.replicator_equation_n_player.rst", "_autosummary/egttools.plotting.simplified.vectorized_barycentric_to_xy_coordinates.rst", "_autosummary/egttools.plotting.simplified.vectorized_replicator_equation.rst", "_autosummary/egttools.plotting.simplified.vectorized_replicator_equation_n_player.rst", "_autosummary/egttools.plotting.simplified.xy_to_barycentric_coordinates.rst", "_autosummary/egttools.sample_simplex.rst", "_autosummary/egttools.sample_unit_simplex.rst", "_autosummary/egttools.show_build_info.rst", "_autosummary/egttools.utils.rst", "_autosummary/egttools.utils.AbstractGame.rst", "_autosummary/egttools.utils.Graph.rst", "_autosummary/egttools.utils.calculate_nb_unique_combinations.rst", "_autosummary/egttools.utils.calculate_stationary_distribution.rst", "_autosummary/egttools.utils.calculate_stationary_distribution_non_hermitian.rst", "_autosummary/egttools.utils.combine.rst", "_autosummary/egttools.utils.csc_matrix.rst", "_autosummary/egttools.utils.csr_matrix.rst", "_autosummary/egttools.utils.eigvals.rst", "_autosummary/egttools.utils.find_saddle_type_and_gradient_direction.rst", "_autosummary/egttools.utils.get_payoff_function.rst", "_autosummary/egttools.utils.schur.rst", "_autosummary/egttools.utils.transform_graph_to_dict_of_lists.rst", "_autosummary/egttools.utils.transform_payoffs_to_pairwise.rst", "_autosummary/egttools.utils.warn.rst", "api.rst", "examples.rst", "examples/examples_of_use.ipynb", "examples/hawk_dove_dynamics.ipynb", "examples/hawk_dove_dynamics_pairwise_comparison.ipynb", "examples/normal_form_game_mc_simulations.ipynb", "examples/plot_invasion_diagram.ipynb", "examples/plot_simplex.ipynb", "examples/plot_simplex_simplified.ipynb", "index.rst", "installation.rst", "tutorials.rst", "tutorials/analytical_methods.rst", "tutorials/create_cpp_game.rst", "tutorials/create_new_behaviors.rst", "tutorials/create_new_python_game.rst", "tutorials/numerical_methods.rst", "tutorials/plotting.rst", "tutorials/references.rst", "tutorials/utility_functions.rst"], "indexentries": {"__abs__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__abs__", false]], "__abs__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__abs__", false], [285, "egttools.utils.csr_matrix.__abs__", false]], "__abs__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__abs__", false]], "__abstractmethods__ (abc attribute)": [[36, "egttools.behaviors.CPR.abstract_cpr_strategy.ABC.__abstractmethods__", false]], "__abstractmethods__ (abstractcprstrategy attribute)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.__abstractmethods__", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.__abstractmethods__", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.__abstractmethods__", false]], "__abstractmethods__ (commitmentstrategy attribute)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.__abstractmethods__", false]], "__abstractmethods__ (fairextraction attribute)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.__abstractmethods__", false]], "__abstractmethods__ (fakestrategy attribute)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.__abstractmethods__", false]], "__abstractmethods__ (fixedextraction attribute)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.__abstractmethods__", false]], "__abstractmethods__ (freestrategy attribute)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.__abstractmethods__", false]], "__abstractmethods__ (highextraction attribute)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.__abstractmethods__", false]], "__abstractmethods__ (nashextraction attribute)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.__abstractmethods__", false]], "__add__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__add__", false]], "__add__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__add__", false], [285, "egttools.utils.csr_matrix.__add__", false]], "__add__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__add__", false]], "__annotations__ (abc attribute)": [[36, "egttools.behaviors.CPR.abstract_cpr_strategy.ABC.__annotations__", false]], "__annotations__ (abstractcprstrategy attribute)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.__annotations__", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.__annotations__", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.__annotations__", false]], "__annotations__ (abstractcrdstrategy attribute)": [[53, "egttools.behaviors.CRD.AbstractCRDStrategy.__annotations__", false], [59, "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy.__annotations__", false], [62, "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy.__annotations__", false], [65, "egttools.behaviors.CRD.time_based.AbstractCRDStrategy.__annotations__", false]], "__annotations__ (abstractgame attribute)": [[112, "egttools.games.AbstractGame.__annotations__", false], [130, "egttools.games.abstract_games.AbstractGame.__annotations__", false], [138, "egttools.games.informal_risk.AbstractGame.__annotations__", false], [252, "egttools.plotting.simplified.AbstractGame.__annotations__", false], [278, "egttools.utils.AbstractGame.__annotations__", false]], "__annotations__ (abstractnfgstrategy attribute)": [[68, "egttools.behaviors.NormalForm.AbstractNFGStrategy.__annotations__", false], [88, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy.__annotations__", false]], "__annotations__ (abstractnplayergame attribute)": [[113, "egttools.games.AbstractNPlayerGame.__annotations__", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.__annotations__", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.__annotations__", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.__annotations__", false], [158, "egttools.games.pgg.AbstractNPlayerGame.__annotations__", false]], "__annotations__ (abstractnplayergameexpectedpayoff attribute)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.__annotations__", false]], "__annotations__ (abstractspatialgame attribute)": [[114, "egttools.games.AbstractSpatialGame.__annotations__", false], [199, "egttools.numerical.structure.factories.AbstractSpatialGame.__annotations__", false]], "__annotations__ (abstractstructure attribute)": [[193, "egttools.numerical.structure.AbstractStructure.__annotations__", false]], "__annotations__ (abstracttwoplayergame attribute)": [[115, "egttools.games.AbstractTwoPLayerGame.__annotations__", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.__annotations__", false]], "__annotations__ (actioninertia attribute)": [[70, "egttools.behaviors.NormalForm.TwoActions.ActionInertia.__annotations__", false]], "__annotations__ (autominorlocator attribute)": [[228, "egttools.plotting.indicators.AutoMinorLocator.__annotations__", false]], "__annotations__ (circle attribute)": [[238, "egttools.plotting.simplex2d.Circle.__annotations__", false]], "__annotations__ (commitmentstrategy attribute)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.__annotations__", false]], "__annotations__ (commonpoolresourcedilemma attribute)": [[118, "egttools.games.CommonPoolResourceDilemma.__annotations__", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.__annotations__", false]], "__annotations__ (commonpoolresourcedilemmacommitment attribute)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.__annotations__", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.__annotations__", false]], "__annotations__ (cooperator attribute)": [[71, "egttools.behaviors.NormalForm.TwoActions.Cooperator.__annotations__", false]], "__annotations__ (crdgame attribute)": [[116, "egttools.games.CRDGame.__annotations__", false]], "__annotations__ (crdgametu attribute)": [[117, "egttools.games.CRDGameTU.__annotations__", false]], "__annotations__ (crdmemoryoneplayer attribute)": [[54, "egttools.behaviors.CRD.CRDMemoryOnePlayer.__annotations__", false]], "__annotations__ (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.__annotations__", false]], "__annotations__ (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__annotations__", false], [285, "egttools.utils.csr_matrix.__annotations__", false]], "__annotations__ (datatable attribute)": [[103, "egttools.datastructures.DataTable.__annotations__", false]], "__annotations__ (defector attribute)": [[72, "egttools.behaviors.NormalForm.TwoActions.Defector.__annotations__", false]], "__annotations__ (detective attribute)": [[73, "egttools.behaviors.NormalForm.TwoActions.Detective.__annotations__", false], [89, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective.__annotations__", false]], "__annotations__ (epsilongrim attribute)": [[74, "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM.__annotations__", false], [90, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM.__annotations__", false]], "__annotations__ (epsilontft attribute)": [[75, "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT.__annotations__", false], [91, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT.__annotations__", false]], "__annotations__ (fairextraction attribute)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.__annotations__", false]], "__annotations__ (fakestrategy attribute)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.__annotations__", false]], "__annotations__ (fixedextraction attribute)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.__annotations__", false]], "__annotations__ (freestrategy attribute)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.__annotations__", false]], "__annotations__ (generalpopulationevolver attribute)": [[173, "egttools.numerical.GeneralPopulationEvolver.__annotations__", false], [177, "egttools.numerical.numerical_.GeneralPopulationEvolver.__annotations__", false]], "__annotations__ (generoustft attribute)": [[77, "egttools.behaviors.NormalForm.TwoActions.GenerousTFT.__annotations__", false]], "__annotations__ (goalbasedcrdstrategy attribute)": [[55, "egttools.behaviors.CRD.GoalBasedCRDStrategy.__annotations__", false], [60, "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy.__annotations__", false]], "__annotations__ (gradualtft attribute)": [[78, "egttools.behaviors.NormalForm.TwoActions.GradualTFT.__annotations__", false]], "__annotations__ (graph attribute)": [[279, "egttools.utils.Graph.__annotations__", false]], "__annotations__ (grim attribute)": [[76, "egttools.behaviors.NormalForm.TwoActions.GRIM.__annotations__", false]], "__annotations__ (highextraction attribute)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.__annotations__", false]], "__annotations__ (imperfecttft attribute)": [[79, "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT.__annotations__", false]], "__annotations__ (informalriskgame attribute)": [[120, "egttools.games.InformalRiskGame.__annotations__", false], [139, "egttools.games.informal_risk.InformalRiskGame.__annotations__", false]], "__annotations__ (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__annotations__", false]], "__annotations__ (matrix2playergameholder attribute)": [[121, "egttools.games.Matrix2PlayerGameHolder.__annotations__", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.__annotations__", false]], "__annotations__ (matrixnplayergameholder attribute)": [[122, "egttools.games.MatrixNPlayerGameHolder.__annotations__", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.__annotations__", false]], "__annotations__ (memoryonestrategy attribute)": [[80, "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy.__annotations__", false], [92, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy.__annotations__", false]], "__annotations__ (movingaveragecrdstrategy attribute)": [[56, "egttools.behaviors.CRD.MovingAverageCRDStrategy.__annotations__", false], [63, "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy.__annotations__", false]], "__annotations__ (nashextraction attribute)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.__annotations__", false]], "__annotations__ (network attribute)": [[194, "egttools.numerical.structure.Network.__annotations__", false], [200, "egttools.numerical.structure.factories.Network.__annotations__", false]], "__annotations__ (networkevolver attribute)": [[174, "egttools.numerical.NetworkEvolver.__annotations__", false], [178, "egttools.numerical.numerical_.NetworkEvolver.__annotations__", false]], "__annotations__ (networkgroup attribute)": [[195, "egttools.numerical.structure.NetworkGroup.__annotations__", false], [201, "egttools.numerical.structure.factories.NetworkGroup.__annotations__", false]], "__annotations__ (networkgroupsync attribute)": [[196, "egttools.numerical.structure.NetworkGroupSync.__annotations__", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.__annotations__", false]], "__annotations__ (networksync attribute)": [[197, "egttools.numerical.structure.NetworkSync.__annotations__", false], [203, "egttools.numerical.structure.factories.NetworkSync.__annotations__", false]], "__annotations__ (normalformgame attribute)": [[124, "egttools.games.NormalFormGame.__annotations__", false]], "__annotations__ (normalformnetworkgame attribute)": [[125, "egttools.games.NormalFormNetworkGame.__annotations__", false]], "__annotations__ (nplayerstaghunt attribute)": [[123, "egttools.games.NPlayerStagHunt.__annotations__", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.__annotations__", false]], "__annotations__ (oneshotcrd attribute)": [[126, "egttools.games.OneShotCRD.__annotations__", false]], "__annotations__ (oneshotcrdnetworkgame attribute)": [[127, "egttools.games.OneShotCRDNetworkGame.__annotations__", false]], "__annotations__ (opinion attribute)": [[94, "egttools.behaviors.opinion_behaviors.Opinion.__annotations__", false]], "__annotations__ (opiniongame attribute)": [[153, "egttools.games.opinion_game.OpinionGame.__annotations__", false]], "__annotations__ (pairwisecomparison attribute)": [[2, "egttools.analytical.PairwiseComparison.__annotations__", false], [179, "egttools.numerical.numerical_.PairwiseComparison.__annotations__", false], [256, "egttools.plotting.simplified.PairwiseComparison.__annotations__", false]], "__annotations__ (pairwisecomparisonnumerical attribute)": [[175, "egttools.numerical.PairwiseComparisonNumerical.__annotations__", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.__annotations__", false]], "__annotations__ (pavlov attribute)": [[81, "egttools.behaviors.NormalForm.TwoActions.Pavlov.__annotations__", false]], "__annotations__ (pgg attribute)": [[128, "egttools.games.PGG.__annotations__", false], [159, "egttools.games.pgg.PGG.__annotations__", false]], "__annotations__ (pggoneshotstrategy attribute)": [[97, "egttools.behaviors.pgg_behaviors.PGGOneShotStrategy.__annotations__", false], [160, "egttools.games.pgg.PGGOneShotStrategy.__annotations__", false]], "__annotations__ (random attribute)": [[82, "egttools.behaviors.NormalForm.TwoActions.Random.__annotations__", false]], "__annotations__ (simplex2d attribute)": [[209, "egttools.plotting.Simplex2D.__annotations__", false], [239, "egttools.plotting.simplex2d.Simplex2D.__annotations__", false], [257, "egttools.plotting.simplified.Simplex2D.__annotations__", false]], "__annotations__ (stochdynamics attribute)": [[3, "egttools.analytical.StochDynamics.__annotations__", false], [7, "egttools.analytical.sed_analytical.StochDynamics.__annotations__", false], [19, "egttools.analytical.utils.StochDynamics.__annotations__", false]], "__annotations__ (suspicioustft attribute)": [[83, "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT.__annotations__", false]], "__annotations__ (tft attribute)": [[84, "egttools.behaviors.NormalForm.TwoActions.TFT.__annotations__", false]], "__annotations__ (tftt attribute)": [[85, "egttools.behaviors.NormalForm.TwoActions.TFTT.__annotations__", false]], "__annotations__ (timebasedcrdstrategy attribute)": [[57, "egttools.behaviors.CRD.TimeBasedCRDStrategy.__annotations__", false], [66, "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy.__annotations__", false]], "__annotations__ (timinguncertainty attribute)": [[105, "egttools.distributions.TimingUncertainty.__annotations__", false]], "__annotations__ (ttft attribute)": [[86, "egttools.behaviors.NormalForm.TwoActions.TTFT.__annotations__", false]], "__annotations__ (typevar attribute)": [[240, "egttools.plotting.simplex2d.TypeVar.__annotations__", false]], "__array_priority__ (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.__array_priority__", false]], "__array_priority__ (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__array_priority__", false], [285, "egttools.utils.csr_matrix.__array_priority__", false]], "__array_priority__ (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__array_priority__", false]], "__bool__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__bool__", false]], "__bool__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__bool__", false], [285, "egttools.utils.csr_matrix.__bool__", false]], "__bool__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__bool__", false]], "__bound__ (typevar attribute)": [[240, "egttools.plotting.simplex2d.TypeVar.__bound__", false]], "__call__() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.__call__", false]], "__constraints__ (typevar attribute)": [[240, "egttools.plotting.simplex2d.TypeVar.__constraints__", false]], "__contains__() (graph method)": [[279, "egttools.utils.Graph.__contains__", false]], "__contravariant__ (typevar attribute)": [[240, "egttools.plotting.simplex2d.TypeVar.__contravariant__", false]], "__copy__() (typevar method)": [[240, "egttools.plotting.simplex2d.TypeVar.__copy__", false]], "__covariant__ (typevar attribute)": [[240, "egttools.plotting.simplex2d.TypeVar.__covariant__", false]], "__deepcopy__() (typevar method)": [[240, "egttools.plotting.simplex2d.TypeVar.__deepcopy__", false]], "__div__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__div__", false]], "__div__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__div__", false], [285, "egttools.utils.csr_matrix.__div__", false]], "__div__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__div__", false]], "__eq__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__eq__", false]], "__eq__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__eq__", false], [285, "egttools.utils.csr_matrix.__eq__", false]], "__eq__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__eq__", false]], "__ge__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__ge__", false]], "__ge__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__ge__", false], [285, "egttools.utils.csr_matrix.__ge__", false]], "__ge__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__ge__", false]], "__getattribute__() (permutations method)": [[13, "egttools.analytical.sed_analytical.permutations.__getattribute__", false]], "__getitem__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__getitem__", false]], "__getitem__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__getitem__", false], [285, "egttools.utils.csr_matrix.__getitem__", false]], "__getitem__() (graph method)": [[279, "egttools.utils.Graph.__getitem__", false]], "__getitem__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__getitem__", false]], "__gt__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__gt__", false]], "__gt__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__gt__", false], [285, "egttools.utils.csr_matrix.__gt__", false]], "__gt__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__gt__", false]], "__hash__ (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.__hash__", false]], "__hash__ (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__hash__", false], [285, "egttools.utils.csr_matrix.__hash__", false]], "__hash__ (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__hash__", false]], "__iadd__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__iadd__", false]], "__iadd__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__iadd__", false], [285, "egttools.utils.csr_matrix.__iadd__", false]], "__iadd__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__iadd__", false]], "__idiv__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__idiv__", false]], "__idiv__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__idiv__", false], [285, "egttools.utils.csr_matrix.__idiv__", false]], "__idiv__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__idiv__", false]], "__imul__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__imul__", false]], "__imul__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__imul__", false], [285, "egttools.utils.csr_matrix.__imul__", false]], "__imul__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__imul__", false]], "__init__() (abstractcrdstrategy method)": [[53, "egttools.behaviors.CRD.AbstractCRDStrategy.__init__", false], [59, "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy.__init__", false], [62, "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy.__init__", false], [65, "egttools.behaviors.CRD.time_based.AbstractCRDStrategy.__init__", false]], "__init__() (abstractgame method)": [[112, "egttools.games.AbstractGame.__init__", false], [130, "egttools.games.abstract_games.AbstractGame.__init__", false], [138, "egttools.games.informal_risk.AbstractGame.__init__", false], [252, "egttools.plotting.simplified.AbstractGame.__init__", false], [278, "egttools.utils.AbstractGame.__init__", false]], "__init__() (abstractnfgstrategy method)": [[68, "egttools.behaviors.NormalForm.AbstractNFGStrategy.__init__", false], [88, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy.__init__", false]], "__init__() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.__init__", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.__init__", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.__init__", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.__init__", false], [158, "egttools.games.pgg.AbstractNPlayerGame.__init__", false]], "__init__() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.__init__", false]], "__init__() (abstractspatialgame method)": [[114, "egttools.games.AbstractSpatialGame.__init__", false], [199, "egttools.numerical.structure.factories.AbstractSpatialGame.__init__", false]], "__init__() (abstractstructure method)": [[193, "egttools.numerical.structure.AbstractStructure.__init__", false]], "__init__() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.__init__", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.__init__", false]], "__init__() (actioninertia method)": [[70, "egttools.behaviors.NormalForm.TwoActions.ActionInertia.__init__", false]], "__init__() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.__init__", false]], "__init__() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.__init__", false]], "__init__() (commitmentstrategy method)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.__init__", false]], "__init__() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.__init__", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.__init__", false]], "__init__() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.__init__", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.__init__", false]], "__init__() (cooperator method)": [[71, "egttools.behaviors.NormalForm.TwoActions.Cooperator.__init__", false]], "__init__() (crdgame method)": [[116, "egttools.games.CRDGame.__init__", false]], "__init__() (crdgametu method)": [[117, "egttools.games.CRDGameTU.__init__", false]], "__init__() (crdmemoryoneplayer method)": [[54, "egttools.behaviors.CRD.CRDMemoryOnePlayer.__init__", false]], "__init__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__init__", false]], "__init__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__init__", false], [285, "egttools.utils.csr_matrix.__init__", false]], "__init__() (datatable method)": [[103, "egttools.datastructures.DataTable.__init__", false]], "__init__() (defector method)": [[72, "egttools.behaviors.NormalForm.TwoActions.Defector.__init__", false]], "__init__() (detective method)": [[73, "egttools.behaviors.NormalForm.TwoActions.Detective.__init__", false], [89, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective.__init__", false]], "__init__() (epsilongrim method)": [[74, "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM.__init__", false], [90, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM.__init__", false]], "__init__() (epsilontft method)": [[75, "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT.__init__", false], [91, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT.__init__", false]], "__init__() (fixedextraction method)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.__init__", false]], "__init__() (generalpopulationevolver method)": [[173, "egttools.numerical.GeneralPopulationEvolver.__init__", false], [177, "egttools.numerical.numerical_.GeneralPopulationEvolver.__init__", false]], "__init__() (generoustft method)": [[77, "egttools.behaviors.NormalForm.TwoActions.GenerousTFT.__init__", false]], "__init__() (goalbasedcrdstrategy method)": [[55, "egttools.behaviors.CRD.GoalBasedCRDStrategy.__init__", false], [60, "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy.__init__", false]], "__init__() (gradualtft method)": [[78, "egttools.behaviors.NormalForm.TwoActions.GradualTFT.__init__", false]], "__init__() (graph method)": [[279, "egttools.utils.Graph.__init__", false]], "__init__() (grim method)": [[76, "egttools.behaviors.NormalForm.TwoActions.GRIM.__init__", false]], "__init__() (imperfecttft method)": [[79, "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT.__init__", false]], "__init__() (informalriskgame method)": [[120, "egttools.games.InformalRiskGame.__init__", false], [139, "egttools.games.informal_risk.InformalRiskGame.__init__", false]], "__init__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__init__", false]], "__init__() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.__init__", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.__init__", false]], "__init__() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.__init__", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.__init__", false]], "__init__() (memoryonestrategy method)": [[80, "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy.__init__", false], [92, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy.__init__", false]], "__init__() (movingaveragecrdstrategy method)": [[56, "egttools.behaviors.CRD.MovingAverageCRDStrategy.__init__", false], [63, "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy.__init__", false]], "__init__() (network method)": [[194, "egttools.numerical.structure.Network.__init__", false], [200, "egttools.numerical.structure.factories.Network.__init__", false]], "__init__() (networkevolver method)": [[174, "egttools.numerical.NetworkEvolver.__init__", false], [178, "egttools.numerical.numerical_.NetworkEvolver.__init__", false]], "__init__() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.__init__", false], [201, "egttools.numerical.structure.factories.NetworkGroup.__init__", false]], "__init__() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.__init__", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.__init__", false]], "__init__() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.__init__", false], [203, "egttools.numerical.structure.factories.NetworkSync.__init__", false]], "__init__() (normalformgame method)": [[124, "egttools.games.NormalFormGame.__init__", false]], "__init__() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.__init__", false]], "__init__() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.__init__", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.__init__", false]], "__init__() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.__init__", false]], "__init__() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.__init__", false]], "__init__() (opinion method)": [[94, "egttools.behaviors.opinion_behaviors.Opinion.__init__", false]], "__init__() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.__init__", false]], "__init__() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.__init__", false], [179, "egttools.numerical.numerical_.PairwiseComparison.__init__", false], [256, "egttools.plotting.simplified.PairwiseComparison.__init__", false]], "__init__() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.__init__", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.__init__", false]], "__init__() (pavlov method)": [[81, "egttools.behaviors.NormalForm.TwoActions.Pavlov.__init__", false]], "__init__() (pgg method)": [[128, "egttools.games.PGG.__init__", false], [159, "egttools.games.pgg.PGG.__init__", false]], "__init__() (pggoneshotstrategy method)": [[97, "egttools.behaviors.pgg_behaviors.PGGOneShotStrategy.__init__", false], [160, "egttools.games.pgg.PGGOneShotStrategy.__init__", false]], "__init__() (random method)": [[82, "egttools.behaviors.NormalForm.TwoActions.Random.__init__", false]], "__init__() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.__init__", false], [239, "egttools.plotting.simplex2d.Simplex2D.__init__", false], [257, "egttools.plotting.simplified.Simplex2D.__init__", false]], "__init__() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.__init__", false], [7, "egttools.analytical.sed_analytical.StochDynamics.__init__", false], [19, "egttools.analytical.utils.StochDynamics.__init__", false]], "__init__() (suspicioustft method)": [[83, "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT.__init__", false]], "__init__() (tft method)": [[84, "egttools.behaviors.NormalForm.TwoActions.TFT.__init__", false]], "__init__() (tftt method)": [[85, "egttools.behaviors.NormalForm.TwoActions.TFTT.__init__", false]], "__init__() (timebasedcrdstrategy method)": [[57, "egttools.behaviors.CRD.TimeBasedCRDStrategy.__init__", false], [66, "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy.__init__", false]], "__init__() (timinguncertainty method)": [[105, "egttools.distributions.TimingUncertainty.__init__", false]], "__init__() (ttft method)": [[86, "egttools.behaviors.NormalForm.TwoActions.TTFT.__init__", false]], "__init__() (typevar method)": [[240, "egttools.plotting.simplex2d.TypeVar.__init__", false]], "__init_subclass__() (circle class method)": [[238, "egttools.plotting.simplex2d.Circle.__init_subclass__", false]], "__init_subclass__() (typevar class method)": [[240, "egttools.plotting.simplex2d.TypeVar.__init_subclass__", false]], "__isub__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__isub__", false]], "__isub__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__isub__", false], [285, "egttools.utils.csr_matrix.__isub__", false]], "__isub__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__isub__", false]], "__iter__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__iter__", false]], "__iter__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__iter__", false], [285, "egttools.utils.csr_matrix.__iter__", false]], "__iter__() (graph method)": [[279, "egttools.utils.Graph.__iter__", false]], "__iter__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__iter__", false]], "__iter__() (permutations method)": [[13, "egttools.analytical.sed_analytical.permutations.__iter__", false]], "__itruediv__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__itruediv__", false]], "__itruediv__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__itruediv__", false], [285, "egttools.utils.csr_matrix.__itruediv__", false]], "__itruediv__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__itruediv__", false]], "__le__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__le__", false]], "__le__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__le__", false], [285, "egttools.utils.csr_matrix.__le__", false]], "__le__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__le__", false]], "__len__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__len__", false]], "__len__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__len__", false], [285, "egttools.utils.csr_matrix.__len__", false]], "__len__() (graph method)": [[279, "egttools.utils.Graph.__len__", false]], "__len__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__len__", false]], "__lt__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__lt__", false]], "__lt__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__lt__", false], [285, "egttools.utils.csr_matrix.__lt__", false]], "__lt__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__lt__", false]], "__matmul__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__matmul__", false]], "__matmul__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__matmul__", false], [285, "egttools.utils.csr_matrix.__matmul__", false]], "__matmul__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__matmul__", false]], "__mul__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__mul__", false]], "__mul__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__mul__", false], [285, "egttools.utils.csr_matrix.__mul__", false]], "__mul__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__mul__", false]], "__name__ (typevar attribute)": [[240, "egttools.plotting.simplex2d.TypeVar.__name__", false]], "__ne__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__ne__", false]], "__ne__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__ne__", false], [285, "egttools.utils.csr_matrix.__ne__", false]], "__ne__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__ne__", false]], "__neg__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__neg__", false]], "__neg__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__neg__", false], [285, "egttools.utils.csr_matrix.__neg__", false]], "__neg__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__neg__", false]], "__networkx_backend__ (graph attribute)": [[279, "egttools.utils.Graph.__networkx_backend__", false]], "__new__() (abstractcrdstrategy method)": [[53, "egttools.behaviors.CRD.AbstractCRDStrategy.__new__", false], [59, "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy.__new__", false], [62, "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy.__new__", false], [65, "egttools.behaviors.CRD.time_based.AbstractCRDStrategy.__new__", false]], "__new__() (abstractgame method)": [[112, "egttools.games.AbstractGame.__new__", false], [130, "egttools.games.abstract_games.AbstractGame.__new__", false], [138, "egttools.games.informal_risk.AbstractGame.__new__", false], [252, "egttools.plotting.simplified.AbstractGame.__new__", false], [278, "egttools.utils.AbstractGame.__new__", false]], "__new__() (abstractnfgstrategy method)": [[68, "egttools.behaviors.NormalForm.AbstractNFGStrategy.__new__", false], [88, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy.__new__", false]], "__new__() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.__new__", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.__new__", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.__new__", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.__new__", false], [158, "egttools.games.pgg.AbstractNPlayerGame.__new__", false]], "__new__() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.__new__", false]], "__new__() (abstractspatialgame method)": [[114, "egttools.games.AbstractSpatialGame.__new__", false], [199, "egttools.numerical.structure.factories.AbstractSpatialGame.__new__", false]], "__new__() (abstractstructure method)": [[193, "egttools.numerical.structure.AbstractStructure.__new__", false]], "__new__() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.__new__", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.__new__", false]], "__new__() (actioninertia method)": [[70, "egttools.behaviors.NormalForm.TwoActions.ActionInertia.__new__", false]], "__new__() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.__new__", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.__new__", false]], "__new__() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.__new__", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.__new__", false]], "__new__() (cooperator method)": [[71, "egttools.behaviors.NormalForm.TwoActions.Cooperator.__new__", false]], "__new__() (crdgame method)": [[116, "egttools.games.CRDGame.__new__", false]], "__new__() (crdgametu method)": [[117, "egttools.games.CRDGameTU.__new__", false]], "__new__() (crdmemoryoneplayer method)": [[54, "egttools.behaviors.CRD.CRDMemoryOnePlayer.__new__", false]], "__new__() (datatable method)": [[103, "egttools.datastructures.DataTable.__new__", false]], "__new__() (defector method)": [[72, "egttools.behaviors.NormalForm.TwoActions.Defector.__new__", false]], "__new__() (detective method)": [[73, "egttools.behaviors.NormalForm.TwoActions.Detective.__new__", false], [89, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective.__new__", false]], "__new__() (epsilongrim method)": [[74, "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM.__new__", false], [90, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM.__new__", false]], "__new__() (epsilontft method)": [[75, "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT.__new__", false], [91, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT.__new__", false]], "__new__() (generalpopulationevolver method)": [[173, "egttools.numerical.GeneralPopulationEvolver.__new__", false], [177, "egttools.numerical.numerical_.GeneralPopulationEvolver.__new__", false]], "__new__() (generoustft method)": [[77, "egttools.behaviors.NormalForm.TwoActions.GenerousTFT.__new__", false]], "__new__() (goalbasedcrdstrategy method)": [[55, "egttools.behaviors.CRD.GoalBasedCRDStrategy.__new__", false], [60, "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy.__new__", false]], "__new__() (gradualtft method)": [[78, "egttools.behaviors.NormalForm.TwoActions.GradualTFT.__new__", false]], "__new__() (grim method)": [[76, "egttools.behaviors.NormalForm.TwoActions.GRIM.__new__", false]], "__new__() (imperfecttft method)": [[79, "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT.__new__", false]], "__new__() (informalriskgame method)": [[120, "egttools.games.InformalRiskGame.__new__", false], [139, "egttools.games.informal_risk.InformalRiskGame.__new__", false]], "__new__() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.__new__", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.__new__", false]], "__new__() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.__new__", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.__new__", false]], "__new__() (memoryonestrategy method)": [[80, "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy.__new__", false], [92, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy.__new__", false]], "__new__() (movingaveragecrdstrategy method)": [[56, "egttools.behaviors.CRD.MovingAverageCRDStrategy.__new__", false], [63, "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy.__new__", false]], "__new__() (network method)": [[194, "egttools.numerical.structure.Network.__new__", false], [200, "egttools.numerical.structure.factories.Network.__new__", false]], "__new__() (networkevolver method)": [[174, "egttools.numerical.NetworkEvolver.__new__", false], [178, "egttools.numerical.numerical_.NetworkEvolver.__new__", false]], "__new__() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.__new__", false], [201, "egttools.numerical.structure.factories.NetworkGroup.__new__", false]], "__new__() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.__new__", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.__new__", false]], "__new__() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.__new__", false], [203, "egttools.numerical.structure.factories.NetworkSync.__new__", false]], "__new__() (normalformgame method)": [[124, "egttools.games.NormalFormGame.__new__", false]], "__new__() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.__new__", false]], "__new__() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.__new__", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.__new__", false]], "__new__() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.__new__", false]], "__new__() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.__new__", false]], "__new__() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.__new__", false]], "__new__() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.__new__", false], [179, "egttools.numerical.numerical_.PairwiseComparison.__new__", false], [256, "egttools.plotting.simplified.PairwiseComparison.__new__", false]], "__new__() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.__new__", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.__new__", false]], "__new__() (pavlov method)": [[81, "egttools.behaviors.NormalForm.TwoActions.Pavlov.__new__", false]], "__new__() (permutations method)": [[13, "egttools.analytical.sed_analytical.permutations.__new__", false]], "__new__() (pgg method)": [[128, "egttools.games.PGG.__new__", false], [159, "egttools.games.pgg.PGG.__new__", false]], "__new__() (random method)": [[82, "egttools.behaviors.NormalForm.TwoActions.Random.__new__", false]], "__new__() (suspicioustft method)": [[83, "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT.__new__", false]], "__new__() (tft method)": [[84, "egttools.behaviors.NormalForm.TwoActions.TFT.__new__", false]], "__new__() (tftt method)": [[85, "egttools.behaviors.NormalForm.TwoActions.TFTT.__new__", false]], "__new__() (timebasedcrdstrategy method)": [[57, "egttools.behaviors.CRD.TimeBasedCRDStrategy.__new__", false], [66, "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy.__new__", false]], "__new__() (timinguncertainty method)": [[105, "egttools.distributions.TimingUncertainty.__new__", false]], "__new__() (ttft method)": [[86, "egttools.behaviors.NormalForm.TwoActions.TTFT.__new__", false]], "__next__() (permutations method)": [[13, "egttools.analytical.sed_analytical.permutations.__next__", false]], "__nonzero__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__nonzero__", false]], "__nonzero__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__nonzero__", false], [285, "egttools.utils.csr_matrix.__nonzero__", false]], "__nonzero__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__nonzero__", false]], "__or__() (typevar method)": [[240, "egttools.plotting.simplex2d.TypeVar.__or__", false]], "__pow__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__pow__", false]], "__pow__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__pow__", false], [285, "egttools.utils.csr_matrix.__pow__", false]], "__pow__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__pow__", false]], "__radd__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__radd__", false]], "__radd__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__radd__", false], [285, "egttools.utils.csr_matrix.__radd__", false]], "__radd__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__radd__", false]], "__rdiv__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__rdiv__", false]], "__rdiv__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__rdiv__", false], [285, "egttools.utils.csr_matrix.__rdiv__", false]], "__rdiv__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__rdiv__", false]], "__reduce__() (permutations method)": [[13, "egttools.analytical.sed_analytical.permutations.__reduce__", false]], "__reduce__() (typevar method)": [[240, "egttools.plotting.simplex2d.TypeVar.__reduce__", false]], "__repr__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__repr__", false]], "__repr__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__repr__", false], [285, "egttools.utils.csr_matrix.__repr__", false]], "__repr__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__repr__", false]], "__repr__() (typevar method)": [[240, "egttools.plotting.simplex2d.TypeVar.__repr__", false]], "__rmatmul__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__rmatmul__", false]], "__rmatmul__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__rmatmul__", false], [285, "egttools.utils.csr_matrix.__rmatmul__", false]], "__rmatmul__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__rmatmul__", false]], "__rmul__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__rmul__", false]], "__rmul__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__rmul__", false], [285, "egttools.utils.csr_matrix.__rmul__", false]], "__rmul__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__rmul__", false]], "__ror__() (typevar method)": [[240, "egttools.plotting.simplex2d.TypeVar.__ror__", false]], "__round__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__round__", false]], "__round__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__round__", false], [285, "egttools.utils.csr_matrix.__round__", false]], "__round__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__round__", false]], "__rsub__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__rsub__", false]], "__rsub__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__rsub__", false], [285, "egttools.utils.csr_matrix.__rsub__", false]], "__rsub__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__rsub__", false]], "__rtruediv__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__rtruediv__", false]], "__rtruediv__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__rtruediv__", false], [285, "egttools.utils.csr_matrix.__rtruediv__", false]], "__rtruediv__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__rtruediv__", false]], "__setitem__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__setitem__", false]], "__setitem__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__setitem__", false], [285, "egttools.utils.csr_matrix.__setitem__", false]], "__setitem__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__setitem__", false]], "__sizeof__() (permutations method)": [[13, "egttools.analytical.sed_analytical.permutations.__sizeof__", false]], "__slots__ (abc attribute)": [[36, "egttools.behaviors.CPR.abstract_cpr_strategy.ABC.__slots__", false]], "__slots__ (abstractcprstrategy attribute)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.__slots__", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.__slots__", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.__slots__", false]], "__slots__ (commitmentstrategy attribute)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.__slots__", false]], "__slots__ (fairextraction attribute)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.__slots__", false]], "__slots__ (fakestrategy attribute)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.__slots__", false]], "__slots__ (fixedextraction attribute)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.__slots__", false]], "__slots__ (freestrategy attribute)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.__slots__", false]], "__slots__ (highextraction attribute)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.__slots__", false]], "__slots__ (nashextraction attribute)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.__slots__", false]], "__slots__ (typevar attribute)": [[240, "egttools.plotting.simplex2d.TypeVar.__slots__", false]], "__str__() (abstractcprstrategy method)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.__str__", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.__str__", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.__str__", false]], "__str__() (abstractgame method)": [[112, "egttools.games.AbstractGame.__str__", false], [130, "egttools.games.abstract_games.AbstractGame.__str__", false], [138, "egttools.games.informal_risk.AbstractGame.__str__", false], [252, "egttools.plotting.simplified.AbstractGame.__str__", false], [278, "egttools.utils.AbstractGame.__str__", false]], "__str__() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.__str__", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.__str__", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.__str__", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.__str__", false], [158, "egttools.games.pgg.AbstractNPlayerGame.__str__", false]], "__str__() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.__str__", false]], "__str__() (abstractspatialgame method)": [[114, "egttools.games.AbstractSpatialGame.__str__", false], [199, "egttools.numerical.structure.factories.AbstractSpatialGame.__str__", false]], "__str__() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.__str__", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.__str__", false]], "__str__() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.__str__", false]], "__str__() (commitmentstrategy method)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.__str__", false]], "__str__() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.__str__", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.__str__", false]], "__str__() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.__str__", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.__str__", false]], "__str__() (crdgame method)": [[116, "egttools.games.CRDGame.__str__", false]], "__str__() (crdgametu method)": [[117, "egttools.games.CRDGameTU.__str__", false]], "__str__() (crdmemoryoneplayer method)": [[54, "egttools.behaviors.CRD.CRDMemoryOnePlayer.__str__", false]], "__str__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__str__", false]], "__str__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__str__", false], [285, "egttools.utils.csr_matrix.__str__", false]], "__str__() (detective method)": [[73, "egttools.behaviors.NormalForm.TwoActions.Detective.__str__", false], [89, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective.__str__", false]], "__str__() (epsilongrim method)": [[74, "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM.__str__", false], [90, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM.__str__", false]], "__str__() (epsilontft method)": [[75, "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT.__str__", false], [91, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT.__str__", false]], "__str__() (fairextraction method)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.__str__", false]], "__str__() (fakestrategy method)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.__str__", false]], "__str__() (fixedextraction method)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.__str__", false]], "__str__() (freestrategy method)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.__str__", false]], "__str__() (goalbasedcrdstrategy method)": [[55, "egttools.behaviors.CRD.GoalBasedCRDStrategy.__str__", false], [60, "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy.__str__", false]], "__str__() (graph method)": [[279, "egttools.utils.Graph.__str__", false]], "__str__() (highextraction method)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.__str__", false]], "__str__() (informalriskgame method)": [[120, "egttools.games.InformalRiskGame.__str__", false], [139, "egttools.games.informal_risk.InformalRiskGame.__str__", false]], "__str__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__str__", false]], "__str__() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.__str__", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.__str__", false]], "__str__() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.__str__", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.__str__", false]], "__str__() (memoryonestrategy method)": [[80, "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy.__str__", false], [92, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy.__str__", false]], "__str__() (movingaveragecrdstrategy method)": [[56, "egttools.behaviors.CRD.MovingAverageCRDStrategy.__str__", false], [63, "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy.__str__", false]], "__str__() (nashextraction method)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.__str__", false]], "__str__() (normalformgame method)": [[124, "egttools.games.NormalFormGame.__str__", false]], "__str__() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.__str__", false]], "__str__() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.__str__", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.__str__", false]], "__str__() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.__str__", false]], "__str__() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.__str__", false]], "__str__() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.__str__", false]], "__str__() (pgg method)": [[128, "egttools.games.PGG.__str__", false], [159, "egttools.games.pgg.PGG.__str__", false]], "__str__() (timebasedcrdstrategy method)": [[57, "egttools.behaviors.CRD.TimeBasedCRDStrategy.__str__", false], [66, "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy.__str__", false]], "__sub__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__sub__", false]], "__sub__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__sub__", false], [285, "egttools.utils.csr_matrix.__sub__", false]], "__sub__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__sub__", false]], "__truediv__() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.__truediv__", false]], "__truediv__() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.__truediv__", false], [285, "egttools.utils.csr_matrix.__truediv__", false]], "__truediv__() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.__truediv__", false]], "abc (class in egttools.behaviors.cpr.abstract_cpr_strategy)": [[36, "egttools.behaviors.CPR.abstract_cpr_strategy.ABC", false]], "abstractcprstrategy (class in egttools.behaviors.cpr.abstract_cpr_strategy)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy", false]], "abstractcprstrategy (class in egttools.behaviors.cpr.cpr_strategies)": [[40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy", false]], "abstractcprstrategy (class in egttools.games.nonlinear_games)": [[144, "egttools.games.nonlinear_games.AbstractCPRStrategy", false]], "abstractcrdstrategy (class in egttools.behaviors.crd)": [[53, "egttools.behaviors.CRD.AbstractCRDStrategy", false]], "abstractcrdstrategy (class in egttools.behaviors.crd.goal_based)": [[59, "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy", false]], "abstractcrdstrategy (class in egttools.behaviors.crd.moving_average)": [[62, "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy", false]], "abstractcrdstrategy (class in egttools.behaviors.crd.time_based)": [[65, "egttools.behaviors.CRD.time_based.AbstractCRDStrategy", false]], "abstractgame (class in egttools.games)": [[112, "egttools.games.AbstractGame", false]], "abstractgame (class in egttools.games.abstract_games)": [[130, "egttools.games.abstract_games.AbstractGame", false]], "abstractgame (class in egttools.games.informal_risk)": [[138, "egttools.games.informal_risk.AbstractGame", false]], "abstractgame (class in egttools.plotting.simplified)": [[252, "egttools.plotting.simplified.AbstractGame", false]], "abstractgame (class in egttools.utils)": [[278, "egttools.utils.AbstractGame", false]], "abstractmethod() (in module egttools.behaviors.cpr.abstract_cpr_strategy)": [[38, "egttools.behaviors.CPR.abstract_cpr_strategy.abstractmethod", false]], "abstractmethod() (in module egttools.games.abstract_games)": [[134, "egttools.games.abstract_games.abstractmethod", false]], "abstractnfgstrategy (class in egttools.behaviors.normalform)": [[68, "egttools.behaviors.NormalForm.AbstractNFGStrategy", false]], "abstractnfgstrategy (class in egttools.behaviors.normalform.twoactions.nfg_strategies)": [[88, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy", false]], "abstractnplayergame (class in egttools.games)": [[113, "egttools.games.AbstractNPlayerGame", false]], "abstractnplayergame (class in egttools.games.abstract_games)": [[131, "egttools.games.abstract_games.AbstractNPlayerGame", false]], "abstractnplayergame (class in egttools.games.nonlinear_games)": [[145, "egttools.games.nonlinear_games.AbstractNPlayerGame", false]], "abstractnplayergame (class in egttools.games.opinion_game)": [[152, "egttools.games.opinion_game.AbstractNPlayerGame", false]], "abstractnplayergame (class in egttools.games.pgg)": [[158, "egttools.games.pgg.AbstractNPlayerGame", false]], "abstractnplayergameexpectedpayoff (class in egttools.games.abstract_games)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff", false]], "abstractspatialgame (class in egttools.games)": [[114, "egttools.games.AbstractSpatialGame", false]], "abstractspatialgame (class in egttools.numerical.structure.factories)": [[199, "egttools.numerical.structure.factories.AbstractSpatialGame", false]], "abstractstructure (class in egttools.numerical.structure)": [[193, "egttools.numerical.structure.AbstractStructure", false]], "abstracttwoplayergame (class in egttools.games)": [[115, "egttools.games.AbstractTwoPLayerGame", false]], "abstracttwoplayergame (class in egttools.games.abstract_games)": [[133, "egttools.games.abstract_games.AbstractTwoPLayerGame", false]], "actioninertia (class in egttools.behaviors.normalform.twoactions)": [[70, "egttools.behaviors.NormalForm.TwoActions.ActionInertia", false]], "add_arrow() (in module egttools.plotting.helpers)": [[213, "egttools.plotting.helpers.add_arrow", false]], "add_arrow() (in module egttools.plotting.simplex2d)": [[241, "egttools.plotting.simplex2d.add_arrow", false]], "add_axis() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.add_axis", false], [239, "egttools.plotting.simplex2d.Simplex2D.add_axis", false], [257, "egttools.plotting.simplified.Simplex2D.add_axis", false]], "add_callback() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.add_callback", false]], "add_colorbar() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.add_colorbar", false], [239, "egttools.plotting.simplex2d.Simplex2D.add_colorbar", false], [257, "egttools.plotting.simplified.Simplex2D.add_colorbar", false]], "add_edge() (graph method)": [[279, "egttools.utils.Graph.add_edge", false]], "add_edges_from() (graph method)": [[279, "egttools.utils.Graph.add_edges_from", false]], "add_edges_with_random_drift() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.add_edges_with_random_drift", false], [239, "egttools.plotting.simplex2d.Simplex2D.add_edges_with_random_drift", false], [257, "egttools.plotting.simplified.Simplex2D.add_edges_with_random_drift", false]], "add_group_extraction() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.add_group_extraction", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.add_group_extraction", false]], "add_node() (graph method)": [[279, "egttools.utils.Graph.add_node", false]], "add_nodes_from() (graph method)": [[279, "egttools.utils.Graph.add_nodes_from", false]], "add_vertex_labels() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.add_vertex_labels", false], [239, "egttools.plotting.simplex2d.Simplex2D.add_vertex_labels", false], [257, "egttools.plotting.simplified.Simplex2D.add_vertex_labels", false]], "add_weighted_edges_from() (graph method)": [[279, "egttools.utils.Graph.add_weighted_edges_from", false]], "adj (graph property)": [[279, "egttools.utils.Graph.adj", false]], "adjacency() (graph method)": [[279, "egttools.utils.Graph.adjacency", false]], "adjlist_inner_dict_factory (graph attribute)": [[279, "egttools.utils.Graph.adjlist_inner_dict_factory", false]], "adjlist_outer_dict_factory (graph attribute)": [[279, "egttools.utils.Graph.adjlist_outer_dict_factory", false]], "angle (circle property)": [[238, "egttools.plotting.simplex2d.Circle.angle", false]], "apply_simplex_boundaries_to_gradients() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.apply_simplex_boundaries_to_gradients", false], [239, "egttools.plotting.simplex2d.Simplex2D.apply_simplex_boundaries_to_gradients", false], [257, "egttools.plotting.simplified.Simplex2D.apply_simplex_boundaries_to_gradients", false]], "arcsin() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.arcsin", false]], "arcsin() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.arcsin", false], [285, "egttools.utils.csr_matrix.arcsin", false]], "arcsinh() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.arcsinh", false]], "arcsinh() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.arcsinh", false], [285, "egttools.utils.csr_matrix.arcsinh", false]], "arctan() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.arctan", false]], "arctan() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.arctan", false], [285, "egttools.utils.csr_matrix.arctan", false]], "arctanh() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.arctanh", false]], "arctanh() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.arctanh", false], [285, "egttools.utils.csr_matrix.arctanh", false]], "argmax() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.argmax", false]], "argmax() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.argmax", false], [285, "egttools.utils.csr_matrix.argmax", false]], "argmin() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.argmin", false]], "argmin() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.argmin", false], [285, "egttools.utils.csr_matrix.argmin", false]], "asformat() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.asformat", false]], "asformat() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.asformat", false], [285, "egttools.utils.csr_matrix.asformat", false]], "asformat() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.asformat", false]], "asfptype() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.asfptype", false]], "asfptype() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.asfptype", false], [285, "egttools.utils.csr_matrix.asfptype", false]], "asfptype() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.asfptype", false]], "astype() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.astype", false]], "astype() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.astype", false], [285, "egttools.utils.csr_matrix.astype", false]], "astype() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.astype", false]], "autominorlocator (class in egttools.plotting.indicators)": [[228, "egttools.plotting.indicators.AutoMinorLocator", false]], "axes (circle property)": [[238, "egttools.plotting.simplex2d.Circle.axes", false]], "axis (autominorlocator attribute)": [[228, "egttools.plotting.indicators.AutoMinorLocator.axis", false]], "barycentric_to_xy_coordinates() (in module egttools.helpers.vectorized)": [[164, "egttools.helpers.vectorized.barycentric_to_xy_coordinates", false]], "barycentric_to_xy_coordinates() (in module egttools.plotting.helpers)": [[214, "egttools.plotting.helpers.barycentric_to_xy_coordinates", false]], "barycentric_to_xy_coordinates() (in module egttools.plotting.simplex2d)": [[242, "egttools.plotting.simplex2d.barycentric_to_xy_coordinates", false]], "barycentric_to_xy_coordinates() (in module egttools.plotting.simplified)": [[258, "egttools.plotting.simplified.barycentric_to_xy_coordinates", false]], "binom() (in module egttools.distributions)": [[106, "egttools.distributions.binom", false]], "cache_size (pairwisecomparisonnumerical property)": [[175, "egttools.numerical.PairwiseComparisonNumerical.cache_size", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.cache_size", false]], "calculate_average_gradient_of_selection() (network method)": [[194, "egttools.numerical.structure.Network.calculate_average_gradient_of_selection", false], [200, "egttools.numerical.structure.factories.Network.calculate_average_gradient_of_selection", false]], "calculate_average_gradient_of_selection() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.calculate_average_gradient_of_selection", false], [201, "egttools.numerical.structure.factories.NetworkGroup.calculate_average_gradient_of_selection", false]], "calculate_average_gradient_of_selection() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.calculate_average_gradient_of_selection", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.calculate_average_gradient_of_selection", false]], "calculate_average_gradient_of_selection() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.calculate_average_gradient_of_selection", false], [203, "egttools.numerical.structure.factories.NetworkSync.calculate_average_gradient_of_selection", false]], "calculate_average_gradient_of_selection_and_update_population() (network method)": [[194, "egttools.numerical.structure.Network.calculate_average_gradient_of_selection_and_update_population", false], [200, "egttools.numerical.structure.factories.Network.calculate_average_gradient_of_selection_and_update_population", false]], "calculate_average_gradient_of_selection_and_update_population() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.calculate_average_gradient_of_selection_and_update_population", false], [201, "egttools.numerical.structure.factories.NetworkGroup.calculate_average_gradient_of_selection_and_update_population", false]], "calculate_average_gradient_of_selection_and_update_population() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.calculate_average_gradient_of_selection_and_update_population", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.calculate_average_gradient_of_selection_and_update_population", false]], "calculate_average_gradient_of_selection_and_update_population() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.calculate_average_gradient_of_selection_and_update_population", false], [203, "egttools.numerical.structure.factories.NetworkSync.calculate_average_gradient_of_selection_and_update_population", false]], "calculate_cooperation_level_neighborhood() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.calculate_cooperation_level_neighborhood", false]], "calculate_end() (timinguncertainty method)": [[105, "egttools.distributions.TimingUncertainty.calculate_end", false]], "calculate_expected_consumption() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.calculate_expected_consumption", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.calculate_expected_consumption", false]], "calculate_fitness() (abstractgame method)": [[112, "egttools.games.AbstractGame.calculate_fitness", false], [130, "egttools.games.abstract_games.AbstractGame.calculate_fitness", false], [138, "egttools.games.informal_risk.AbstractGame.calculate_fitness", false], [252, "egttools.plotting.simplified.AbstractGame.calculate_fitness", false], [278, "egttools.utils.AbstractGame.calculate_fitness", false]], "calculate_fitness() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.calculate_fitness", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.calculate_fitness", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.calculate_fitness", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.calculate_fitness", false], [158, "egttools.games.pgg.AbstractNPlayerGame.calculate_fitness", false]], "calculate_fitness() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.calculate_fitness", false]], "calculate_fitness() (abstractspatialgame method)": [[114, "egttools.games.AbstractSpatialGame.calculate_fitness", false], [199, "egttools.numerical.structure.factories.AbstractSpatialGame.calculate_fitness", false]], "calculate_fitness() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.calculate_fitness", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.calculate_fitness", false]], "calculate_fitness() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.calculate_fitness", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.calculate_fitness", false]], "calculate_fitness() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.calculate_fitness", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.calculate_fitness", false]], "calculate_fitness() (crdgame method)": [[116, "egttools.games.CRDGame.calculate_fitness", false]], "calculate_fitness() (crdgametu method)": [[117, "egttools.games.CRDGameTU.calculate_fitness", false]], "calculate_fitness() (informalriskgame method)": [[120, "egttools.games.InformalRiskGame.calculate_fitness", false], [139, "egttools.games.informal_risk.InformalRiskGame.calculate_fitness", false]], "calculate_fitness() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.calculate_fitness", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.calculate_fitness", false]], "calculate_fitness() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.calculate_fitness", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.calculate_fitness", false]], "calculate_fitness() (network method)": [[194, "egttools.numerical.structure.Network.calculate_fitness", false], [200, "egttools.numerical.structure.factories.Network.calculate_fitness", false]], "calculate_fitness() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.calculate_fitness", false], [201, "egttools.numerical.structure.factories.NetworkGroup.calculate_fitness", false]], "calculate_fitness() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.calculate_fitness", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.calculate_fitness", false]], "calculate_fitness() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.calculate_fitness", false], [203, "egttools.numerical.structure.factories.NetworkSync.calculate_fitness", false]], "calculate_fitness() (normalformgame method)": [[124, "egttools.games.NormalFormGame.calculate_fitness", false]], "calculate_fitness() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.calculate_fitness", false]], "calculate_fitness() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.calculate_fitness", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.calculate_fitness", false]], "calculate_fitness() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.calculate_fitness", false]], "calculate_fitness() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.calculate_fitness", false]], "calculate_fitness() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.calculate_fitness", false]], "calculate_fitness() (pgg method)": [[128, "egttools.games.PGG.calculate_fitness", false], [159, "egttools.games.pgg.PGG.calculate_fitness", false]], "calculate_fixation_probability() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.calculate_fixation_probability", false], [179, "egttools.numerical.numerical_.PairwiseComparison.calculate_fixation_probability", false], [256, "egttools.plotting.simplified.PairwiseComparison.calculate_fixation_probability", false]], "calculate_full_end() (timinguncertainty method)": [[105, "egttools.distributions.TimingUncertainty.calculate_full_end", false]], "calculate_full_transition_matrix() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.calculate_full_transition_matrix", false], [7, "egttools.analytical.sed_analytical.StochDynamics.calculate_full_transition_matrix", false], [19, "egttools.analytical.utils.StochDynamics.calculate_full_transition_matrix", false]], "calculate_game_payoff() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.calculate_game_payoff", false], [201, "egttools.numerical.structure.factories.NetworkGroup.calculate_game_payoff", false]], "calculate_game_payoff() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.calculate_game_payoff", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.calculate_game_payoff", false]], "calculate_gradient_of_selection() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.calculate_gradient_of_selection", false], [179, "egttools.numerical.numerical_.PairwiseComparison.calculate_gradient_of_selection", false], [256, "egttools.plotting.simplified.PairwiseComparison.calculate_gradient_of_selection", false]], "calculate_gradients() (in module egttools.analytical.utils)": [[20, "egttools.analytical.utils.calculate_gradients", false]], "calculate_group_achievement() (crdgame method)": [[116, "egttools.games.CRDGame.calculate_group_achievement", false]], "calculate_group_achievement() (crdgametu method)": [[117, "egttools.games.CRDGameTU.calculate_group_achievement", false]], "calculate_group_achievement() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.calculate_group_achievement", false]], "calculate_nb_states() (in module egttools)": [[99, "egttools.calculate_nb_states", false]], "calculate_nb_states() (in module egttools.analytical.sed_analytical)": [[8, "egttools.analytical.sed_analytical.calculate_nb_states", false]], "calculate_nb_states() (in module egttools.games.informal_risk)": [[140, "egttools.games.informal_risk.calculate_nb_states", false]], "calculate_nb_states() (in module egttools.numerical.numerical_)": [[181, "egttools.numerical.numerical_.calculate_nb_states", false]], "calculate_nb_states() (in module egttools.plotting.helpers)": [[215, "egttools.plotting.helpers.calculate_nb_states", false]], "calculate_nb_states() (in module egttools.plotting.simplex2d)": [[243, "egttools.plotting.simplex2d.calculate_nb_states", false]], "calculate_nb_states() (in module egttools.plotting.simplified)": [[259, "egttools.plotting.simplified.calculate_nb_states", false]], "calculate_nb_unique_combinations() (in module egttools.utils)": [[280, "egttools.utils.calculate_nb_unique_combinations", false]], "calculate_payoffs() (abstractgame method)": [[112, "egttools.games.AbstractGame.calculate_payoffs", false], [130, "egttools.games.abstract_games.AbstractGame.calculate_payoffs", false], [138, "egttools.games.informal_risk.AbstractGame.calculate_payoffs", false], [252, "egttools.plotting.simplified.AbstractGame.calculate_payoffs", false], [278, "egttools.utils.AbstractGame.calculate_payoffs", false]], "calculate_payoffs() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.calculate_payoffs", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.calculate_payoffs", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.calculate_payoffs", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.calculate_payoffs", false], [158, "egttools.games.pgg.AbstractNPlayerGame.calculate_payoffs", false]], "calculate_payoffs() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.calculate_payoffs", false]], "calculate_payoffs() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.calculate_payoffs", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.calculate_payoffs", false]], "calculate_payoffs() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.calculate_payoffs", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.calculate_payoffs", false]], "calculate_payoffs() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.calculate_payoffs", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.calculate_payoffs", false]], "calculate_payoffs() (crdgame method)": [[116, "egttools.games.CRDGame.calculate_payoffs", false]], "calculate_payoffs() (crdgametu method)": [[117, "egttools.games.CRDGameTU.calculate_payoffs", false]], "calculate_payoffs() (informalriskgame method)": [[120, "egttools.games.InformalRiskGame.calculate_payoffs", false], [139, "egttools.games.informal_risk.InformalRiskGame.calculate_payoffs", false]], "calculate_payoffs() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.calculate_payoffs", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.calculate_payoffs", false]], "calculate_payoffs() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.calculate_payoffs", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.calculate_payoffs", false]], "calculate_payoffs() (normalformgame method)": [[124, "egttools.games.NormalFormGame.calculate_payoffs", false]], "calculate_payoffs() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.calculate_payoffs", false]], "calculate_payoffs() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.calculate_payoffs", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.calculate_payoffs", false]], "calculate_payoffs() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.calculate_payoffs", false]], "calculate_payoffs() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.calculate_payoffs", false]], "calculate_payoffs() (pgg method)": [[128, "egttools.games.PGG.calculate_payoffs", false], [159, "egttools.games.pgg.PGG.calculate_payoffs", false]], "calculate_polarization() (crdgame method)": [[116, "egttools.games.CRDGame.calculate_polarization", false]], "calculate_polarization() (crdgametu method)": [[117, "egttools.games.CRDGameTU.calculate_polarization", false]], "calculate_polarization_success() (crdgame method)": [[116, "egttools.games.CRDGame.calculate_polarization_success", false]], "calculate_polarization_success() (crdgametu method)": [[117, "egttools.games.CRDGameTU.calculate_polarization_success", false]], "calculate_population_group_achievement() (crdgame method)": [[116, "egttools.games.CRDGame.calculate_population_group_achievement", false]], "calculate_population_group_achievement() (crdgametu method)": [[117, "egttools.games.CRDGameTU.calculate_population_group_achievement", false]], "calculate_population_group_achievement() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.calculate_population_group_achievement", false]], "calculate_stability() (in module egttools.plotting.helpers)": [[216, "egttools.plotting.helpers.calculate_stability", false]], "calculate_stability() (in module egttools.plotting.simplified)": [[260, "egttools.plotting.simplified.calculate_stability", false]], "calculate_state() (in module egttools)": [[100, "egttools.calculate_state", false]], "calculate_state() (in module egttools.analytical.sed_analytical)": [[9, "egttools.analytical.sed_analytical.calculate_state", false]], "calculate_state() (in module egttools.games.abstract_games)": [[135, "egttools.games.abstract_games.calculate_state", false]], "calculate_state() (in module egttools.games.informal_risk)": [[141, "egttools.games.informal_risk.calculate_state", false]], "calculate_state() (in module egttools.games.nonlinear_games)": [[149, "egttools.games.nonlinear_games.calculate_state", false]], "calculate_state() (in module egttools.numerical.numerical_)": [[182, "egttools.numerical.numerical_.calculate_state", false]], "calculate_stationary_distribution() (in module egttools.utils)": [[281, "egttools.utils.calculate_stationary_distribution", false]], "calculate_stationary_distribution() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.calculate_stationary_distribution", false], [7, "egttools.analytical.sed_analytical.StochDynamics.calculate_stationary_distribution", false], [19, "egttools.analytical.utils.StochDynamics.calculate_stationary_distribution", false]], "calculate_stationary_distribution_non_hermitian() (in module egttools.utils)": [[282, "egttools.utils.calculate_stationary_distribution_non_hermitian", false]], "calculate_stationary_points() (in module egttools.plotting.helpers)": [[217, "egttools.plotting.helpers.calculate_stationary_points", false]], "calculate_strategies_distribution() (in module egttools)": [[101, "egttools.calculate_strategies_distribution", false]], "calculate_strategies_distribution() (in module egttools.numerical.numerical_)": [[183, "egttools.numerical.numerical_.calculate_strategies_distribution", false]], "calculate_total_extraction() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.calculate_total_extraction", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.calculate_total_extraction", false]], "calculate_total_extraction() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.calculate_total_extraction", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.calculate_total_extraction", false]], "calculate_transition_and_fixation_matrix_sml() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.calculate_transition_and_fixation_matrix_sml", false], [179, "egttools.numerical.numerical_.PairwiseComparison.calculate_transition_and_fixation_matrix_sml", false], [256, "egttools.plotting.simplified.PairwiseComparison.calculate_transition_and_fixation_matrix_sml", false]], "calculate_transition_matrix() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.calculate_transition_matrix", false], [179, "egttools.numerical.numerical_.PairwiseComparison.calculate_transition_matrix", false], [256, "egttools.plotting.simplified.PairwiseComparison.calculate_transition_matrix", false]], "ceil() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.ceil", false]], "ceil() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.ceil", false], [285, "egttools.utils.csr_matrix.ceil", false]], "center (circle property)": [[238, "egttools.plotting.simplex2d.Circle.center", false]], "check_format() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.check_format", false]], "check_format() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.check_format", false], [285, "egttools.utils.csr_matrix.check_format", false]], "check_if_commitment_validated() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.check_if_commitment_validated", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.check_if_commitment_validated", false]], "check_if_point_in_unit_simplex() (in module egttools.analytical.utils)": [[21, "egttools.analytical.utils.check_if_point_in_unit_simplex", false]], "check_if_point_in_unit_simplex() (in module egttools.plotting.helpers)": [[218, "egttools.plotting.helpers.check_if_point_in_unit_simplex", false]], "check_if_there_is_random_drift() (in module egttools.analytical.utils)": [[22, "egttools.analytical.utils.check_if_there_is_random_drift", false]], "check_if_there_is_random_drift() (in module egttools.plotting.simplified)": [[261, "egttools.plotting.simplified.check_if_there_is_random_drift", false]], "check_replicator_stability_pairwise_games() (in module egttools.analytical.utils)": [[23, "egttools.analytical.utils.check_replicator_stability_pairwise_games", false]], "check_replicator_stability_pairwise_games() (in module egttools.plotting.simplified)": [[262, "egttools.plotting.simplified.check_replicator_stability_pairwise_games", false]], "circle (class in egttools.plotting.simplex2d)": [[238, "egttools.plotting.simplex2d.Circle", false]], "clear() (graph method)": [[279, "egttools.utils.Graph.clear", false]], "clear_edges() (graph method)": [[279, "egttools.utils.Graph.clear_edges", false]], "cols (datatable property)": [[103, "egttools.datastructures.DataTable.cols", false]], "column_types (datatable property)": [[103, "egttools.datastructures.DataTable.column_types", false]], "comb() (in module egttools.distributions)": [[107, "egttools.distributions.comb", false]], "combine() (in module egttools.utils)": [[283, "egttools.utils.combine", false]], "commitmentstrategy (class in egttools.behaviors.cpr.cpr_strategies)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy", false]], "commonpoolresourcedilemma (class in egttools.games)": [[118, "egttools.games.CommonPoolResourceDilemma", false]], "commonpoolresourcedilemma (class in egttools.games.nonlinear_games)": [[146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma", false]], "commonpoolresourcedilemmacommitment (class in egttools.games)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment", false]], "commonpoolresourcedilemmacommitment (class in egttools.games.nonlinear_games)": [[147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment", false]], "conditional_low() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.conditional_low", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.conditional_low", false]], "conj() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.conj", false]], "conj() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.conj", false], [285, "egttools.utils.csr_matrix.conj", false]], "conj() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.conj", false]], "conjugate() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.conjugate", false]], "conjugate() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.conjugate", false], [285, "egttools.utils.csr_matrix.conjugate", false]], "conjugate() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.conjugate", false]], "contains() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.contains", false]], "contains_point() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.contains_point", false]], "contains_points() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.contains_points", false]], "convert_xunits() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.convert_xunits", false]], "convert_yunits() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.convert_yunits", false]], "cooperator (class in egttools.behaviors.normalform.twoactions)": [[71, "egttools.behaviors.NormalForm.TwoActions.Cooperator", false]], "copy() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.copy", false]], "copy() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.copy", false], [285, "egttools.utils.csr_matrix.copy", false]], "copy() (graph method)": [[279, "egttools.utils.Graph.copy", false]], "copy() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.copy", false]], "corners (simplex2d attribute)": [[209, "egttools.plotting.Simplex2D.corners", false], [239, "egttools.plotting.simplex2d.Simplex2D.corners", false], [257, "egttools.plotting.simplified.Simplex2D.corners", false]], "cost (oneshotcrd property)": [[126, "egttools.games.OneShotCRD.cost", false]], "cost() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.cost", false]], "count_nonzero() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.count_nonzero", false]], "count_nonzero() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.count_nonzero", false], [285, "egttools.utils.csr_matrix.count_nonzero", false]], "count_nonzero() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.count_nonzero", false]], "cpp_vectorized_replicator_equation_n_player() (in module egttools.helpers.vectorized)": [[165, "egttools.helpers.vectorized.cpp_vectorized_replicator_equation_n_player", false]], "crdgame (class in egttools.games)": [[116, "egttools.games.CRDGame", false]], "crdgametu (class in egttools.games)": [[117, "egttools.games.CRDGameTU", false]], "crdmemoryoneplayer (class in egttools.behaviors.crd)": [[54, "egttools.behaviors.CRD.CRDMemoryOnePlayer", false]], "create_dummy_axis() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.create_dummy_axis", false]], "csc_matrix (class in egttools.utils)": [[284, "egttools.utils.csc_matrix", false]], "csr_matrix (class in egttools.analytical.sed_analytical)": [[10, "egttools.analytical.sed_analytical.csr_matrix", false]], "csr_matrix (class in egttools.utils)": [[285, "egttools.utils.csr_matrix", false]], "data (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.data", false]], "data (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.data", false], [285, "egttools.utils.csr_matrix.data", false]], "data (datatable property)": [[103, "egttools.datastructures.DataTable.data", false]], "data (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.data", false]], "datatable (class in egttools.datastructures)": [[103, "egttools.datastructures.DataTable", false]], "defector (class in egttools.behaviors.normalform.twoactions)": [[72, "egttools.behaviors.NormalForm.TwoActions.Defector", false]], "deg2rad() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.deg2rad", false]], "deg2rad() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.deg2rad", false], [285, "egttools.utils.csr_matrix.deg2rad", false]], "degree (graph property)": [[279, "egttools.utils.Graph.degree", false]], "detective (class in egttools.behaviors.normalform.twoactions)": [[73, "egttools.behaviors.NormalForm.TwoActions.Detective", false]], "detective (class in egttools.behaviors.normalform.twoactions.nfg_strategies)": [[89, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective", false]], "diagonal() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.diagonal", false]], "diagonal() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.diagonal", false], [285, "egttools.utils.csr_matrix.diagonal", false]], "diagonal() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.diagonal", false]], "dot() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.dot", false]], "dot() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.dot", false], [285, "egttools.utils.csr_matrix.dot", false]], "dot() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.dot", false]], "draw() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.draw", false]], "draw_gradients() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_gradients", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_gradients", false], [257, "egttools.plotting.simplified.Simplex2D.draw_gradients", false]], "draw_invasion_diagram() (in module egttools.plotting)": [[210, "egttools.plotting.draw_invasion_diagram", false]], "draw_invasion_diagram() (in module egttools.plotting.indicators)": [[229, "egttools.plotting.indicators.draw_invasion_diagram", false]], "draw_scatter_shadow() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_scatter_shadow", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_scatter_shadow", false], [257, "egttools.plotting.simplified.Simplex2D.draw_scatter_shadow", false]], "draw_stationary_distribution() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_stationary_distribution", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_stationary_distribution", false], [257, "egttools.plotting.simplified.Simplex2D.draw_stationary_distribution", false]], "draw_stationary_points() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_stationary_points", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_stationary_points", false], [257, "egttools.plotting.simplified.Simplex2D.draw_stationary_points", false]], "draw_trajectories() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_trajectories", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_trajectories", false], [257, "egttools.plotting.simplified.Simplex2D.draw_trajectories", false]], "draw_trajectory_from_points() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_trajectory_from_points", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_trajectory_from_points", false], [257, "egttools.plotting.simplified.Simplex2D.draw_trajectory_from_points", false]], "draw_trajectory_from_roots() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_trajectory_from_roots", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_trajectory_from_roots", false], [257, "egttools.plotting.simplified.Simplex2D.draw_trajectory_from_roots", false]], "draw_trajectory_from_vector() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_trajectory_from_vector", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_trajectory_from_vector", false], [257, "egttools.plotting.simplified.Simplex2D.draw_trajectory_from_vector", false]], "draw_triangle() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.draw_triangle", false], [239, "egttools.plotting.simplex2d.Simplex2D.draw_triangle", false], [257, "egttools.plotting.simplified.Simplex2D.draw_triangle", false]], "dtype (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.dtype", false]], "dtype (csc_matrix property)": [[284, "id1", false]], "dtype (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.dtype", false], [285, "egttools.utils.csr_matrix.dtype", false]], "dtype (csr_matrix property)": [[10, "id1", false], [285, "id1", false]], "dtype (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.dtype", false]], "edge_attr_dict_factory (graph attribute)": [[279, "egttools.utils.Graph.edge_attr_dict_factory", false]], "edge_subgraph() (graph method)": [[279, "egttools.utils.Graph.edge_subgraph", false]], "edges (graph property)": [[279, "egttools.utils.Graph.edges", false]], "egttools": [[0, "module-egttools", false]], "egttools.analytical": [[1, "module-egttools.analytical", false]], "egttools.analytical.sed_analytical": [[6, "module-egttools.analytical.sed_analytical", false]], "egttools.analytical.utils": [[18, "module-egttools.analytical.utils", false]], "egttools.behaviors": [[33, "module-egttools.behaviors", false]], "egttools.behaviors.cpr": [[34, "module-egttools.behaviors.CPR", false]], "egttools.behaviors.cpr.abstract_cpr_strategy": [[35, "module-egttools.behaviors.CPR.abstract_cpr_strategy", false]], "egttools.behaviors.cpr.cpr_strategies": [[39, "module-egttools.behaviors.CPR.cpr_strategies", false]], "egttools.behaviors.crd": [[52, "module-egttools.behaviors.CRD", false]], "egttools.behaviors.crd.goal_based": [[58, "module-egttools.behaviors.CRD.goal_based", false]], "egttools.behaviors.crd.moving_average": [[61, "module-egttools.behaviors.CRD.moving_average", false]], "egttools.behaviors.crd.time_based": [[64, "module-egttools.behaviors.CRD.time_based", false]], "egttools.behaviors.normalform": [[67, "module-egttools.behaviors.NormalForm", false]], "egttools.behaviors.normalform.twoactions": [[69, "module-egttools.behaviors.NormalForm.TwoActions", false]], "egttools.behaviors.normalform.twoactions.nfg_strategies": [[87, "module-egttools.behaviors.NormalForm.TwoActions.nfg_strategies", false]], "egttools.behaviors.opinion_behaviors": [[93, "module-egttools.behaviors.opinion_behaviors", false]], "egttools.behaviors.pgg_behaviors": [[96, "module-egttools.behaviors.pgg_behaviors", false]], "egttools.datastructures": [[102, "module-egttools.datastructures", false]], "egttools.distributions": [[104, "module-egttools.distributions", false]], "egttools.games": [[111, "module-egttools.games", false]], "egttools.games.abstract_games": [[129, "module-egttools.games.abstract_games", false]], "egttools.games.informal_risk": [[137, "module-egttools.games.informal_risk", false]], "egttools.games.nonlinear_games": [[143, "module-egttools.games.nonlinear_games", false]], "egttools.games.opinion_game": [[151, "module-egttools.games.opinion_game", false]], "egttools.games.pgg": [[157, "module-egttools.games.pgg", false]], "egttools.helpers": [[162, "module-egttools.helpers", false]], "egttools.helpers.vectorized": [[163, "module-egttools.helpers.vectorized", false]], "egttools.numerical": [[172, "module-egttools.numerical", false]], "egttools.numerical.numerical_": [[176, "module-egttools.numerical.numerical_", false]], "egttools.numerical.structure": [[192, "module-egttools.numerical.structure", false]], "egttools.numerical.structure.factories": [[198, "module-egttools.numerical.structure.factories", false]], "egttools.plotting": [[208, "module-egttools.plotting", false]], "egttools.plotting.helpers": [[211, "module-egttools.plotting.helpers", false]], "egttools.plotting.indicators": [[227, "module-egttools.plotting.indicators", false]], "egttools.plotting.simplex2d": [[237, "module-egttools.plotting.simplex2d", false]], "egttools.plotting.simplified": [[251, "module-egttools.plotting.simplified", false]], "egttools.utils": [[277, "module-egttools.utils", false]], "eig() (in module egttools.analytical.sed_analytical)": [[11, "egttools.analytical.sed_analytical.eig", false]], "eigvals() (in module egttools.analytical.utils)": [[24, "egttools.analytical.utils.eigvals", false]], "eigvals() (in module egttools.utils)": [[286, "egttools.utils.eigvals", false]], "eliminate_zeros() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.eliminate_zeros", false]], "eliminate_zeros() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.eliminate_zeros", false], [285, "egttools.utils.csr_matrix.eliminate_zeros", false]], "endowment (crdgame property)": [[116, "egttools.games.CRDGame.endowment", false]], "endowment (crdgametu property)": [[117, "egttools.games.CRDGameTU.endowment", false]], "endowment (oneshotcrd property)": [[126, "egttools.games.OneShotCRD.endowment", false]], "endowment() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.endowment", false]], "enhancement_factor (crdgame property)": [[116, "egttools.games.CRDGame.enhancement_factor", false]], "epsilongrim (class in egttools.behaviors.normalform.twoactions)": [[74, "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM", false]], "epsilongrim (class in egttools.behaviors.normalform.twoactions.nfg_strategies)": [[90, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM", false]], "epsilontft (class in egttools.behaviors.normalform.twoactions)": [[75, "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT", false]], "epsilontft (class in egttools.behaviors.normalform.twoactions.nfg_strategies)": [[91, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT", false]], "estimate_fixation_probability() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.estimate_fixation_probability", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.estimate_fixation_probability", false]], "estimate_stationary_distribution() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.estimate_stationary_distribution", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.estimate_stationary_distribution", false]], "estimate_stationary_distribution_sparse() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.estimate_stationary_distribution_sparse", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.estimate_stationary_distribution_sparse", false]], "estimate_strategy_distribution() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.estimate_strategy_distribution", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.estimate_strategy_distribution", false]], "estimate_time_dependent_average_gradients_of_selection() (networkevolver static method)": [[174, "egttools.numerical.NetworkEvolver.estimate_time_dependent_average_gradients_of_selection", false], [178, "egttools.numerical.numerical_.NetworkEvolver.estimate_time_dependent_average_gradients_of_selection", false]], "estimate_time_independent_average_gradients_of_selection() (networkevolver static method)": [[174, "egttools.numerical.NetworkEvolver.estimate_time_independent_average_gradients_of_selection", false], [178, "egttools.numerical.numerical_.NetworkEvolver.estimate_time_independent_average_gradients_of_selection", false]], "evolve() (generalpopulationevolver method)": [[173, "egttools.numerical.GeneralPopulationEvolver.evolve", false], [177, "egttools.numerical.numerical_.GeneralPopulationEvolver.evolve", false]], "evolve() (networkevolver static method)": [[174, "egttools.numerical.NetworkEvolver.evolve", false], [178, "egttools.numerical.numerical_.NetworkEvolver.evolve", false]], "evolve() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.evolve", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.evolve", false]], "expected_payoffs() (normalformgame method)": [[124, "egttools.games.NormalFormGame.expected_payoffs", false]], "expected_payoffs() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.expected_payoffs", false]], "expm1() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.expm1", false]], "expm1() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.expm1", false], [285, "egttools.utils.csr_matrix.expm1", false]], "extraction() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.extraction", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.extraction", false]], "extraction_strategy() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.extraction_strategy", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.extraction_strategy", false]], "fair_extraction() (in module egttools.behaviors.cpr.cpr_strategies)": [[48, "egttools.behaviors.CPR.cpr_strategies.fair_extraction", false]], "fairextraction (class in egttools.behaviors.cpr.cpr_strategies)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction", false]], "fakestrategy (class in egttools.behaviors.cpr.cpr_strategies)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy", false]], "fermi() (stochdynamics static method)": [[3, "egttools.analytical.StochDynamics.fermi", false], [7, "egttools.analytical.sed_analytical.StochDynamics.fermi", false], [19, "egttools.analytical.utils.StochDynamics.fermi", false]], "figure (circle property)": [[238, "egttools.plotting.simplex2d.Circle.figure", false]], "files() (in module egttools)": [[110, "egttools.files", false]], "fill (circle property)": [[238, "egttools.plotting.simplex2d.Circle.fill", false]], "find_roots() (in module egttools.analytical.utils)": [[25, "egttools.analytical.utils.find_roots", false]], "find_roots() (in module egttools.plotting.simplified)": [[263, "egttools.plotting.simplified.find_roots", false]], "find_roots_and_stability() (in module egttools.analytical.utils)": [[26, "egttools.analytical.utils.find_roots_and_stability", false]], "find_roots_in_discrete_barycentric_coordinates() (in module egttools.plotting.helpers)": [[219, "egttools.plotting.helpers.find_roots_in_discrete_barycentric_coordinates", false]], "find_roots_in_discrete_barycentric_coordinates() (in module egttools.plotting.simplified)": [[264, "egttools.plotting.simplified.find_roots_in_discrete_barycentric_coordinates", false]], "find_saddle_type_and_gradient_direction() (in module egttools.utils)": [[287, "egttools.utils.find_saddle_type_and_gradient_direction", false]], "find_where_point_is_in_simplex() (in module egttools.plotting.helpers)": [[220, "egttools.plotting.helpers.find_where_point_is_in_simplex", false]], "find_where_point_is_in_simplex() (in module egttools.plotting.simplex2d)": [[244, "egttools.plotting.simplex2d.find_where_point_is_in_simplex", false]], "findobj() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.findobj", false]], "fitness_group() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.fitness_group", false], [7, "egttools.analytical.sed_analytical.StochDynamics.fitness_group", false], [19, "egttools.analytical.utils.StochDynamics.fitness_group", false]], "fitness_pair() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.fitness_pair", false], [7, "egttools.analytical.sed_analytical.StochDynamics.fitness_pair", false], [19, "egttools.analytical.utils.StochDynamics.fitness_pair", false]], "fixation_probability() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.fixation_probability", false], [7, "egttools.analytical.sed_analytical.StochDynamics.fixation_probability", false], [19, "egttools.analytical.utils.StochDynamics.fixation_probability", false]], "fixedextraction (class in egttools.behaviors.cpr.cpr_strategies)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction", false]], "floor() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.floor", false]], "floor() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.floor", false], [285, "egttools.utils.csr_matrix.floor", false]], "format (csc_matrix property)": [[284, "egttools.utils.csc_matrix.format", false]], "format (csr_matrix property)": [[10, "egttools.analytical.sed_analytical.csr_matrix.format", false], [285, "egttools.utils.csr_matrix.format", false]], "format (lil_matrix property)": [[12, "egttools.analytical.sed_analytical.lil_matrix.format", false]], "format_cursor_data() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.format_cursor_data", false]], "freestrategy (class in egttools.behaviors.cpr.cpr_strategies)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy", false]], "full_fitness_difference_group() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.full_fitness_difference_group", false], [7, "egttools.analytical.sed_analytical.StochDynamics.full_fitness_difference_group", false], [19, "egttools.analytical.utils.StochDynamics.full_fitness_difference_group", false]], "full_fitness_difference_pairwise() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.full_fitness_difference_pairwise", false], [7, "egttools.analytical.sed_analytical.StochDynamics.full_fitness_difference_pairwise", false], [19, "egttools.analytical.utils.StochDynamics.full_fitness_difference_pairwise", false]], "full_gradient_selection() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.full_gradient_selection", false], [7, "egttools.analytical.sed_analytical.StochDynamics.full_gradient_selection", false], [19, "egttools.analytical.utils.StochDynamics.full_gradient_selection", false]], "full_gradient_selection_without_mutation() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.full_gradient_selection_without_mutation", false], [7, "egttools.analytical.sed_analytical.StochDynamics.full_gradient_selection_without_mutation", false], [19, "egttools.analytical.utils.StochDynamics.full_gradient_selection_without_mutation", false]], "game() (network method)": [[194, "egttools.numerical.structure.Network.game", false], [200, "egttools.numerical.structure.factories.Network.game", false]], "game() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.game", false], [201, "egttools.numerical.structure.factories.NetworkGroup.game", false]], "game() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.game", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.game", false]], "game() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.game", false], [203, "egttools.numerical.structure.factories.NetworkSync.game", false]], "game() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.game", false], [179, "egttools.numerical.numerical_.PairwiseComparison.game", false], [256, "egttools.plotting.simplified.PairwiseComparison.game", false]], "generalpopulationevolver (class in egttools.numerical)": [[173, "egttools.numerical.GeneralPopulationEvolver", false]], "generalpopulationevolver (class in egttools.numerical.numerical_)": [[177, "egttools.numerical.numerical_.GeneralPopulationEvolver", false]], "generoustft (class in egttools.behaviors.normalform.twoactions)": [[77, "egttools.behaviors.NormalForm.TwoActions.GenerousTFT", false]], "get_aa() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_aa", false]], "get_action() (abstractcrdstrategy method)": [[53, "egttools.behaviors.CRD.AbstractCRDStrategy.get_action", false], [59, "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy.get_action", false], [62, "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy.get_action", false], [65, "egttools.behaviors.CRD.time_based.AbstractCRDStrategy.get_action", false]], "get_action() (abstractnfgstrategy method)": [[68, "egttools.behaviors.NormalForm.AbstractNFGStrategy.get_action", false], [88, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy.get_action", false]], "get_action() (actioninertia method)": [[70, "egttools.behaviors.NormalForm.TwoActions.ActionInertia.get_action", false]], "get_action() (cooperator method)": [[71, "egttools.behaviors.NormalForm.TwoActions.Cooperator.get_action", false]], "get_action() (crdmemoryoneplayer method)": [[54, "egttools.behaviors.CRD.CRDMemoryOnePlayer.get_action", false]], "get_action() (defector method)": [[72, "egttools.behaviors.NormalForm.TwoActions.Defector.get_action", false]], "get_action() (detective method)": [[73, "egttools.behaviors.NormalForm.TwoActions.Detective.get_action", false], [89, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective.get_action", false]], "get_action() (epsilongrim method)": [[74, "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM.get_action", false], [90, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM.get_action", false]], "get_action() (epsilontft method)": [[75, "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT.get_action", false], [91, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT.get_action", false]], "get_action() (generoustft method)": [[77, "egttools.behaviors.NormalForm.TwoActions.GenerousTFT.get_action", false]], "get_action() (goalbasedcrdstrategy method)": [[55, "egttools.behaviors.CRD.GoalBasedCRDStrategy.get_action", false], [60, "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy.get_action", false]], "get_action() (gradualtft method)": [[78, "egttools.behaviors.NormalForm.TwoActions.GradualTFT.get_action", false]], "get_action() (grim method)": [[76, "egttools.behaviors.NormalForm.TwoActions.GRIM.get_action", false]], "get_action() (imperfecttft method)": [[79, "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT.get_action", false]], "get_action() (memoryonestrategy method)": [[80, "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy.get_action", false], [92, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy.get_action", false]], "get_action() (movingaveragecrdstrategy method)": [[56, "egttools.behaviors.CRD.MovingAverageCRDStrategy.get_action", false], [63, "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy.get_action", false]], "get_action() (opinion method)": [[94, "egttools.behaviors.opinion_behaviors.Opinion.get_action", false]], "get_action() (pavlov method)": [[81, "egttools.behaviors.NormalForm.TwoActions.Pavlov.get_action", false]], "get_action() (pggoneshotstrategy method)": [[97, "egttools.behaviors.pgg_behaviors.PGGOneShotStrategy.get_action", false], [160, "egttools.games.pgg.PGGOneShotStrategy.get_action", false]], "get_action() (random method)": [[82, "egttools.behaviors.NormalForm.TwoActions.Random.get_action", false]], "get_action() (suspicioustft method)": [[83, "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT.get_action", false]], "get_action() (tft method)": [[84, "egttools.behaviors.NormalForm.TwoActions.TFT.get_action", false]], "get_action() (tftt method)": [[85, "egttools.behaviors.NormalForm.TwoActions.TFTT.get_action", false]], "get_action() (timebasedcrdstrategy method)": [[57, "egttools.behaviors.CRD.TimeBasedCRDStrategy.get_action", false], [66, "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy.get_action", false]], "get_action() (ttft method)": [[86, "egttools.behaviors.NormalForm.TwoActions.TTFT.get_action", false]], "get_agg_filter() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_agg_filter", false]], "get_alpha() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_alpha", false]], "get_angle() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_angle", false]], "get_animated() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_animated", false]], "get_antialiased() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_antialiased", false]], "get_capstyle() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_capstyle", false]], "get_center() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_center", false]], "get_children() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_children", false]], "get_clip_box() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_clip_box", false]], "get_clip_on() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_clip_on", false]], "get_clip_path() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_clip_path", false]], "get_co_vertices() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_co_vertices", false]], "get_corners() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_corners", false]], "get_cursor_data() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_cursor_data", false]], "get_data_transform() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_data_transform", false]], "get_ec() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_ec", false]], "get_edge_data() (graph method)": [[279, "egttools.utils.Graph.get_edge_data", false]], "get_edgecolor() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_edgecolor", false]], "get_extents() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_extents", false]], "get_extraction() (abstractcprstrategy method)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.get_extraction", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.get_extraction", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.get_extraction", false]], "get_extraction() (commitmentstrategy method)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.get_extraction", false]], "get_extraction() (fairextraction method)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.get_extraction", false]], "get_extraction() (fakestrategy method)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.get_extraction", false]], "get_extraction() (fixedextraction method)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.get_extraction", false]], "get_extraction() (freestrategy method)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.get_extraction", false]], "get_extraction() (highextraction method)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.get_extraction", false]], "get_extraction() (nashextraction method)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.get_extraction", false]], "get_facecolor() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_facecolor", false]], "get_fc() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_fc", false]], "get_figure() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_figure", false]], "get_figure_and_axis() (simplex2d method)": [[209, "egttools.plotting.Simplex2D.get_figure_and_axis", false], [239, "egttools.plotting.simplex2d.Simplex2D.get_figure_and_axis", false], [257, "egttools.plotting.simplified.Simplex2D.get_figure_and_axis", false]], "get_fill() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_fill", false]], "get_gid() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_gid", false]], "get_hatch() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_hatch", false]], "get_hatch_linewidth() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_hatch_linewidth", false]], "get_height() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_height", false]], "get_in_layout() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_in_layout", false]], "get_joinstyle() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_joinstyle", false]], "get_label() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_label", false]], "get_linestyle() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_linestyle", false]], "get_linewidth() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_linewidth", false]], "get_ls() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_ls", false]], "get_lw() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_lw", false]], "get_mouseover() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_mouseover", false]], "get_nb_committed() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.get_nb_committed", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.get_nb_committed", false]], "get_pairwise_gradient_from_replicator() (in module egttools.analytical.utils)": [[27, "egttools.analytical.utils.get_pairwise_gradient_from_replicator", false]], "get_pairwise_gradient_from_replicator_n_player() (in module egttools.analytical.utils)": [[28, "egttools.analytical.utils.get_pairwise_gradient_from_replicator_n_player", false]], "get_patch_transform() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_patch_transform", false]], "get_path() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_path", false]], "get_path_effects() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_path_effects", false]], "get_payoff() (abstractcprstrategy static method)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.get_payoff", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.get_payoff", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.get_payoff", false]], "get_payoff() (commitmentstrategy static method)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.get_payoff", false]], "get_payoff() (fairextraction static method)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.get_payoff", false]], "get_payoff() (fakestrategy static method)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.get_payoff", false]], "get_payoff() (fixedextraction static method)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.get_payoff", false]], "get_payoff() (freestrategy static method)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.get_payoff", false]], "get_payoff() (highextraction static method)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.get_payoff", false]], "get_payoff() (nashextraction static method)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.get_payoff", false]], "get_payoff_function() (in module egttools.utils)": [[288, "egttools.utils.get_payoff_function", false]], "get_picker() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_picker", false]], "get_radius() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_radius", false]], "get_rasterized() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_rasterized", false]], "get_shape() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.get_shape", false]], "get_shape() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.get_shape", false], [285, "egttools.utils.csr_matrix.get_shape", false]], "get_shape() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.get_shape", false]], "get_sketch_params() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_sketch_params", false]], "get_snap() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_snap", false]], "get_tightbbox() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_tightbbox", false]], "get_transform() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_transform", false]], "get_transformed_clip_path_and_affine() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_transformed_clip_path_and_affine", false]], "get_url() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_url", false]], "get_vertices() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_vertices", false]], "get_verts() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_verts", false]], "get_visible() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_visible", false]], "get_width() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_width", false]], "get_window_extent() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_window_extent", false]], "get_zorder() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.get_zorder", false]], "getcol() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.getcol", false]], "getcol() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.getcol", false], [285, "egttools.utils.csr_matrix.getcol", false]], "getcol() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.getcol", false]], "getformat() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.getformat", false]], "getformat() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.getformat", false], [285, "egttools.utils.csr_matrix.getformat", false]], "getformat() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.getformat", false]], "geth() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.getH", false]], "geth() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.getH", false], [285, "egttools.utils.csr_matrix.getH", false]], "geth() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.getH", false]], "getmaxprint() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.getmaxprint", false]], "getmaxprint() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.getmaxprint", false], [285, "egttools.utils.csr_matrix.getmaxprint", false]], "getmaxprint() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.getmaxprint", false]], "getnnz() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.getnnz", false]], "getnnz() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.getnnz", false], [285, "egttools.utils.csr_matrix.getnnz", false]], "getnnz() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.getnnz", false]], "getrow() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.getrow", false]], "getrow() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.getrow", false], [285, "egttools.utils.csr_matrix.getrow", false]], "getrow() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.getrow", false]], "getrowview() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.getrowview", false]], "goalbasedcrdstrategy (class in egttools.behaviors.crd)": [[55, "egttools.behaviors.CRD.GoalBasedCRDStrategy", false]], "goalbasedcrdstrategy (class in egttools.behaviors.crd.goal_based)": [[60, "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy", false]], "gradient_selection() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.gradient_selection", false], [7, "egttools.analytical.sed_analytical.StochDynamics.gradient_selection", false], [19, "egttools.analytical.utils.StochDynamics.gradient_selection", false]], "gradualtft (class in egttools.behaviors.normalform.twoactions)": [[78, "egttools.behaviors.NormalForm.TwoActions.GradualTFT", false]], "graph (class in egttools.utils)": [[279, "egttools.utils.Graph", false]], "graph_attr_dict_factory (graph attribute)": [[279, "egttools.utils.Graph.graph_attr_dict_factory", false]], "grim (class in egttools.behaviors.normalform.twoactions)": [[76, "egttools.behaviors.NormalForm.TwoActions.GRIM", false]], "group_achievement_per_group (oneshotcrd property)": [[126, "egttools.games.OneShotCRD.group_achievement_per_group", false]], "group_size (crdgame property)": [[116, "egttools.games.CRDGame.group_size", false]], "group_size (crdgametu property)": [[117, "egttools.games.CRDGameTU.group_size", false]], "group_size (oneshotcrd property)": [[126, "egttools.games.OneShotCRD.group_size", false]], "group_size() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.group_size", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.group_size", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.group_size", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.group_size", false], [158, "egttools.games.pgg.AbstractNPlayerGame.group_size", false]], "group_size() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.group_size", false]], "group_size() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.group_size", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.group_size", false]], "group_size() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.group_size", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.group_size", false]], "group_size() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.group_size", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.group_size", false]], "group_size() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.group_size", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.group_size", false]], "group_size() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.group_size", false]], "group_size() (pgg method)": [[128, "egttools.games.PGG.group_size", false], [159, "egttools.games.pgg.PGG.group_size", false]], "has_canonical_format (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.has_canonical_format", false]], "has_canonical_format (csc_matrix property)": [[284, "id2", false]], "has_canonical_format (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.has_canonical_format", false], [285, "egttools.utils.csr_matrix.has_canonical_format", false]], "has_canonical_format (csr_matrix property)": [[10, "id2", false], [285, "id2", false]], "has_edge() (graph method)": [[279, "egttools.utils.Graph.has_edge", false]], "has_node() (graph method)": [[279, "egttools.utils.Graph.has_node", false]], "has_sorted_indices (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.has_sorted_indices", false]], "has_sorted_indices (csc_matrix property)": [[284, "id3", false]], "has_sorted_indices (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.has_sorted_indices", false], [285, "egttools.utils.csr_matrix.has_sorted_indices", false]], "has_sorted_indices (csr_matrix property)": [[10, "id3", false], [285, "id3", false]], "have_units() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.have_units", false]], "headers (datatable property)": [[103, "egttools.datastructures.DataTable.headers", false]], "height (circle property)": [[238, "egttools.plotting.simplex2d.Circle.height", false]], "high_extraction() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.high_extraction", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.high_extraction", false]], "high_extraction() (in module egttools.behaviors.cpr.cpr_strategies)": [[49, "egttools.behaviors.CPR.cpr_strategies.high_extraction", false]], "highextraction (class in egttools.behaviors.cpr.cpr_strategies)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction", false]], "imag (csc_matrix property)": [[284, "egttools.utils.csc_matrix.imag", false]], "imag (csr_matrix property)": [[10, "egttools.analytical.sed_analytical.csr_matrix.imag", false], [285, "egttools.utils.csr_matrix.imag", false]], "imag (lil_matrix property)": [[12, "egttools.analytical.sed_analytical.lil_matrix.imag", false]], "imperfecttft (class in egttools.behaviors.normalform.twoactions)": [[79, "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT", false]], "indices (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.indices", false]], "indices (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.indices", false], [285, "egttools.utils.csr_matrix.indices", false]], "indptr (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.indptr", false]], "indptr (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.indptr", false], [285, "egttools.utils.csr_matrix.indptr", false]], "informalriskgame (class in egttools.games)": [[120, "egttools.games.InformalRiskGame", false]], "informalriskgame (class in egttools.games.informal_risk)": [[139, "egttools.games.informal_risk.InformalRiskGame", false]], "initialize() (abstractstructure method)": [[193, "egttools.numerical.structure.AbstractStructure.initialize", false]], "initialize() (network method)": [[194, "egttools.numerical.structure.Network.initialize", false], [200, "egttools.numerical.structure.factories.Network.initialize", false]], "initialize() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.initialize", false], [201, "egttools.numerical.structure.factories.NetworkGroup.initialize", false]], "initialize() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.initialize", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.initialize", false]], "initialize() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.initialize", false], [203, "egttools.numerical.structure.factories.NetworkSync.initialize", false]], "initialize_state() (network method)": [[194, "egttools.numerical.structure.Network.initialize_state", false], [200, "egttools.numerical.structure.factories.Network.initialize_state", false]], "initialize_state() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.initialize_state", false], [201, "egttools.numerical.structure.factories.NetworkGroup.initialize_state", false]], "initialize_state() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.initialize_state", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.initialize_state", false]], "initialize_state() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.initialize_state", false], [203, "egttools.numerical.structure.factories.NetworkSync.initialize_state", false]], "is_blas_lapack_enabled() (in module egttools)": [[170, "egttools.is_blas_lapack_enabled", false]], "is_blas_lapack_enabled() (in module egttools.numerical.numerical_)": [[184, "egttools.numerical.numerical_.is_blas_lapack_enabled", false]], "is_commitment_validated() (abstractcprstrategy method)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.is_commitment_validated", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.is_commitment_validated", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.is_commitment_validated", false]], "is_commitment_validated() (commitmentstrategy method)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.is_commitment_validated", false]], "is_commitment_validated() (fairextraction method)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.is_commitment_validated", false]], "is_commitment_validated() (fakestrategy method)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.is_commitment_validated", false]], "is_commitment_validated() (fixedextraction method)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.is_commitment_validated", false]], "is_commitment_validated() (freestrategy method)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.is_commitment_validated", false]], "is_commitment_validated() (highextraction method)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.is_commitment_validated", false]], "is_commitment_validated() (nashextraction method)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.is_commitment_validated", false]], "is_directed() (graph method)": [[279, "egttools.utils.Graph.is_directed", false]], "is_multigraph() (graph method)": [[279, "egttools.utils.Graph.is_multigraph", false]], "is_openmp_enabled() (in module egttools)": [[171, "egttools.is_openmp_enabled", false]], "is_openmp_enabled() (in module egttools.numerical.numerical_)": [[185, "egttools.numerical.numerical_.is_openmp_enabled", false]], "is_stochastic() (abstractnfgstrategy method)": [[68, "egttools.behaviors.NormalForm.AbstractNFGStrategy.is_stochastic", false], [88, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy.is_stochastic", false]], "is_stochastic() (actioninertia method)": [[70, "egttools.behaviors.NormalForm.TwoActions.ActionInertia.is_stochastic", false]], "is_stochastic() (cooperator method)": [[71, "egttools.behaviors.NormalForm.TwoActions.Cooperator.is_stochastic", false]], "is_stochastic() (defector method)": [[72, "egttools.behaviors.NormalForm.TwoActions.Defector.is_stochastic", false]], "is_stochastic() (detective method)": [[73, "egttools.behaviors.NormalForm.TwoActions.Detective.is_stochastic", false], [89, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective.is_stochastic", false]], "is_stochastic() (epsilongrim method)": [[74, "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM.is_stochastic", false], [90, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM.is_stochastic", false]], "is_stochastic() (epsilontft method)": [[75, "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT.is_stochastic", false], [91, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT.is_stochastic", false]], "is_stochastic() (generoustft method)": [[77, "egttools.behaviors.NormalForm.TwoActions.GenerousTFT.is_stochastic", false]], "is_stochastic() (gradualtft method)": [[78, "egttools.behaviors.NormalForm.TwoActions.GradualTFT.is_stochastic", false]], "is_stochastic() (grim method)": [[76, "egttools.behaviors.NormalForm.TwoActions.GRIM.is_stochastic", false]], "is_stochastic() (imperfecttft method)": [[79, "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT.is_stochastic", false]], "is_stochastic() (memoryonestrategy method)": [[80, "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy.is_stochastic", false], [92, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy.is_stochastic", false]], "is_stochastic() (pavlov method)": [[81, "egttools.behaviors.NormalForm.TwoActions.Pavlov.is_stochastic", false]], "is_stochastic() (random method)": [[82, "egttools.behaviors.NormalForm.TwoActions.Random.is_stochastic", false]], "is_stochastic() (suspicioustft method)": [[83, "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT.is_stochastic", false]], "is_stochastic() (tft method)": [[84, "egttools.behaviors.NormalForm.TwoActions.TFT.is_stochastic", false]], "is_stochastic() (tftt method)": [[85, "egttools.behaviors.NormalForm.TwoActions.TFTT.is_stochastic", false]], "is_stochastic() (ttft method)": [[86, "egttools.behaviors.NormalForm.TwoActions.TTFT.is_stochastic", false]], "is_transform_set() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.is_transform_set", false]], "lil_matrix (class in egttools.analytical.sed_analytical)": [[12, "egttools.analytical.sed_analytical.lil_matrix", false]], "log1p() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.log1p", false]], "log1p() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.log1p", false], [285, "egttools.utils.csr_matrix.log1p", false]], "low_extraction() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.low_extraction", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.low_extraction", false]], "matrix2playergameholder (class in egttools.games)": [[121, "egttools.games.Matrix2PlayerGameHolder", false]], "matrix2playergameholder (class in egttools.plotting.simplified)": [[253, "egttools.plotting.simplified.Matrix2PlayerGameHolder", false]], "matrixnplayergameholder (class in egttools.games)": [[122, "egttools.games.MatrixNPlayerGameHolder", false]], "matrixnplayergameholder (class in egttools.plotting.simplified)": [[254, "egttools.plotting.simplified.MatrixNPlayerGameHolder", false]], "max() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.max", false]], "max() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.max", false], [285, "egttools.utils.csr_matrix.max", false]], "max_rounds (timinguncertainty property)": [[105, "egttools.distributions.TimingUncertainty.max_rounds", false]], "maximum() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.maximum", false]], "maximum() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.maximum", false], [285, "egttools.utils.csr_matrix.maximum", false]], "maximum() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.maximum", false]], "maxticks (autominorlocator attribute)": [[228, "egttools.plotting.indicators.AutoMinorLocator.MAXTICKS", false]], "mean() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.mean", false]], "mean() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.mean", false], [285, "egttools.utils.csr_matrix.mean", false]], "mean() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.mean", false]], "mean_population_state() (abstractstructure method)": [[193, "egttools.numerical.structure.AbstractStructure.mean_population_state", false]], "mean_population_state() (network method)": [[194, "egttools.numerical.structure.Network.mean_population_state", false], [200, "egttools.numerical.structure.factories.Network.mean_population_state", false]], "mean_population_state() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.mean_population_state", false], [201, "egttools.numerical.structure.factories.NetworkGroup.mean_population_state", false]], "mean_population_state() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.mean_population_state", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.mean_population_state", false]], "mean_population_state() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.mean_population_state", false], [203, "egttools.numerical.structure.factories.NetworkSync.mean_population_state", false]], "memoryonestrategy (class in egttools.behaviors.normalform.twoactions)": [[80, "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy", false]], "memoryonestrategy (class in egttools.behaviors.normalform.twoactions.nfg_strategies)": [[92, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy", false]], "min() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.min", false]], "min() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.min", false], [285, "egttools.utils.csr_matrix.min", false]], "min_extraction() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.min_extraction", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.min_extraction", false]], "min_nb_cooperators (oneshotcrd property)": [[126, "egttools.games.OneShotCRD.min_nb_cooperators", false]], "min_nb_cooperators() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.min_nb_cooperators", false]], "min_rounds (crdgametu property)": [[117, "egttools.games.CRDGameTU.min_rounds", false]], "minimum() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.minimum", false]], "minimum() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.minimum", false], [285, "egttools.utils.csr_matrix.minimum", false]], "minimum() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.minimum", false]], "module": [[0, "module-egttools", false], [1, "module-egttools.analytical", false], [6, "module-egttools.analytical.sed_analytical", false], [18, "module-egttools.analytical.utils", false], [33, "module-egttools.behaviors", false], [34, "module-egttools.behaviors.CPR", false], [35, "module-egttools.behaviors.CPR.abstract_cpr_strategy", false], [39, "module-egttools.behaviors.CPR.cpr_strategies", false], [52, "module-egttools.behaviors.CRD", false], [58, "module-egttools.behaviors.CRD.goal_based", false], [61, "module-egttools.behaviors.CRD.moving_average", false], [64, "module-egttools.behaviors.CRD.time_based", false], [67, "module-egttools.behaviors.NormalForm", false], [69, "module-egttools.behaviors.NormalForm.TwoActions", false], [87, "module-egttools.behaviors.NormalForm.TwoActions.nfg_strategies", false], [93, "module-egttools.behaviors.opinion_behaviors", false], [96, "module-egttools.behaviors.pgg_behaviors", false], [102, "module-egttools.datastructures", false], [104, "module-egttools.distributions", false], [111, "module-egttools.games", false], [129, "module-egttools.games.abstract_games", false], [137, "module-egttools.games.informal_risk", false], [143, "module-egttools.games.nonlinear_games", false], [151, "module-egttools.games.opinion_game", false], [157, "module-egttools.games.pgg", false], [162, "module-egttools.helpers", false], [163, "module-egttools.helpers.vectorized", false], [172, "module-egttools.numerical", false], [176, "module-egttools.numerical.numerical_", false], [192, "module-egttools.numerical.structure", false], [198, "module-egttools.numerical.structure.factories", false], [208, "module-egttools.plotting", false], [211, "module-egttools.plotting.helpers", false], [227, "module-egttools.plotting.indicators", false], [237, "module-egttools.plotting.simplex2d", false], [251, "module-egttools.plotting.simplified", false], [277, "module-egttools.utils", false]], "moment() (in module egttools.games.opinion_game)": [[154, "egttools.games.opinion_game.moment", false]], "mouseover (circle property)": [[238, "egttools.plotting.simplex2d.Circle.mouseover", false]], "movingaveragecrdstrategy (class in egttools.behaviors.crd)": [[56, "egttools.behaviors.CRD.MovingAverageCRDStrategy", false]], "movingaveragecrdstrategy (class in egttools.behaviors.crd.moving_average)": [[63, "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy", false]], "multinomial_pmf() (in module egttools.distributions)": [[108, "egttools.distributions.multinomial_pmf", false]], "multiply() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.multiply", false]], "multiply() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.multiply", false], [285, "egttools.utils.csr_matrix.multiply", false]], "multiply() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.multiply", false]], "multivariate_hypergeometric_pdf() (in module egttools.distributions)": [[109, "egttools.distributions.multivariate_hypergeometric_pdf", false]], "name (graph property)": [[279, "egttools.utils.Graph.name", false]], "nanmax() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.nanmax", false]], "nanmax() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.nanmax", false], [285, "egttools.utils.csr_matrix.nanmax", false]], "nanmin() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.nanmin", false]], "nanmin() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.nanmin", false], [285, "egttools.utils.csr_matrix.nanmin", false]], "nash_extraction() (in module egttools.behaviors.cpr.cpr_strategies)": [[50, "egttools.behaviors.CPR.cpr_strategies.nash_extraction", false]], "nashextraction (class in egttools.behaviors.cpr.cpr_strategies)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction", false]], "nb_group_configurations() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.nb_group_configurations", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.nb_group_configurations", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.nb_group_configurations", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.nb_group_configurations", false], [158, "egttools.games.pgg.AbstractNPlayerGame.nb_group_configurations", false]], "nb_group_configurations() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.nb_group_configurations", false]], "nb_group_configurations() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.nb_group_configurations", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.nb_group_configurations", false]], "nb_group_configurations() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.nb_group_configurations", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.nb_group_configurations", false]], "nb_group_configurations() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.nb_group_configurations", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.nb_group_configurations", false]], "nb_group_configurations() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.nb_group_configurations", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.nb_group_configurations", false]], "nb_group_configurations() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.nb_group_configurations", false]], "nb_group_configurations() (pgg method)": [[128, "egttools.games.PGG.nb_group_configurations", false], [159, "egttools.games.pgg.PGG.nb_group_configurations", false]], "nb_rounds (crdgame property)": [[116, "egttools.games.CRDGame.nb_rounds", false]], "nb_rounds (normalformgame property)": [[124, "egttools.games.NormalFormGame.nb_rounds", false]], "nb_rounds() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.nb_rounds", false]], "nb_states (crdgame property)": [[116, "egttools.games.CRDGame.nb_states", false]], "nb_states (crdgametu property)": [[117, "egttools.games.CRDGameTU.nb_states", false]], "nb_states (normalformgame property)": [[124, "egttools.games.NormalFormGame.nb_states", false]], "nb_states (oneshotcrd property)": [[126, "egttools.games.OneShotCRD.nb_states", false]], "nb_states (pairwisecomparisonnumerical property)": [[175, "egttools.numerical.PairwiseComparisonNumerical.nb_states", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.nb_states", false]], "nb_states() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.nb_states", false], [179, "egttools.numerical.numerical_.PairwiseComparison.nb_states", false], [256, "egttools.plotting.simplified.PairwiseComparison.nb_states", false]], "nb_strategies (informalriskgame property)": [[120, "egttools.games.InformalRiskGame.nb_strategies", false], [139, "egttools.games.informal_risk.InformalRiskGame.nb_strategies", false]], "nb_strategies (pairwisecomparisonnumerical property)": [[175, "egttools.numerical.PairwiseComparisonNumerical.nb_strategies", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.nb_strategies", false]], "nb_strategies() (abstractgame method)": [[112, "egttools.games.AbstractGame.nb_strategies", false], [130, "egttools.games.abstract_games.AbstractGame.nb_strategies", false], [138, "egttools.games.informal_risk.AbstractGame.nb_strategies", false], [252, "egttools.plotting.simplified.AbstractGame.nb_strategies", false], [278, "egttools.utils.AbstractGame.nb_strategies", false]], "nb_strategies() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.nb_strategies", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.nb_strategies", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.nb_strategies", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.nb_strategies", false], [158, "egttools.games.pgg.AbstractNPlayerGame.nb_strategies", false]], "nb_strategies() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.nb_strategies", false]], "nb_strategies() (abstractspatialgame method)": [[114, "egttools.games.AbstractSpatialGame.nb_strategies", false], [199, "egttools.numerical.structure.factories.AbstractSpatialGame.nb_strategies", false]], "nb_strategies() (abstractstructure method)": [[193, "egttools.numerical.structure.AbstractStructure.nb_strategies", false]], "nb_strategies() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.nb_strategies", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.nb_strategies", false]], "nb_strategies() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.nb_strategies", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.nb_strategies", false]], "nb_strategies() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.nb_strategies", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.nb_strategies", false]], "nb_strategies() (crdgame method)": [[116, "egttools.games.CRDGame.nb_strategies", false]], "nb_strategies() (crdgametu method)": [[117, "egttools.games.CRDGameTU.nb_strategies", false]], "nb_strategies() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.nb_strategies", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.nb_strategies", false]], "nb_strategies() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.nb_strategies", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.nb_strategies", false]], "nb_strategies() (network method)": [[194, "egttools.numerical.structure.Network.nb_strategies", false], [200, "egttools.numerical.structure.factories.Network.nb_strategies", false]], "nb_strategies() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.nb_strategies", false], [201, "egttools.numerical.structure.factories.NetworkGroup.nb_strategies", false]], "nb_strategies() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.nb_strategies", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.nb_strategies", false]], "nb_strategies() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.nb_strategies", false], [203, "egttools.numerical.structure.factories.NetworkSync.nb_strategies", false]], "nb_strategies() (normalformgame method)": [[124, "egttools.games.NormalFormGame.nb_strategies", false]], "nb_strategies() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.nb_strategies", false]], "nb_strategies() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.nb_strategies", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.nb_strategies", false]], "nb_strategies() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.nb_strategies", false]], "nb_strategies() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.nb_strategies", false]], "nb_strategies() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.nb_strategies", false]], "nb_strategies() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.nb_strategies", false], [179, "egttools.numerical.numerical_.PairwiseComparison.nb_strategies", false], [256, "egttools.plotting.simplified.PairwiseComparison.nb_strategies", false]], "nb_strategies() (pgg method)": [[128, "egttools.games.PGG.nb_strategies", false], [159, "egttools.games.pgg.PGG.nb_strategies", false]], "nbunch_iter() (graph method)": [[279, "egttools.utils.Graph.nbunch_iter", false]], "ndarray (in module egttools.plotting.helpers)": [[212, "egttools.plotting.helpers.NDArray", false]], "ndarray (in module egttools.plotting.simplified)": [[255, "egttools.plotting.simplified.NDArray", false]], "ndim (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.ndim", false]], "ndim (csc_matrix property)": [[284, "id4", false]], "ndim (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.ndim", false], [285, "egttools.utils.csr_matrix.ndim", false]], "ndim (csr_matrix property)": [[10, "id4", false], [285, "id4", false]], "ndim (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.ndim", false]], "ndim (lil_matrix property)": [[12, "id1", false]], "neighbors() (graph method)": [[279, "egttools.utils.Graph.neighbors", false]], "network (class in egttools.numerical.structure)": [[194, "egttools.numerical.structure.Network", false]], "network (class in egttools.numerical.structure.factories)": [[200, "egttools.numerical.structure.factories.Network", false]], "network() (network method)": [[194, "egttools.numerical.structure.Network.network", false], [200, "egttools.numerical.structure.factories.Network.network", false]], "network() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.network", false], [201, "egttools.numerical.structure.factories.NetworkGroup.network", false]], "network() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.network", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.network", false]], "network() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.network", false], [203, "egttools.numerical.structure.factories.NetworkSync.network", false]], "network_factory() (in module egttools.numerical.structure.factories)": [[204, "egttools.numerical.structure.factories.network_factory", false]], "network_group_factory() (in module egttools.numerical.structure.factories)": [[205, "egttools.numerical.structure.factories.network_group_factory", false]], "network_group_sync_factory() (in module egttools.numerical.structure.factories)": [[206, "egttools.numerical.structure.factories.network_group_sync_factory", false]], "network_sync_factory() (in module egttools.numerical.structure.factories)": [[207, "egttools.numerical.structure.factories.network_sync_factory", false]], "networkevolver (class in egttools.numerical)": [[174, "egttools.numerical.NetworkEvolver", false]], "networkevolver (class in egttools.numerical.numerical_)": [[178, "egttools.numerical.numerical_.NetworkEvolver", false]], "networkgroup (class in egttools.numerical.structure)": [[195, "egttools.numerical.structure.NetworkGroup", false]], "networkgroup (class in egttools.numerical.structure.factories)": [[201, "egttools.numerical.structure.factories.NetworkGroup", false]], "networkgroupsync (class in egttools.numerical.structure)": [[196, "egttools.numerical.structure.NetworkGroupSync", false]], "networkgroupsync (class in egttools.numerical.structure.factories)": [[202, "egttools.numerical.structure.factories.NetworkGroupSync", false]], "networksync (class in egttools.numerical.structure)": [[197, "egttools.numerical.structure.NetworkSync", false]], "networksync (class in egttools.numerical.structure.factories)": [[203, "egttools.numerical.structure.factories.NetworkSync", false]], "nnz (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.nnz", false]], "nnz (csc_matrix property)": [[284, "id5", false]], "nnz (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.nnz", false], [285, "egttools.utils.csr_matrix.nnz", false]], "nnz (csr_matrix property)": [[10, "id5", false], [285, "id5", false]], "nnz (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.nnz", false]], "nnz (lil_matrix property)": [[12, "id2", false]], "node_attr_dict_factory (graph attribute)": [[279, "egttools.utils.Graph.node_attr_dict_factory", false]], "node_dict_factory (graph attribute)": [[279, "egttools.utils.Graph.node_dict_factory", false]], "nodes (graph property)": [[279, "egttools.utils.Graph.nodes", false]], "nonsingular() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.nonsingular", false]], "nonzero() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.nonzero", false]], "nonzero() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.nonzero", false], [285, "egttools.utils.csr_matrix.nonzero", false]], "nonzero() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.nonzero", false]], "normalformgame (class in egttools.games)": [[124, "egttools.games.NormalFormGame", false]], "normalformnetworkgame (class in egttools.games)": [[125, "egttools.games.NormalFormNetworkGame", false]], "nplayerstaghunt (class in egttools.games)": [[123, "egttools.games.NPlayerStagHunt", false]], "nplayerstaghunt (class in egttools.games.nonlinear_games)": [[148, "egttools.games.nonlinear_games.NPlayerStagHunt", false]], "number_of_edges() (graph method)": [[279, "egttools.utils.Graph.number_of_edges", false]], "number_of_nodes() (graph method)": [[279, "egttools.utils.Graph.number_of_nodes", false]], "odeint() (in module egttools.plotting.simplex2d)": [[245, "egttools.plotting.simplex2d.odeint", false]], "oneshotcrd (class in egttools.games)": [[126, "egttools.games.OneShotCRD", false]], "oneshotcrdnetworkgame (class in egttools.games)": [[127, "egttools.games.OneShotCRDNetworkGame", false]], "opinion (class in egttools.behaviors.opinion_behaviors)": [[94, "egttools.behaviors.opinion_behaviors.Opinion", false]], "opinion_factory() (in module egttools.behaviors.opinion_behaviors)": [[95, "egttools.behaviors.opinion_behaviors.opinion_factory", false]], "opiniongame (class in egttools.games.opinion_game)": [[153, "egttools.games.opinion_game.OpinionGame", false]], "order() (graph method)": [[279, "egttools.utils.Graph.order", false]], "p (timinguncertainty property)": [[105, "egttools.distributions.TimingUncertainty.p", false]], "pairwisecomparison (class in egttools.analytical)": [[2, "egttools.analytical.PairwiseComparison", false]], "pairwisecomparison (class in egttools.numerical.numerical_)": [[179, "egttools.numerical.numerical_.PairwiseComparison", false]], "pairwisecomparison (class in egttools.plotting.simplified)": [[256, "egttools.plotting.simplified.PairwiseComparison", false]], "pairwisecomparisonnumerical (class in egttools.numerical)": [[175, "egttools.numerical.PairwiseComparisonNumerical", false]], "pairwisecomparisonnumerical (class in egttools.numerical.numerical_)": [[180, "egttools.numerical.numerical_.PairwiseComparisonNumerical", false]], "pavlov (class in egttools.behaviors.normalform.twoactions)": [[81, "egttools.behaviors.NormalForm.TwoActions.Pavlov", false]], "payoff() (abstractgame method)": [[112, "egttools.games.AbstractGame.payoff", false], [130, "egttools.games.abstract_games.AbstractGame.payoff", false], [138, "egttools.games.informal_risk.AbstractGame.payoff", false], [252, "egttools.plotting.simplified.AbstractGame.payoff", false], [278, "egttools.utils.AbstractGame.payoff", false]], "payoff() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.payoff", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.payoff", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.payoff", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.payoff", false], [158, "egttools.games.pgg.AbstractNPlayerGame.payoff", false]], "payoff() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.payoff", false]], "payoff() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.payoff", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.payoff", false]], "payoff() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.payoff", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.payoff", false]], "payoff() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.payoff", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.payoff", false]], "payoff() (crdgame method)": [[116, "egttools.games.CRDGame.payoff", false]], "payoff() (crdgametu method)": [[117, "egttools.games.CRDGameTU.payoff", false]], "payoff() (informalriskgame method)": [[120, "egttools.games.InformalRiskGame.payoff", false], [139, "egttools.games.informal_risk.InformalRiskGame.payoff", false]], "payoff() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.payoff", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.payoff", false]], "payoff() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.payoff", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.payoff", false]], "payoff() (normalformgame method)": [[124, "egttools.games.NormalFormGame.payoff", false]], "payoff() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.payoff", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.payoff", false]], "payoff() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.payoff", false]], "payoff() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.payoff", false]], "payoff() (pgg method)": [[128, "egttools.games.PGG.payoff", false], [159, "egttools.games.pgg.PGG.payoff", false]], "payoff_no_commitment() (in module egttools.behaviors.cpr.cpr_strategies)": [[51, "egttools.behaviors.CPR.cpr_strategies.payoff_no_commitment", false]], "payoffs (informalriskgame property)": [[120, "egttools.games.InformalRiskGame.payoffs", false], [139, "egttools.games.informal_risk.InformalRiskGame.payoffs", false]], "payoffs (pairwisecomparisonnumerical property)": [[175, "egttools.numerical.PairwiseComparisonNumerical.payoffs", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.payoffs", false]], "payoffs() (abstractgame method)": [[112, "egttools.games.AbstractGame.payoffs", false], [130, "egttools.games.abstract_games.AbstractGame.payoffs", false], [138, "egttools.games.informal_risk.AbstractGame.payoffs", false], [252, "egttools.plotting.simplified.AbstractGame.payoffs", false], [278, "egttools.utils.AbstractGame.payoffs", false]], "payoffs() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.payoffs", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.payoffs", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.payoffs", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.payoffs", false], [158, "egttools.games.pgg.AbstractNPlayerGame.payoffs", false]], "payoffs() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.payoffs", false]], "payoffs() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.payoffs", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.payoffs", false]], "payoffs() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.payoffs", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.payoffs", false]], "payoffs() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.payoffs", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.payoffs", false]], "payoffs() (crdgame method)": [[116, "egttools.games.CRDGame.payoffs", false]], "payoffs() (crdgametu method)": [[117, "egttools.games.CRDGameTU.payoffs", false]], "payoffs() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.payoffs", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.payoffs", false]], "payoffs() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.payoffs", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.payoffs", false]], "payoffs() (normalformgame method)": [[124, "egttools.games.NormalFormGame.payoffs", false]], "payoffs() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.payoffs", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.payoffs", false]], "payoffs() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.payoffs", false]], "payoffs() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.payoffs", false]], "payoffs() (pgg method)": [[128, "egttools.games.PGG.payoffs", false], [159, "egttools.games.pgg.PGG.payoffs", false]], "pchanged() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.pchanged", false]], "permutations (class in egttools.analytical.sed_analytical)": [[13, "egttools.analytical.sed_analytical.permutations", false]], "perturb_state() (in module egttools.plotting.helpers)": [[221, "egttools.plotting.helpers.perturb_state", false]], "perturb_state() (in module egttools.plotting.simplex2d)": [[246, "egttools.plotting.simplex2d.perturb_state", false]], "perturb_state_discrete() (in module egttools.plotting.helpers)": [[222, "egttools.plotting.helpers.perturb_state_discrete", false]], "perturb_state_discrete() (in module egttools.plotting.simplex2d)": [[247, "egttools.plotting.simplex2d.perturb_state_discrete", false]], "pgg (class in egttools.games)": [[128, "egttools.games.PGG", false]], "pgg (class in egttools.games.pgg)": [[159, "egttools.games.pgg.PGG", false]], "pggoneshotstrategy (class in egttools.behaviors.pgg_behaviors)": [[97, "egttools.behaviors.pgg_behaviors.PGGOneShotStrategy", false]], "pggoneshotstrategy (class in egttools.games.pgg)": [[160, "egttools.games.pgg.PGGOneShotStrategy", false]], "pick() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.pick", false]], "pickable() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.pickable", false]], "play() (abstractgame method)": [[112, "egttools.games.AbstractGame.play", false], [130, "egttools.games.abstract_games.AbstractGame.play", false], [138, "egttools.games.informal_risk.AbstractGame.play", false], [252, "egttools.plotting.simplified.AbstractGame.play", false], [278, "egttools.utils.AbstractGame.play", false]], "play() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.play", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.play", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.play", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.play", false], [158, "egttools.games.pgg.AbstractNPlayerGame.play", false]], "play() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.play", false]], "play() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.play", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.play", false]], "play() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.play", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.play", false]], "play() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.play", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.play", false]], "play() (crdgame method)": [[116, "egttools.games.CRDGame.play", false]], "play() (crdgametu method)": [[117, "egttools.games.CRDGameTU.play", false]], "play() (informalriskgame method)": [[120, "egttools.games.InformalRiskGame.play", false], [139, "egttools.games.informal_risk.InformalRiskGame.play", false]], "play() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.play", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.play", false]], "play() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.play", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.play", false]], "play() (normalformgame method)": [[124, "egttools.games.NormalFormGame.play", false]], "play() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.play", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.play", false]], "play() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.play", false]], "play() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.play", false]], "play() (pgg method)": [[128, "egttools.games.PGG.play", false], [159, "egttools.games.pgg.PGG.play", false]], "player_factory() (in module egttools.behaviors.pgg_behaviors)": [[98, "egttools.behaviors.pgg_behaviors.player_factory", false]], "plot_gradient() (in module egttools.plotting)": [[232, "egttools.plotting.plot_gradient", false]], "plot_gradient() (in module egttools.plotting.indicators)": [[230, "egttools.plotting.indicators.plot_gradient", false]], "plot_gradients() (in module egttools.plotting)": [[233, "egttools.plotting.plot_gradients", false]], "plot_gradients() (in module egttools.plotting.indicators)": [[231, "egttools.plotting.indicators.plot_gradients", false]], "plot_pairwise_comparison_rule_dynamics_in_simplex() (in module egttools.plotting)": [[234, "egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex", false]], "plot_pairwise_comparison_rule_dynamics_in_simplex() (in module egttools.plotting.simplified)": [[265, "egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex", false]], "plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots() (in module egttools.plotting)": [[235, "egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots", false]], "plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots() (in module egttools.plotting.simplified)": [[266, "egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots", false]], "plot_replicator_dynamics_in_simplex() (in module egttools.plotting)": [[236, "egttools.plotting.plot_replicator_dynamics_in_simplex", false]], "plot_replicator_dynamics_in_simplex() (in module egttools.plotting.simplified)": [[267, "egttools.plotting.simplified.plot_replicator_dynamics_in_simplex", false]], "pop_size (pairwisecomparisonnumerical property)": [[175, "egttools.numerical.PairwiseComparisonNumerical.pop_size", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.pop_size", false]], "population_size() (network method)": [[194, "egttools.numerical.structure.Network.population_size", false], [200, "egttools.numerical.structure.factories.Network.population_size", false]], "population_size() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.population_size", false], [201, "egttools.numerical.structure.factories.NetworkGroup.population_size", false]], "population_size() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.population_size", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.population_size", false]], "population_size() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.population_size", false], [203, "egttools.numerical.structure.factories.NetworkSync.population_size", false]], "population_size() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.population_size", false], [179, "egttools.numerical.numerical_.PairwiseComparison.population_size", false], [256, "egttools.plotting.simplified.PairwiseComparison.population_size", false]], "population_strategies() (network method)": [[194, "egttools.numerical.structure.Network.population_strategies", false], [200, "egttools.numerical.structure.factories.Network.population_strategies", false]], "population_strategies() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.population_strategies", false], [201, "egttools.numerical.structure.factories.NetworkGroup.population_strategies", false]], "population_strategies() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.population_strategies", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.population_strategies", false]], "population_strategies() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.population_strategies", false], [203, "egttools.numerical.structure.factories.NetworkSync.population_strategies", false]], "power() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.power", false]], "power() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.power", false], [285, "egttools.utils.csr_matrix.power", false]], "power() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.power", false]], "pre_calculate_edge_fitnesses() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.pre_calculate_edge_fitnesses", false], [179, "egttools.numerical.numerical_.PairwiseComparison.pre_calculate_edge_fitnesses", false], [256, "egttools.plotting.simplified.PairwiseComparison.pre_calculate_edge_fitnesses", false]], "prob_increase_decrease() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.prob_increase_decrease", false], [7, "egttools.analytical.sed_analytical.StochDynamics.prob_increase_decrease", false], [19, "egttools.analytical.utils.StochDynamics.prob_increase_decrease", false]], "prob_increase_decrease_with_mutation() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.prob_increase_decrease_with_mutation", false], [7, "egttools.analytical.sed_analytical.StochDynamics.prob_increase_decrease_with_mutation", false], [19, "egttools.analytical.utils.StochDynamics.prob_increase_decrease_with_mutation", false]], "properties() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.properties", false]], "proposes_commitment() (abstractcprstrategy method)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.proposes_commitment", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.proposes_commitment", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.proposes_commitment", false]], "proposes_commitment() (commitmentstrategy method)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.proposes_commitment", false]], "proposes_commitment() (fairextraction method)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.proposes_commitment", false]], "proposes_commitment() (fakestrategy method)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.proposes_commitment", false]], "proposes_commitment() (fixedextraction method)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.proposes_commitment", false]], "proposes_commitment() (freestrategy method)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.proposes_commitment", false]], "proposes_commitment() (highextraction method)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.proposes_commitment", false]], "proposes_commitment() (nashextraction method)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.proposes_commitment", false]], "prune() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.prune", false]], "prune() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.prune", false], [285, "egttools.utils.csr_matrix.prune", false]], "rad2deg() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.rad2deg", false]], "rad2deg() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.rad2deg", false], [285, "egttools.utils.csr_matrix.rad2deg", false]], "radius (circle property)": [[238, "egttools.plotting.simplex2d.Circle.radius", false]], "raise_if_exceeds() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.raise_if_exceeds", false]], "random (class in egttools.behaviors.normalform.twoactions)": [[82, "egttools.behaviors.NormalForm.TwoActions.Random", false]], "real (csc_matrix property)": [[284, "egttools.utils.csc_matrix.real", false]], "real (csr_matrix property)": [[10, "egttools.analytical.sed_analytical.csr_matrix.real", false], [285, "egttools.utils.csr_matrix.real", false]], "real (lil_matrix property)": [[12, "egttools.analytical.sed_analytical.lil_matrix.real", false]], "refiner (simplex2d attribute)": [[209, "egttools.plotting.Simplex2D.refiner", false], [239, "egttools.plotting.simplex2d.Simplex2D.refiner", false], [257, "egttools.plotting.simplified.Simplex2D.refiner", false]], "remove() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.remove", false]], "remove_callback() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.remove_callback", false]], "remove_edge() (graph method)": [[279, "egttools.utils.Graph.remove_edge", false]], "remove_edges_from() (graph method)": [[279, "egttools.utils.Graph.remove_edges_from", false]], "remove_node() (graph method)": [[279, "egttools.utils.Graph.remove_node", false]], "remove_nodes_from() (graph method)": [[279, "egttools.utils.Graph.remove_nodes_from", false]], "replicator_equation() (in module egttools.analytical)": [[4, "egttools.analytical.replicator_equation", false]], "replicator_equation() (in module egttools.analytical.sed_analytical)": [[14, "egttools.analytical.sed_analytical.replicator_equation", false]], "replicator_equation() (in module egttools.analytical.utils)": [[29, "egttools.analytical.utils.replicator_equation", false]], "replicator_equation() (in module egttools.numerical.numerical_)": [[186, "egttools.numerical.numerical_.replicator_equation", false]], "replicator_equation() (in module egttools.plotting.simplified)": [[268, "egttools.plotting.simplified.replicator_equation", false]], "replicator_equation_n_player() (in module egttools.analytical)": [[5, "egttools.analytical.replicator_equation_n_player", false]], "replicator_equation_n_player() (in module egttools.analytical.sed_analytical)": [[15, "egttools.analytical.sed_analytical.replicator_equation_n_player", false]], "replicator_equation_n_player() (in module egttools.analytical.utils)": [[30, "egttools.analytical.utils.replicator_equation_n_player", false]], "replicator_equation_n_player() (in module egttools.helpers.vectorized)": [[166, "egttools.helpers.vectorized.replicator_equation_n_player", false]], "replicator_equation_n_player() (in module egttools.numerical.numerical_)": [[187, "egttools.numerical.numerical_.replicator_equation_n_player", false]], "replicator_equation_n_player() (in module egttools.plotting.simplified)": [[269, "egttools.plotting.simplified.replicator_equation_n_player", false]], "reshape() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.reshape", false]], "reshape() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.reshape", false], [285, "egttools.utils.csr_matrix.reshape", false]], "reshape() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.reshape", false]], "resize() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.resize", false]], "resize() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.resize", false], [285, "egttools.utils.csr_matrix.resize", false]], "resize() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.resize", false]], "rint() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.rint", false]], "rint() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.rint", false], [285, "egttools.utils.csr_matrix.rint", false]], "risk (crdgame property)": [[116, "egttools.games.CRDGame.risk", false]], "risk (crdgametu property)": [[117, "egttools.games.CRDGameTU.risk", false]], "risk (oneshotcrd property)": [[126, "egttools.games.OneShotCRD.risk", false]], "risk() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.risk", false]], "root() (in module egttools.analytical.utils)": [[31, "egttools.analytical.utils.root", false]], "root() (in module egttools.plotting.helpers)": [[223, "egttools.plotting.helpers.root", false]], "rows (datatable property)": [[103, "egttools.datastructures.DataTable.rows", false]], "rows (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.rows", false]], "run() (generalpopulationevolver method)": [[173, "egttools.numerical.GeneralPopulationEvolver.run", false], [177, "egttools.numerical.numerical_.GeneralPopulationEvolver.run", false]], "run() (networkevolver static method)": [[174, "egttools.numerical.NetworkEvolver.run", false], [178, "egttools.numerical.numerical_.NetworkEvolver.run", false]], "run() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.run", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.run", false]], "run_with_mutation() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.run_with_mutation", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.run_with_mutation", false]], "run_without_mutation() (pairwisecomparisonnumerical method)": [[175, "egttools.numerical.PairwiseComparisonNumerical.run_without_mutation", false], [180, "egttools.numerical.numerical_.PairwiseComparisonNumerical.run_without_mutation", false]], "sample_simplex() (in module egttools)": [[274, "egttools.sample_simplex", false]], "sample_simplex() (in module egttools.analytical.sed_analytical)": [[16, "egttools.analytical.sed_analytical.sample_simplex", false]], "sample_simplex() (in module egttools.games.abstract_games)": [[136, "egttools.games.abstract_games.sample_simplex", false]], "sample_simplex() (in module egttools.games.informal_risk)": [[142, "egttools.games.informal_risk.sample_simplex", false]], "sample_simplex() (in module egttools.games.nonlinear_games)": [[150, "egttools.games.nonlinear_games.sample_simplex", false]], "sample_simplex() (in module egttools.games.opinion_game)": [[155, "egttools.games.opinion_game.sample_simplex", false]], "sample_simplex() (in module egttools.games.pgg)": [[161, "egttools.games.pgg.sample_simplex", false]], "sample_simplex() (in module egttools.numerical.numerical_)": [[188, "egttools.numerical.numerical_.sample_simplex", false]], "sample_simplex() (in module egttools.plotting.helpers)": [[224, "egttools.plotting.helpers.sample_simplex", false]], "sample_simplex() (in module egttools.plotting.simplex2d)": [[248, "egttools.plotting.simplex2d.sample_simplex", false]], "sample_simplex_directly() (in module egttools.numerical.numerical_)": [[189, "egttools.numerical.numerical_.sample_simplex_directly", false]], "sample_unit_simplex() (in module egttools)": [[275, "egttools.sample_unit_simplex", false]], "sample_unit_simplex() (in module egttools.analytical.utils)": [[32, "egttools.analytical.utils.sample_unit_simplex", false]], "sample_unit_simplex() (in module egttools.numerical.numerical_)": [[190, "egttools.numerical.numerical_.sample_unit_simplex", false]], "sample_unit_simplex() (in module egttools.plotting.simplex2d)": [[249, "egttools.plotting.simplex2d.sample_unit_simplex", false]], "save_payoffs() (abstractgame method)": [[112, "egttools.games.AbstractGame.save_payoffs", false], [130, "egttools.games.abstract_games.AbstractGame.save_payoffs", false], [138, "egttools.games.informal_risk.AbstractGame.save_payoffs", false], [252, "egttools.plotting.simplified.AbstractGame.save_payoffs", false], [278, "egttools.utils.AbstractGame.save_payoffs", false]], "save_payoffs() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.save_payoffs", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.save_payoffs", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.save_payoffs", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.save_payoffs", false], [158, "egttools.games.pgg.AbstractNPlayerGame.save_payoffs", false]], "save_payoffs() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.save_payoffs", false]], "save_payoffs() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.save_payoffs", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.save_payoffs", false]], "save_payoffs() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.save_payoffs", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.save_payoffs", false]], "save_payoffs() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.save_payoffs", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.save_payoffs", false]], "save_payoffs() (crdgame method)": [[116, "egttools.games.CRDGame.save_payoffs", false]], "save_payoffs() (crdgametu method)": [[117, "egttools.games.CRDGameTU.save_payoffs", false]], "save_payoffs() (informalriskgame method)": [[120, "egttools.games.InformalRiskGame.save_payoffs", false], [139, "egttools.games.informal_risk.InformalRiskGame.save_payoffs", false]], "save_payoffs() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.save_payoffs", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.save_payoffs", false]], "save_payoffs() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.save_payoffs", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.save_payoffs", false]], "save_payoffs() (normalformgame method)": [[124, "egttools.games.NormalFormGame.save_payoffs", false]], "save_payoffs() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.save_payoffs", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.save_payoffs", false]], "save_payoffs() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.save_payoffs", false]], "save_payoffs() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.save_payoffs", false]], "save_payoffs() (pgg method)": [[128, "egttools.games.PGG.save_payoffs", false], [159, "egttools.games.pgg.PGG.save_payoffs", false]], "schur() (in module egttools.utils)": [[289, "egttools.utils.schur", false]], "set() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set", false]], "set_aa() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_aa", false]], "set_agg_filter() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_agg_filter", false]], "set_alpha() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_alpha", false]], "set_angle() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_angle", false]], "set_animated() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_animated", false]], "set_antialiased() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_antialiased", false]], "set_axis() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.set_axis", false]], "set_capstyle() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_capstyle", false]], "set_center() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_center", false]], "set_clip_box() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_clip_box", false]], "set_clip_on() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_clip_on", false]], "set_clip_path() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_clip_path", false]], "set_color() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_color", false]], "set_ec() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_ec", false]], "set_edgecolor() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_edgecolor", false]], "set_facecolor() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_facecolor", false]], "set_fc() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_fc", false]], "set_figure() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_figure", false]], "set_fill() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_fill", false]], "set_gid() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_gid", false]], "set_hatch() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_hatch", false]], "set_hatch_linewidth() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_hatch_linewidth", false]], "set_height() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_height", false]], "set_in_layout() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_in_layout", false]], "set_joinstyle() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_joinstyle", false]], "set_label() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_label", false]], "set_linestyle() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_linestyle", false]], "set_linewidth() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_linewidth", false]], "set_ls() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_ls", false]], "set_lw() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_lw", false]], "set_mouseover() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_mouseover", false]], "set_params() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.set_params", false]], "set_path_effects() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_path_effects", false]], "set_picker() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_picker", false]], "set_radius() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_radius", false]], "set_rasterized() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_rasterized", false]], "set_shape() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.set_shape", false]], "set_shape() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.set_shape", false], [285, "egttools.utils.csr_matrix.set_shape", false]], "set_shape() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.set_shape", false]], "set_sketch_params() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_sketch_params", false]], "set_snap() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_snap", false]], "set_transform() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_transform", false]], "set_url() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_url", false]], "set_visible() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_visible", false]], "set_width() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_width", false]], "set_zorder() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.set_zorder", false]], "setdiag() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.setdiag", false]], "setdiag() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.setdiag", false], [285, "egttools.utils.csr_matrix.setdiag", false]], "setdiag() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.setdiag", false]], "shape (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.shape", false]], "shape (csc_matrix property)": [[284, "id6", false]], "shape (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.shape", false], [285, "egttools.utils.csr_matrix.shape", false]], "shape (csr_matrix property)": [[10, "id6", false], [285, "id6", false]], "shape (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.shape", false]], "shape (lil_matrix property)": [[12, "id3", false]], "show_build_info() (in module egttools)": [[276, "egttools.show_build_info", false]], "side_slope (simplex2d attribute)": [[209, "egttools.plotting.Simplex2D.side_slope", false], [239, "egttools.plotting.simplex2d.Simplex2D.side_slope", false], [257, "egttools.plotting.simplified.Simplex2D.side_slope", false]], "sigmoid() (in module egttools.games.opinion_game)": [[156, "egttools.games.opinion_game.sigmoid", false]], "sign() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.sign", false]], "sign() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.sign", false], [285, "egttools.utils.csr_matrix.sign", false]], "simplex2d (class in egttools.plotting)": [[209, "egttools.plotting.Simplex2D", false]], "simplex2d (class in egttools.plotting.simplex2d)": [[239, "egttools.plotting.simplex2d.Simplex2D", false]], "simplex2d (class in egttools.plotting.simplified)": [[257, "egttools.plotting.simplified.Simplex2D", false]], "simplex_iterator() (in module egttools.plotting.helpers)": [[225, "egttools.plotting.helpers.simplex_iterator", false]], "sin() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.sin", false]], "sin() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.sin", false], [285, "egttools.utils.csr_matrix.sin", false]], "sinh() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.sinh", false]], "sinh() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.sinh", false], [285, "egttools.utils.csr_matrix.sinh", false]], "size (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.size", false]], "size (csc_matrix property)": [[284, "id7", false]], "size (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.size", false], [285, "egttools.utils.csr_matrix.size", false]], "size (csr_matrix property)": [[10, "id7", false], [285, "id7", false]], "size (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.size", false]], "size (lil_matrix property)": [[12, "id4", false]], "size() (graph method)": [[279, "egttools.utils.Graph.size", false]], "sort_indices() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.sort_indices", false]], "sort_indices() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.sort_indices", false], [285, "egttools.utils.csr_matrix.sort_indices", false]], "sorted_indices() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.sorted_indices", false]], "sorted_indices() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.sorted_indices", false], [285, "egttools.utils.csr_matrix.sorted_indices", false]], "sqrt() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.sqrt", false]], "sqrt() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.sqrt", false], [285, "egttools.utils.csr_matrix.sqrt", false]], "stale (circle property)": [[238, "egttools.plotting.simplex2d.Circle.stale", false]], "sticky_edges (circle property)": [[238, "egttools.plotting.simplex2d.Circle.sticky_edges", false]], "stochdynamics (class in egttools.analytical)": [[3, "egttools.analytical.StochDynamics", false]], "stochdynamics (class in egttools.analytical.sed_analytical)": [[7, "egttools.analytical.sed_analytical.StochDynamics", false]], "stochdynamics (class in egttools.analytical.utils)": [[19, "egttools.analytical.utils.StochDynamics", false]], "strategies (crdgame property)": [[116, "egttools.games.CRDGame.strategies", false]], "strategies (crdgametu property)": [[117, "egttools.games.CRDGameTU.strategies", false]], "strategies (normalformgame property)": [[124, "egttools.games.NormalFormGame.strategies", false]], "strategies() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.strategies", false]], "structure() (generalpopulationevolver method)": [[173, "egttools.numerical.GeneralPopulationEvolver.structure", false], [177, "egttools.numerical.numerical_.GeneralPopulationEvolver.structure", false]], "subgraph() (graph method)": [[279, "egttools.utils.Graph.subgraph", false]], "sum() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.sum", false]], "sum() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.sum", false], [285, "egttools.utils.csr_matrix.sum", false]], "sum() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.sum", false]], "sum_duplicates() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.sum_duplicates", false]], "sum_duplicates() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.sum_duplicates", false], [285, "egttools.utils.csr_matrix.sum_duplicates", false]], "suspicioustft (class in egttools.behaviors.normalform.twoactions)": [[83, "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT", false]], "t (csc_matrix attribute)": [[284, "egttools.utils.csc_matrix.T", false]], "t (csc_matrix property)": [[284, "id0", false]], "t (csr_matrix attribute)": [[10, "egttools.analytical.sed_analytical.csr_matrix.T", false], [285, "egttools.utils.csr_matrix.T", false]], "t (csr_matrix property)": [[10, "id0", false], [285, "id0", false]], "t (lil_matrix attribute)": [[12, "egttools.analytical.sed_analytical.lil_matrix.T", false]], "t (lil_matrix property)": [[12, "id0", false]], "tan() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.tan", false]], "tan() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.tan", false], [285, "egttools.utils.csr_matrix.tan", false]], "tanh() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.tanh", false]], "tanh() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.tanh", false], [285, "egttools.utils.csr_matrix.tanh", false]], "target (crdgame property)": [[116, "egttools.games.CRDGame.target", false]], "target (crdgametu property)": [[117, "egttools.games.CRDGameTU.target", false]], "tft (class in egttools.behaviors.normalform.twoactions)": [[84, "egttools.behaviors.NormalForm.TwoActions.TFT", false]], "tftt (class in egttools.behaviors.normalform.twoactions)": [[85, "egttools.behaviors.NormalForm.TwoActions.TFTT", false]], "tick_values() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.tick_values", false]], "timebasedcrdstrategy (class in egttools.behaviors.crd)": [[57, "egttools.behaviors.CRD.TimeBasedCRDStrategy", false]], "timebasedcrdstrategy (class in egttools.behaviors.crd.time_based)": [[66, "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy", false]], "timinguncertainty (class in egttools.distributions)": [[105, "egttools.distributions.TimingUncertainty", false]], "to_directed() (graph method)": [[279, "egttools.utils.Graph.to_directed", false]], "to_directed_class() (graph method)": [[279, "egttools.utils.Graph.to_directed_class", false]], "to_undirected() (graph method)": [[279, "egttools.utils.Graph.to_undirected", false]], "to_undirected_class() (graph method)": [[279, "egttools.utils.Graph.to_undirected_class", false]], "toarray() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.toarray", false]], "toarray() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.toarray", false], [285, "egttools.utils.csr_matrix.toarray", false]], "toarray() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.toarray", false]], "tobsr() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.tobsr", false]], "tobsr() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.tobsr", false], [285, "egttools.utils.csr_matrix.tobsr", false]], "tobsr() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.tobsr", false]], "tocoo() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.tocoo", false]], "tocoo() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.tocoo", false], [285, "egttools.utils.csr_matrix.tocoo", false]], "tocoo() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.tocoo", false]], "tocsc() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.tocsc", false]], "tocsc() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.tocsc", false], [285, "egttools.utils.csr_matrix.tocsc", false]], "tocsc() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.tocsc", false]], "tocsr() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.tocsr", false]], "tocsr() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.tocsr", false], [285, "egttools.utils.csr_matrix.tocsr", false]], "tocsr() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.tocsr", false]], "todense() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.todense", false]], "todense() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.todense", false], [285, "egttools.utils.csr_matrix.todense", false]], "todense() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.todense", false]], "todia() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.todia", false]], "todia() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.todia", false], [285, "egttools.utils.csr_matrix.todia", false]], "todia() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.todia", false]], "todok() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.todok", false]], "todok() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.todok", false], [285, "egttools.utils.csr_matrix.todok", false]], "todok() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.todok", false]], "tolil() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.tolil", false]], "tolil() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.tolil", false], [285, "egttools.utils.csr_matrix.tolil", false]], "tolil() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.tolil", false]], "top_corner (simplex2d attribute)": [[209, "egttools.plotting.Simplex2D.top_corner", false], [239, "egttools.plotting.simplex2d.Simplex2D.top_corner", false], [257, "egttools.plotting.simplified.Simplex2D.top_corner", false]], "trace() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.trace", false]], "trace() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.trace", false], [285, "egttools.utils.csr_matrix.trace", false]], "trace() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.trace", false]], "transform_graph_to_dict_of_lists() (in module egttools.utils)": [[290, "egttools.utils.transform_graph_to_dict_of_lists", false]], "transform_payoffs_to_pairwise() (in module egttools.utils)": [[291, "egttools.utils.transform_payoffs_to_pairwise", false]], "transition_and_fixation_matrix() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.transition_and_fixation_matrix", false], [7, "egttools.analytical.sed_analytical.StochDynamics.transition_and_fixation_matrix", false], [19, "egttools.analytical.utils.StochDynamics.transition_and_fixation_matrix", false]], "transpose() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.transpose", false]], "transpose() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.transpose", false], [285, "egttools.utils.csr_matrix.transpose", false]], "transpose() (lil_matrix method)": [[12, "egttools.analytical.sed_analytical.lil_matrix.transpose", false]], "triangle (simplex2d attribute)": [[209, "egttools.plotting.Simplex2D.triangle", false], [239, "egttools.plotting.simplex2d.Simplex2D.triangle", false], [257, "egttools.plotting.simplified.Simplex2D.triangle", false]], "trimesh (simplex2d attribute)": [[209, "egttools.plotting.Simplex2D.trimesh", false], [239, "egttools.plotting.simplex2d.Simplex2D.trimesh", false], [257, "egttools.plotting.simplified.Simplex2D.trimesh", false]], "trunc() (csc_matrix method)": [[284, "egttools.utils.csc_matrix.trunc", false]], "trunc() (csr_matrix method)": [[10, "egttools.analytical.sed_analytical.csr_matrix.trunc", false], [285, "egttools.utils.csr_matrix.trunc", false]], "ttft (class in egttools.behaviors.normalform.twoactions)": [[86, "egttools.behaviors.NormalForm.TwoActions.TTFT", false]], "type (informalriskgame property)": [[120, "egttools.games.InformalRiskGame.type", false], [139, "egttools.games.informal_risk.InformalRiskGame.type", false]], "type (opinion property)": [[94, "egttools.behaviors.opinion_behaviors.Opinion.type", false]], "type (pggoneshotstrategy property)": [[97, "egttools.behaviors.pgg_behaviors.PGGOneShotStrategy.type", false], [160, "egttools.games.pgg.PGGOneShotStrategy.type", false]], "type() (abstractcprstrategy method)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.type", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.type", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.type", false]], "type() (abstractcrdstrategy method)": [[53, "egttools.behaviors.CRD.AbstractCRDStrategy.type", false], [59, "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy.type", false], [62, "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy.type", false], [65, "egttools.behaviors.CRD.time_based.AbstractCRDStrategy.type", false]], "type() (abstractgame method)": [[112, "egttools.games.AbstractGame.type", false], [130, "egttools.games.abstract_games.AbstractGame.type", false], [138, "egttools.games.informal_risk.AbstractGame.type", false], [252, "egttools.plotting.simplified.AbstractGame.type", false], [278, "egttools.utils.AbstractGame.type", false]], "type() (abstractnfgstrategy method)": [[68, "egttools.behaviors.NormalForm.AbstractNFGStrategy.type", false], [88, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy.type", false]], "type() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.type", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.type", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.type", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.type", false], [158, "egttools.games.pgg.AbstractNPlayerGame.type", false]], "type() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.type", false]], "type() (abstractspatialgame method)": [[114, "egttools.games.AbstractSpatialGame.type", false], [199, "egttools.numerical.structure.factories.AbstractSpatialGame.type", false]], "type() (abstracttwoplayergame method)": [[115, "egttools.games.AbstractTwoPLayerGame.type", false], [133, "egttools.games.abstract_games.AbstractTwoPLayerGame.type", false]], "type() (actioninertia method)": [[70, "egttools.behaviors.NormalForm.TwoActions.ActionInertia.type", false]], "type() (commitmentstrategy method)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.type", false]], "type() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.type", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.type", false]], "type() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.type", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.type", false]], "type() (cooperator method)": [[71, "egttools.behaviors.NormalForm.TwoActions.Cooperator.type", false]], "type() (crdgame method)": [[116, "egttools.games.CRDGame.type", false]], "type() (crdgametu method)": [[117, "egttools.games.CRDGameTU.type", false]], "type() (crdmemoryoneplayer method)": [[54, "egttools.behaviors.CRD.CRDMemoryOnePlayer.type", false]], "type() (defector method)": [[72, "egttools.behaviors.NormalForm.TwoActions.Defector.type", false]], "type() (detective method)": [[73, "egttools.behaviors.NormalForm.TwoActions.Detective.type", false], [89, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective.type", false]], "type() (epsilongrim method)": [[74, "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM.type", false], [90, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM.type", false]], "type() (epsilontft method)": [[75, "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT.type", false], [91, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT.type", false]], "type() (fairextraction method)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.type", false]], "type() (fakestrategy method)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.type", false]], "type() (fixedextraction method)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.type", false]], "type() (freestrategy method)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.type", false]], "type() (generoustft method)": [[77, "egttools.behaviors.NormalForm.TwoActions.GenerousTFT.type", false]], "type() (goalbasedcrdstrategy method)": [[55, "egttools.behaviors.CRD.GoalBasedCRDStrategy.type", false], [60, "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy.type", false]], "type() (gradualtft method)": [[78, "egttools.behaviors.NormalForm.TwoActions.GradualTFT.type", false]], "type() (grim method)": [[76, "egttools.behaviors.NormalForm.TwoActions.GRIM.type", false]], "type() (highextraction method)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.type", false]], "type() (imperfecttft method)": [[79, "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT.type", false]], "type() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.type", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.type", false]], "type() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.type", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.type", false]], "type() (memoryonestrategy static method)": [[80, "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy.type", false], [92, "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy.type", false]], "type() (movingaveragecrdstrategy method)": [[56, "egttools.behaviors.CRD.MovingAverageCRDStrategy.type", false], [63, "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy.type", false]], "type() (nashextraction method)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.type", false]], "type() (normalformgame method)": [[124, "egttools.games.NormalFormGame.type", false]], "type() (normalformnetworkgame method)": [[125, "egttools.games.NormalFormNetworkGame.type", false]], "type() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.type", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.type", false]], "type() (oneshotcrd method)": [[126, "egttools.games.OneShotCRD.type", false]], "type() (oneshotcrdnetworkgame method)": [[127, "egttools.games.OneShotCRDNetworkGame.type", false]], "type() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.type", false]], "type() (pavlov method)": [[81, "egttools.behaviors.NormalForm.TwoActions.Pavlov.type", false]], "type() (pgg method)": [[128, "egttools.games.PGG.type", false], [159, "egttools.games.pgg.PGG.type", false]], "type() (random method)": [[82, "egttools.behaviors.NormalForm.TwoActions.Random.type", false]], "type() (suspicioustft method)": [[83, "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT.type", false]], "type() (tft method)": [[84, "egttools.behaviors.NormalForm.TwoActions.TFT.type", false]], "type() (tftt method)": [[85, "egttools.behaviors.NormalForm.TwoActions.TFTT.type", false]], "type() (timebasedcrdstrategy method)": [[57, "egttools.behaviors.CRD.TimeBasedCRDStrategy.type", false], [66, "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy.type", false]], "type() (ttft method)": [[86, "egttools.behaviors.NormalForm.TwoActions.TTFT.type", false]], "typevar (class in egttools.plotting.simplex2d)": [[240, "egttools.plotting.simplex2d.TypeVar", false]], "update() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.update", false]], "update() (graph method)": [[279, "egttools.utils.Graph.update", false]], "update_from() (circle method)": [[238, "egttools.plotting.simplex2d.Circle.update_from", false]], "update_group_size() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.update_group_size", false], [7, "egttools.analytical.sed_analytical.StochDynamics.update_group_size", false], [19, "egttools.analytical.utils.StochDynamics.update_group_size", false]], "update_node() (network method)": [[194, "egttools.numerical.structure.Network.update_node", false], [200, "egttools.numerical.structure.factories.Network.update_node", false]], "update_node() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.update_node", false], [201, "egttools.numerical.structure.factories.NetworkGroup.update_node", false]], "update_node() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.update_node", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.update_node", false]], "update_node() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.update_node", false], [203, "egttools.numerical.structure.factories.NetworkSync.update_node", false]], "update_payoff() (abstractnplayergame method)": [[113, "egttools.games.AbstractNPlayerGame.update_payoff", false], [131, "egttools.games.abstract_games.AbstractNPlayerGame.update_payoff", false], [145, "egttools.games.nonlinear_games.AbstractNPlayerGame.update_payoff", false], [152, "egttools.games.opinion_game.AbstractNPlayerGame.update_payoff", false], [158, "egttools.games.pgg.AbstractNPlayerGame.update_payoff", false]], "update_payoff() (abstractnplayergameexpectedpayoff method)": [[132, "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff.update_payoff", false]], "update_payoff() (commonpoolresourcedilemma method)": [[118, "egttools.games.CommonPoolResourceDilemma.update_payoff", false], [146, "egttools.games.nonlinear_games.CommonPoolResourceDilemma.update_payoff", false]], "update_payoff() (commonpoolresourcedilemmacommitment method)": [[119, "egttools.games.CommonPoolResourceDilemmaCommitment.update_payoff", false], [147, "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment.update_payoff", false]], "update_payoff() (nplayerstaghunt method)": [[123, "egttools.games.NPlayerStagHunt.update_payoff", false], [148, "egttools.games.nonlinear_games.NPlayerStagHunt.update_payoff", false]], "update_payoff() (opiniongame method)": [[153, "egttools.games.opinion_game.OpinionGame.update_payoff", false]], "update_payoff() (pgg method)": [[128, "egttools.games.PGG.update_payoff", false], [159, "egttools.games.pgg.PGG.update_payoff", false]], "update_payoff_matrix() (matrix2playergameholder method)": [[121, "egttools.games.Matrix2PlayerGameHolder.update_payoff_matrix", false], [253, "egttools.plotting.simplified.Matrix2PlayerGameHolder.update_payoff_matrix", false]], "update_payoff_matrix() (matrixnplayergameholder method)": [[122, "egttools.games.MatrixNPlayerGameHolder.update_payoff_matrix", false], [254, "egttools.plotting.simplified.MatrixNPlayerGameHolder.update_payoff_matrix", false]], "update_payoffs() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.update_payoffs", false], [7, "egttools.analytical.sed_analytical.StochDynamics.update_payoffs", false], [19, "egttools.analytical.utils.StochDynamics.update_payoffs", false]], "update_population() (abstractstructure method)": [[193, "egttools.numerical.structure.AbstractStructure.update_population", false]], "update_population() (network method)": [[194, "egttools.numerical.structure.Network.update_population", false], [200, "egttools.numerical.structure.factories.Network.update_population", false]], "update_population() (networkgroup method)": [[195, "egttools.numerical.structure.NetworkGroup.update_population", false], [201, "egttools.numerical.structure.factories.NetworkGroup.update_population", false]], "update_population() (networkgroupsync method)": [[196, "egttools.numerical.structure.NetworkGroupSync.update_population", false], [202, "egttools.numerical.structure.factories.NetworkGroupSync.update_population", false]], "update_population() (networksync method)": [[197, "egttools.numerical.structure.NetworkSync.update_population", false], [203, "egttools.numerical.structure.factories.NetworkSync.update_population", false]], "update_population_size() (pairwisecomparison method)": [[2, "egttools.analytical.PairwiseComparison.update_population_size", false], [179, "egttools.numerical.numerical_.PairwiseComparison.update_population_size", false], [256, "egttools.plotting.simplified.PairwiseComparison.update_population_size", false]], "update_population_size() (stochdynamics method)": [[3, "egttools.analytical.StochDynamics.update_population_size", false], [7, "egttools.analytical.sed_analytical.StochDynamics.update_population_size", false], [19, "egttools.analytical.utils.StochDynamics.update_population_size", false]], "vectorized_barycentric_to_xy_coordinates() (in module egttools.helpers.vectorized)": [[167, "egttools.helpers.vectorized.vectorized_barycentric_to_xy_coordinates", false]], "vectorized_barycentric_to_xy_coordinates() (in module egttools.plotting.simplified)": [[270, "egttools.plotting.simplified.vectorized_barycentric_to_xy_coordinates", false]], "vectorized_replicator_equation() (in module egttools.helpers.vectorized)": [[168, "egttools.helpers.vectorized.vectorized_replicator_equation", false]], "vectorized_replicator_equation() (in module egttools.plotting.simplified)": [[271, "egttools.plotting.simplified.vectorized_replicator_equation", false]], "vectorized_replicator_equation_n_player() (in module egttools.helpers.vectorized)": [[169, "egttools.helpers.vectorized.vectorized_replicator_equation_n_player", false]], "vectorized_replicator_equation_n_player() (in module egttools.numerical.numerical_)": [[191, "egttools.numerical.numerical_.vectorized_replicator_equation_n_player", false]], "vectorized_replicator_equation_n_player() (in module egttools.plotting.simplified)": [[272, "egttools.plotting.simplified.vectorized_replicator_equation_n_player", false]], "view_limits() (autominorlocator method)": [[228, "egttools.plotting.indicators.AutoMinorLocator.view_limits", false]], "warn() (in module egttools.analytical.sed_analytical)": [[17, "egttools.analytical.sed_analytical.warn", false]], "warn() (in module egttools.utils)": [[292, "egttools.utils.warn", false]], "width (circle property)": [[238, "egttools.plotting.simplex2d.Circle.width", false]], "would_like_to_commit() (abstractcprstrategy method)": [[37, "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy.would_like_to_commit", false], [40, "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy.would_like_to_commit", false], [144, "egttools.games.nonlinear_games.AbstractCPRStrategy.would_like_to_commit", false]], "would_like_to_commit() (commitmentstrategy method)": [[41, "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy.would_like_to_commit", false]], "would_like_to_commit() (fairextraction method)": [[42, "egttools.behaviors.CPR.cpr_strategies.FairExtraction.would_like_to_commit", false]], "would_like_to_commit() (fakestrategy method)": [[43, "egttools.behaviors.CPR.cpr_strategies.FakeStrategy.would_like_to_commit", false]], "would_like_to_commit() (fixedextraction method)": [[44, "egttools.behaviors.CPR.cpr_strategies.FixedExtraction.would_like_to_commit", false]], "would_like_to_commit() (freestrategy method)": [[45, "egttools.behaviors.CPR.cpr_strategies.FreeStrategy.would_like_to_commit", false]], "would_like_to_commit() (highextraction method)": [[46, "egttools.behaviors.CPR.cpr_strategies.HighExtraction.would_like_to_commit", false]], "would_like_to_commit() (nashextraction method)": [[47, "egttools.behaviors.CPR.cpr_strategies.NashExtraction.would_like_to_commit", false]], "xy_to_barycentric_coordinates() (in module egttools.plotting.helpers)": [[226, "egttools.plotting.helpers.xy_to_barycentric_coordinates", false]], "xy_to_barycentric_coordinates() (in module egttools.plotting.simplex2d)": [[250, "egttools.plotting.simplex2d.xy_to_barycentric_coordinates", false]], "xy_to_barycentric_coordinates() (in module egttools.plotting.simplified)": [[273, "egttools.plotting.simplified.xy_to_barycentric_coordinates", false]], "zorder (circle attribute)": [[238, "egttools.plotting.simplex2d.Circle.zorder", false]]}, "objects": {"": [[0, 0, 0, "-", "egttools"]], "egttools": [[1, 0, 0, "-", "analytical"], [33, 0, 0, "-", "behaviors"], [99, 4, 1, "", "calculate_nb_states"], [100, 4, 1, "", "calculate_state"], [101, 4, 1, "", "calculate_strategies_distribution"], [102, 0, 0, "-", "datastructures"], [104, 0, 0, "-", "distributions"], [110, 4, 1, "", "files"], [111, 0, 0, "-", "games"], [162, 0, 0, "-", "helpers"], [170, 4, 1, "", "is_blas_lapack_enabled"], [171, 4, 1, "", "is_openmp_enabled"], [172, 0, 0, "-", "numerical"], [208, 0, 0, "-", "plotting"], [274, 4, 1, "", "sample_simplex"], [275, 4, 1, "", "sample_unit_simplex"], [276, 4, 1, "", "show_build_info"], [277, 0, 0, "-", "utils"]], "egttools.analytical": [[2, 1, 1, "", "PairwiseComparison"], [3, 1, 1, "", "StochDynamics"], [4, 4, 1, "", "replicator_equation"], [5, 4, 1, "", "replicator_equation_n_player"], [6, 0, 0, "-", "sed_analytical"], [18, 0, 0, "-", "utils"]], "egttools.analytical.PairwiseComparison": [[2, 2, 1, "", "__annotations__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "__new__"], [2, 3, 1, "", "calculate_fixation_probability"], [2, 3, 1, "", "calculate_gradient_of_selection"], [2, 3, 1, "", "calculate_transition_and_fixation_matrix_sml"], [2, 3, 1, "", "calculate_transition_matrix"], [2, 3, 1, "", "game"], [2, 3, 1, "", "nb_states"], [2, 3, 1, "", "nb_strategies"], [2, 3, 1, "", "population_size"], [2, 3, 1, "", "pre_calculate_edge_fitnesses"], [2, 3, 1, "", "update_population_size"]], "egttools.analytical.StochDynamics": [[3, 2, 1, "", "__annotations__"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "calculate_full_transition_matrix"], [3, 3, 1, "", "calculate_stationary_distribution"], [3, 3, 1, "", "fermi"], [3, 3, 1, "", "fitness_group"], [3, 3, 1, "", "fitness_pair"], [3, 3, 1, "", "fixation_probability"], [3, 3, 1, "", "full_fitness_difference_group"], [3, 3, 1, "", "full_fitness_difference_pairwise"], [3, 3, 1, "", "full_gradient_selection"], [3, 3, 1, "", "full_gradient_selection_without_mutation"], [3, 3, 1, "", "gradient_selection"], [3, 3, 1, "", "prob_increase_decrease"], [3, 3, 1, "", "prob_increase_decrease_with_mutation"], [3, 3, 1, "", "transition_and_fixation_matrix"], [3, 3, 1, "", "update_group_size"], [3, 3, 1, "", "update_payoffs"], [3, 3, 1, "", "update_population_size"]], "egttools.analytical.sed_analytical": [[7, 1, 1, "", "StochDynamics"], [8, 4, 1, "", "calculate_nb_states"], [9, 4, 1, "", "calculate_state"], [10, 1, 1, "", "csr_matrix"], [11, 4, 1, "", "eig"], [12, 1, 1, "", "lil_matrix"], [13, 1, 1, "", "permutations"], [14, 4, 1, "", "replicator_equation"], [15, 4, 1, "", "replicator_equation_n_player"], [16, 4, 1, "", "sample_simplex"], [17, 4, 1, "", "warn"]], "egttools.analytical.sed_analytical.StochDynamics": [[7, 2, 1, "", "__annotations__"], [7, 3, 1, "", "__init__"], [7, 3, 1, "", "calculate_full_transition_matrix"], [7, 3, 1, "", "calculate_stationary_distribution"], [7, 3, 1, "", "fermi"], [7, 3, 1, "", "fitness_group"], [7, 3, 1, "", "fitness_pair"], [7, 3, 1, "", "fixation_probability"], [7, 3, 1, "", "full_fitness_difference_group"], [7, 3, 1, "", "full_fitness_difference_pairwise"], [7, 3, 1, "", "full_gradient_selection"], [7, 3, 1, "", "full_gradient_selection_without_mutation"], [7, 3, 1, "", "gradient_selection"], [7, 3, 1, "", "prob_increase_decrease"], [7, 3, 1, "", "prob_increase_decrease_with_mutation"], [7, 3, 1, "", "transition_and_fixation_matrix"], [7, 3, 1, "", "update_group_size"], [7, 3, 1, "", "update_payoffs"], [7, 3, 1, "", "update_population_size"]], "egttools.analytical.sed_analytical.csr_matrix": [[10, 5, 1, "id0", "T"], [10, 3, 1, "", "__abs__"], [10, 3, 1, "", "__add__"], [10, 2, 1, "", "__annotations__"], [10, 2, 1, "", "__array_priority__"], [10, 3, 1, "", "__bool__"], [10, 3, 1, "", "__div__"], [10, 3, 1, "", "__eq__"], [10, 3, 1, "", "__ge__"], [10, 3, 1, "", "__getitem__"], [10, 3, 1, "", "__gt__"], [10, 2, 1, "", "__hash__"], [10, 3, 1, "", "__iadd__"], [10, 3, 1, "", "__idiv__"], [10, 3, 1, "", "__imul__"], [10, 3, 1, "", "__init__"], [10, 3, 1, "", "__isub__"], [10, 3, 1, "", "__iter__"], [10, 3, 1, "", "__itruediv__"], [10, 3, 1, "", "__le__"], [10, 3, 1, "", "__len__"], [10, 3, 1, "", "__lt__"], [10, 3, 1, "", "__matmul__"], [10, 3, 1, "", "__mul__"], [10, 3, 1, "", "__ne__"], [10, 3, 1, "", "__neg__"], [10, 3, 1, "", "__nonzero__"], [10, 3, 1, "", "__pow__"], [10, 3, 1, "", "__radd__"], [10, 3, 1, "", "__rdiv__"], [10, 3, 1, "", "__repr__"], [10, 3, 1, "", "__rmatmul__"], [10, 3, 1, "", "__rmul__"], [10, 3, 1, "", "__round__"], [10, 3, 1, "", "__rsub__"], [10, 3, 1, "", "__rtruediv__"], [10, 3, 1, "", "__setitem__"], [10, 3, 1, "", "__str__"], [10, 3, 1, "", "__sub__"], [10, 3, 1, "", "__truediv__"], [10, 3, 1, "", "arcsin"], [10, 3, 1, "", "arcsinh"], [10, 3, 1, "", "arctan"], [10, 3, 1, "", "arctanh"], [10, 3, 1, "", "argmax"], [10, 3, 1, "", "argmin"], [10, 3, 1, "", "asformat"], [10, 3, 1, "", "asfptype"], [10, 3, 1, "", "astype"], [10, 3, 1, "", "ceil"], [10, 3, 1, "", "check_format"], [10, 3, 1, "", "conj"], [10, 3, 1, "", "conjugate"], [10, 3, 1, "", "copy"], [10, 3, 1, "", "count_nonzero"], [10, 2, 1, "", "data"], [10, 3, 1, "", "deg2rad"], [10, 3, 1, "", "diagonal"], [10, 3, 1, "", "dot"], [10, 5, 1, "id1", "dtype"], [10, 3, 1, "", "eliminate_zeros"], [10, 3, 1, "", "expm1"], [10, 3, 1, "", "floor"], [10, 5, 1, "", "format"], [10, 3, 1, "", "getH"], [10, 3, 1, "", "get_shape"], [10, 3, 1, "", "getcol"], [10, 3, 1, "", "getformat"], [10, 3, 1, "", "getmaxprint"], [10, 3, 1, "", "getnnz"], [10, 3, 1, "", "getrow"], [10, 5, 1, "id2", "has_canonical_format"], [10, 5, 1, "id3", "has_sorted_indices"], [10, 5, 1, "", "imag"], [10, 2, 1, "", "indices"], [10, 2, 1, "", "indptr"], [10, 3, 1, "", "log1p"], [10, 3, 1, "", "max"], [10, 3, 1, "", "maximum"], [10, 3, 1, "", "mean"], [10, 3, 1, "", "min"], [10, 3, 1, "", "minimum"], [10, 3, 1, "", "multiply"], [10, 3, 1, "", "nanmax"], [10, 3, 1, "", "nanmin"], [10, 5, 1, "id4", "ndim"], [10, 5, 1, "id5", "nnz"], [10, 3, 1, "", "nonzero"], [10, 3, 1, "", "power"], [10, 3, 1, "", "prune"], [10, 3, 1, "", "rad2deg"], [10, 5, 1, "", "real"], [10, 3, 1, "", "reshape"], [10, 3, 1, "", "resize"], [10, 3, 1, "", "rint"], [10, 3, 1, "", "set_shape"], [10, 3, 1, "", "setdiag"], [10, 5, 1, "id6", "shape"], [10, 3, 1, "", "sign"], [10, 3, 1, "", "sin"], [10, 3, 1, "", "sinh"], [10, 5, 1, "id7", "size"], [10, 3, 1, "", "sort_indices"], [10, 3, 1, "", "sorted_indices"], [10, 3, 1, "", "sqrt"], [10, 3, 1, "", "sum"], [10, 3, 1, "", "sum_duplicates"], [10, 3, 1, "", "tan"], [10, 3, 1, "", "tanh"], [10, 3, 1, "", "toarray"], [10, 3, 1, "", "tobsr"], [10, 3, 1, "", "tocoo"], [10, 3, 1, "", "tocsc"], [10, 3, 1, "", "tocsr"], [10, 3, 1, "", "todense"], [10, 3, 1, "", "todia"], [10, 3, 1, "", "todok"], [10, 3, 1, "", "tolil"], [10, 3, 1, "", "trace"], [10, 3, 1, "", "transpose"], [10, 3, 1, "", "trunc"]], "egttools.analytical.sed_analytical.lil_matrix": [[12, 5, 1, "id0", "T"], [12, 3, 1, "", "__abs__"], [12, 3, 1, "", "__add__"], [12, 2, 1, "", "__annotations__"], [12, 2, 1, "", "__array_priority__"], [12, 3, 1, "", "__bool__"], [12, 3, 1, "", "__div__"], [12, 3, 1, "", "__eq__"], [12, 3, 1, "", "__ge__"], [12, 3, 1, "", "__getitem__"], [12, 3, 1, "", "__gt__"], [12, 2, 1, "", "__hash__"], [12, 3, 1, "", "__iadd__"], [12, 3, 1, "", "__idiv__"], [12, 3, 1, "", "__imul__"], [12, 3, 1, "", "__init__"], [12, 3, 1, "", "__isub__"], [12, 3, 1, "", "__iter__"], [12, 3, 1, "", "__itruediv__"], [12, 3, 1, "", "__le__"], [12, 3, 1, "", "__len__"], [12, 3, 1, "", "__lt__"], [12, 3, 1, "", "__matmul__"], [12, 3, 1, "", "__mul__"], [12, 3, 1, "", "__ne__"], [12, 3, 1, "", "__neg__"], [12, 3, 1, "", "__nonzero__"], [12, 3, 1, "", "__pow__"], [12, 3, 1, "", "__radd__"], [12, 3, 1, "", "__rdiv__"], [12, 3, 1, "", "__repr__"], [12, 3, 1, "", "__rmatmul__"], [12, 3, 1, "", "__rmul__"], [12, 3, 1, "", "__round__"], [12, 3, 1, "", "__rsub__"], [12, 3, 1, "", "__rtruediv__"], [12, 3, 1, "", "__setitem__"], [12, 3, 1, "", "__str__"], [12, 3, 1, "", "__sub__"], [12, 3, 1, "", "__truediv__"], [12, 3, 1, "", "asformat"], [12, 3, 1, "", "asfptype"], [12, 3, 1, "", "astype"], [12, 3, 1, "", "conj"], [12, 3, 1, "", "conjugate"], [12, 3, 1, "", "copy"], [12, 3, 1, "", "count_nonzero"], [12, 2, 1, "", "data"], [12, 3, 1, "", "diagonal"], [12, 3, 1, "", "dot"], [12, 2, 1, "", "dtype"], [12, 5, 1, "", "format"], [12, 3, 1, "", "getH"], [12, 3, 1, "", "get_shape"], [12, 3, 1, "", "getcol"], [12, 3, 1, "", "getformat"], [12, 3, 1, "", "getmaxprint"], [12, 3, 1, "", "getnnz"], [12, 3, 1, "", "getrow"], [12, 3, 1, "", "getrowview"], [12, 5, 1, "", "imag"], [12, 3, 1, "", "maximum"], [12, 3, 1, "", "mean"], [12, 3, 1, "", "minimum"], [12, 3, 1, "", "multiply"], [12, 5, 1, "id1", "ndim"], [12, 5, 1, "id2", "nnz"], [12, 3, 1, "", "nonzero"], [12, 3, 1, "", "power"], [12, 5, 1, "", "real"], [12, 3, 1, "", "reshape"], [12, 3, 1, "", "resize"], [12, 2, 1, "", "rows"], [12, 3, 1, "", "set_shape"], [12, 3, 1, "", "setdiag"], [12, 5, 1, "id3", "shape"], [12, 5, 1, "id4", "size"], [12, 3, 1, "", "sum"], [12, 3, 1, "", "toarray"], [12, 3, 1, "", "tobsr"], [12, 3, 1, "", "tocoo"], [12, 3, 1, "", "tocsc"], [12, 3, 1, "", "tocsr"], [12, 3, 1, "", "todense"], [12, 3, 1, "", "todia"], [12, 3, 1, "", "todok"], [12, 3, 1, "", "tolil"], [12, 3, 1, "", "trace"], [12, 3, 1, "", "transpose"]], "egttools.analytical.sed_analytical.permutations": [[13, 3, 1, "", "__getattribute__"], [13, 3, 1, "", "__iter__"], [13, 3, 1, "", "__new__"], [13, 3, 1, "", "__next__"], [13, 3, 1, "", "__reduce__"], [13, 3, 1, "", "__sizeof__"]], "egttools.analytical.utils": [[19, 1, 1, "", "StochDynamics"], [20, 4, 1, "", "calculate_gradients"], [21, 4, 1, "", "check_if_point_in_unit_simplex"], [22, 4, 1, "", "check_if_there_is_random_drift"], [23, 4, 1, "", "check_replicator_stability_pairwise_games"], [24, 4, 1, "", "eigvals"], [25, 4, 1, "", "find_roots"], [26, 4, 1, "", "find_roots_and_stability"], [27, 4, 1, "", "get_pairwise_gradient_from_replicator"], [28, 4, 1, "", "get_pairwise_gradient_from_replicator_n_player"], [29, 4, 1, "", "replicator_equation"], [30, 4, 1, "", "replicator_equation_n_player"], [31, 4, 1, "", "root"], [32, 4, 1, "", "sample_unit_simplex"]], "egttools.analytical.utils.StochDynamics": [[19, 2, 1, "", "__annotations__"], [19, 3, 1, "", "__init__"], [19, 3, 1, "", "calculate_full_transition_matrix"], [19, 3, 1, "", "calculate_stationary_distribution"], [19, 3, 1, "", "fermi"], [19, 3, 1, "", "fitness_group"], [19, 3, 1, "", "fitness_pair"], [19, 3, 1, "", "fixation_probability"], [19, 3, 1, "", "full_fitness_difference_group"], [19, 3, 1, "", "full_fitness_difference_pairwise"], [19, 3, 1, "", "full_gradient_selection"], [19, 3, 1, "", "full_gradient_selection_without_mutation"], [19, 3, 1, "", "gradient_selection"], [19, 3, 1, "", "prob_increase_decrease"], [19, 3, 1, "", "prob_increase_decrease_with_mutation"], [19, 3, 1, "", "transition_and_fixation_matrix"], [19, 3, 1, "", "update_group_size"], [19, 3, 1, "", "update_payoffs"], [19, 3, 1, "", "update_population_size"]], "egttools.behaviors": [[34, 0, 0, "-", "CPR"], [52, 0, 0, "-", "CRD"], [67, 0, 0, "-", "NormalForm"], [93, 0, 0, "-", "opinion_behaviors"], [96, 0, 0, "-", "pgg_behaviors"]], "egttools.behaviors.CPR": [[35, 0, 0, "-", "abstract_cpr_strategy"], [39, 0, 0, "-", "cpr_strategies"]], "egttools.behaviors.CPR.abstract_cpr_strategy": [[36, 1, 1, "", "ABC"], [37, 1, 1, "", "AbstractCPRStrategy"], [38, 4, 1, "", "abstractmethod"]], "egttools.behaviors.CPR.abstract_cpr_strategy.ABC": [[36, 2, 1, "", "__abstractmethods__"], [36, 2, 1, "", "__annotations__"], [36, 2, 1, "", "__slots__"]], "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy": [[37, 2, 1, "", "__abstractmethods__"], [37, 2, 1, "", "__annotations__"], [37, 2, 1, "", "__slots__"], [37, 3, 1, "", "__str__"], [37, 3, 1, "", "get_extraction"], [37, 3, 1, "", "get_payoff"], [37, 3, 1, "", "is_commitment_validated"], [37, 3, 1, "", "proposes_commitment"], [37, 3, 1, "", "type"], [37, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CPR.cpr_strategies": [[40, 1, 1, "", "AbstractCPRStrategy"], [41, 1, 1, "", "CommitmentStrategy"], [42, 1, 1, "", "FairExtraction"], [43, 1, 1, "", "FakeStrategy"], [44, 1, 1, "", "FixedExtraction"], [45, 1, 1, "", "FreeStrategy"], [46, 1, 1, "", "HighExtraction"], [47, 1, 1, "", "NashExtraction"], [48, 4, 1, "", "fair_extraction"], [49, 4, 1, "", "high_extraction"], [50, 4, 1, "", "nash_extraction"], [51, 4, 1, "", "payoff_no_commitment"]], "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy": [[40, 2, 1, "", "__abstractmethods__"], [40, 2, 1, "", "__annotations__"], [40, 2, 1, "", "__slots__"], [40, 3, 1, "", "__str__"], [40, 3, 1, "", "get_extraction"], [40, 3, 1, "", "get_payoff"], [40, 3, 1, "", "is_commitment_validated"], [40, 3, 1, "", "proposes_commitment"], [40, 3, 1, "", "type"], [40, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy": [[41, 2, 1, "", "__abstractmethods__"], [41, 2, 1, "", "__annotations__"], [41, 3, 1, "", "__init__"], [41, 2, 1, "", "__slots__"], [41, 3, 1, "", "__str__"], [41, 3, 1, "", "get_extraction"], [41, 3, 1, "", "get_payoff"], [41, 3, 1, "", "is_commitment_validated"], [41, 3, 1, "", "proposes_commitment"], [41, 3, 1, "", "type"], [41, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CPR.cpr_strategies.FairExtraction": [[42, 2, 1, "", "__abstractmethods__"], [42, 2, 1, "", "__annotations__"], [42, 2, 1, "", "__slots__"], [42, 3, 1, "", "__str__"], [42, 3, 1, "", "get_extraction"], [42, 3, 1, "", "get_payoff"], [42, 3, 1, "", "is_commitment_validated"], [42, 3, 1, "", "proposes_commitment"], [42, 3, 1, "", "type"], [42, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CPR.cpr_strategies.FakeStrategy": [[43, 2, 1, "", "__abstractmethods__"], [43, 2, 1, "", "__annotations__"], [43, 2, 1, "", "__slots__"], [43, 3, 1, "", "__str__"], [43, 3, 1, "", "get_extraction"], [43, 3, 1, "", "get_payoff"], [43, 3, 1, "", "is_commitment_validated"], [43, 3, 1, "", "proposes_commitment"], [43, 3, 1, "", "type"], [43, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CPR.cpr_strategies.FixedExtraction": [[44, 2, 1, "", "__abstractmethods__"], [44, 2, 1, "", "__annotations__"], [44, 3, 1, "", "__init__"], [44, 2, 1, "", "__slots__"], [44, 3, 1, "", "__str__"], [44, 3, 1, "", "get_extraction"], [44, 3, 1, "", "get_payoff"], [44, 3, 1, "", "is_commitment_validated"], [44, 3, 1, "", "proposes_commitment"], [44, 3, 1, "", "type"], [44, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CPR.cpr_strategies.FreeStrategy": [[45, 2, 1, "", "__abstractmethods__"], [45, 2, 1, "", "__annotations__"], [45, 2, 1, "", "__slots__"], [45, 3, 1, "", "__str__"], [45, 3, 1, "", "get_extraction"], [45, 3, 1, "", "get_payoff"], [45, 3, 1, "", "is_commitment_validated"], [45, 3, 1, "", "proposes_commitment"], [45, 3, 1, "", "type"], [45, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CPR.cpr_strategies.HighExtraction": [[46, 2, 1, "", "__abstractmethods__"], [46, 2, 1, "", "__annotations__"], [46, 2, 1, "", "__slots__"], [46, 3, 1, "", "__str__"], [46, 3, 1, "", "get_extraction"], [46, 3, 1, "", "get_payoff"], [46, 3, 1, "", "is_commitment_validated"], [46, 3, 1, "", "proposes_commitment"], [46, 3, 1, "", "type"], [46, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CPR.cpr_strategies.NashExtraction": [[47, 2, 1, "", "__abstractmethods__"], [47, 2, 1, "", "__annotations__"], [47, 2, 1, "", "__slots__"], [47, 3, 1, "", "__str__"], [47, 3, 1, "", "get_extraction"], [47, 3, 1, "", "get_payoff"], [47, 3, 1, "", "is_commitment_validated"], [47, 3, 1, "", "proposes_commitment"], [47, 3, 1, "", "type"], [47, 3, 1, "", "would_like_to_commit"]], "egttools.behaviors.CRD": [[53, 1, 1, "", "AbstractCRDStrategy"], [54, 1, 1, "", "CRDMemoryOnePlayer"], [55, 1, 1, "", "GoalBasedCRDStrategy"], [56, 1, 1, "", "MovingAverageCRDStrategy"], [57, 1, 1, "", "TimeBasedCRDStrategy"], [58, 0, 0, "-", "goal_based"], [61, 0, 0, "-", "moving_average"], [64, 0, 0, "-", "time_based"]], "egttools.behaviors.CRD.AbstractCRDStrategy": [[53, 2, 1, "", "__annotations__"], [53, 3, 1, "", "__init__"], [53, 3, 1, "", "__new__"], [53, 3, 1, "", "get_action"], [53, 3, 1, "", "type"]], "egttools.behaviors.CRD.CRDMemoryOnePlayer": [[54, 2, 1, "", "__annotations__"], [54, 3, 1, "", "__init__"], [54, 3, 1, "", "__new__"], [54, 3, 1, "", "__str__"], [54, 3, 1, "", "get_action"], [54, 3, 1, "", "type"]], "egttools.behaviors.CRD.GoalBasedCRDStrategy": [[55, 2, 1, "", "__annotations__"], [55, 3, 1, "", "__init__"], [55, 3, 1, "", "__new__"], [55, 3, 1, "", "__str__"], [55, 3, 1, "", "get_action"], [55, 3, 1, "", "type"]], "egttools.behaviors.CRD.MovingAverageCRDStrategy": [[56, 2, 1, "", "__annotations__"], [56, 3, 1, "", "__init__"], [56, 3, 1, "", "__new__"], [56, 3, 1, "", "__str__"], [56, 3, 1, "", "get_action"], [56, 3, 1, "", "type"]], "egttools.behaviors.CRD.TimeBasedCRDStrategy": [[57, 2, 1, "", "__annotations__"], [57, 3, 1, "", "__init__"], [57, 3, 1, "", "__new__"], [57, 3, 1, "", "__str__"], [57, 3, 1, "", "get_action"], [57, 3, 1, "", "type"]], "egttools.behaviors.CRD.goal_based": [[59, 1, 1, "", "AbstractCRDStrategy"], [60, 1, 1, "", "GoalBasedCRDStrategy"]], "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy": [[59, 2, 1, "", "__annotations__"], [59, 3, 1, "", "__init__"], [59, 3, 1, "", "__new__"], [59, 3, 1, "", "get_action"], [59, 3, 1, "", "type"]], "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy": [[60, 2, 1, "", "__annotations__"], [60, 3, 1, "", "__init__"], [60, 3, 1, "", "__new__"], [60, 3, 1, "", "__str__"], [60, 3, 1, "", "get_action"], [60, 3, 1, "", "type"]], "egttools.behaviors.CRD.moving_average": [[62, 1, 1, "", "AbstractCRDStrategy"], [63, 1, 1, "", "MovingAverageCRDStrategy"]], "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy": [[62, 2, 1, "", "__annotations__"], [62, 3, 1, "", "__init__"], [62, 3, 1, "", "__new__"], [62, 3, 1, "", "get_action"], [62, 3, 1, "", "type"]], "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy": [[63, 2, 1, "", "__annotations__"], [63, 3, 1, "", "__init__"], [63, 3, 1, "", "__new__"], [63, 3, 1, "", "__str__"], [63, 3, 1, "", "get_action"], [63, 3, 1, "", "type"]], "egttools.behaviors.CRD.time_based": [[65, 1, 1, "", "AbstractCRDStrategy"], [66, 1, 1, "", "TimeBasedCRDStrategy"]], "egttools.behaviors.CRD.time_based.AbstractCRDStrategy": [[65, 2, 1, "", "__annotations__"], [65, 3, 1, "", "__init__"], [65, 3, 1, "", "__new__"], [65, 3, 1, "", "get_action"], [65, 3, 1, "", "type"]], "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy": [[66, 2, 1, "", "__annotations__"], [66, 3, 1, "", "__init__"], [66, 3, 1, "", "__new__"], [66, 3, 1, "", "__str__"], [66, 3, 1, "", "get_action"], [66, 3, 1, "", "type"]], "egttools.behaviors.NormalForm": [[68, 1, 1, "", "AbstractNFGStrategy"], [69, 0, 0, "-", "TwoActions"]], "egttools.behaviors.NormalForm.AbstractNFGStrategy": [[68, 2, 1, "", "__annotations__"], [68, 3, 1, "", "__init__"], [68, 3, 1, "", "__new__"], [68, 3, 1, "", "get_action"], [68, 3, 1, "", "is_stochastic"], [68, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions": [[70, 1, 1, "", "ActionInertia"], [71, 1, 1, "", "Cooperator"], [72, 1, 1, "", "Defector"], [73, 1, 1, "", "Detective"], [74, 1, 1, "", "EpsilonGRIM"], [75, 1, 1, "", "EpsilonTFT"], [76, 1, 1, "", "GRIM"], [77, 1, 1, "", "GenerousTFT"], [78, 1, 1, "", "GradualTFT"], [79, 1, 1, "", "ImperfectTFT"], [80, 1, 1, "", "MemoryOneStrategy"], [81, 1, 1, "", "Pavlov"], [82, 1, 1, "", "Random"], [83, 1, 1, "", "SuspiciousTFT"], [84, 1, 1, "", "TFT"], [85, 1, 1, "", "TFTT"], [86, 1, 1, "", "TTFT"], [87, 0, 0, "-", "nfg_strategies"]], "egttools.behaviors.NormalForm.TwoActions.ActionInertia": [[70, 2, 1, "", "__annotations__"], [70, 3, 1, "", "__init__"], [70, 3, 1, "", "__new__"], [70, 3, 1, "", "get_action"], [70, 3, 1, "", "is_stochastic"], [70, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.Cooperator": [[71, 2, 1, "", "__annotations__"], [71, 3, 1, "", "__init__"], [71, 3, 1, "", "__new__"], [71, 3, 1, "", "get_action"], [71, 3, 1, "", "is_stochastic"], [71, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.Defector": [[72, 2, 1, "", "__annotations__"], [72, 3, 1, "", "__init__"], [72, 3, 1, "", "__new__"], [72, 3, 1, "", "get_action"], [72, 3, 1, "", "is_stochastic"], [72, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.Detective": [[73, 2, 1, "", "__annotations__"], [73, 3, 1, "", "__init__"], [73, 3, 1, "", "__new__"], [73, 3, 1, "", "__str__"], [73, 3, 1, "", "get_action"], [73, 3, 1, "", "is_stochastic"], [73, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM": [[74, 2, 1, "", "__annotations__"], [74, 3, 1, "", "__init__"], [74, 3, 1, "", "__new__"], [74, 3, 1, "", "__str__"], [74, 3, 1, "", "get_action"], [74, 3, 1, "", "is_stochastic"], [74, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT": [[75, 2, 1, "", "__annotations__"], [75, 3, 1, "", "__init__"], [75, 3, 1, "", "__new__"], [75, 3, 1, "", "__str__"], [75, 3, 1, "", "get_action"], [75, 3, 1, "", "is_stochastic"], [75, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.GRIM": [[76, 2, 1, "", "__annotations__"], [76, 3, 1, "", "__init__"], [76, 3, 1, "", "__new__"], [76, 3, 1, "", "get_action"], [76, 3, 1, "", "is_stochastic"], [76, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.GenerousTFT": [[77, 2, 1, "", "__annotations__"], [77, 3, 1, "", "__init__"], [77, 3, 1, "", "__new__"], [77, 3, 1, "", "get_action"], [77, 3, 1, "", "is_stochastic"], [77, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.GradualTFT": [[78, 2, 1, "", "__annotations__"], [78, 3, 1, "", "__init__"], [78, 3, 1, "", "__new__"], [78, 3, 1, "", "get_action"], [78, 3, 1, "", "is_stochastic"], [78, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT": [[79, 2, 1, "", "__annotations__"], [79, 3, 1, "", "__init__"], [79, 3, 1, "", "__new__"], [79, 3, 1, "", "get_action"], [79, 3, 1, "", "is_stochastic"], [79, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy": [[80, 2, 1, "", "__annotations__"], [80, 3, 1, "", "__init__"], [80, 3, 1, "", "__new__"], [80, 3, 1, "", "__str__"], [80, 3, 1, "", "get_action"], [80, 3, 1, "", "is_stochastic"], [80, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.Pavlov": [[81, 2, 1, "", "__annotations__"], [81, 3, 1, "", "__init__"], [81, 3, 1, "", "__new__"], [81, 3, 1, "", "get_action"], [81, 3, 1, "", "is_stochastic"], [81, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.Random": [[82, 2, 1, "", "__annotations__"], [82, 3, 1, "", "__init__"], [82, 3, 1, "", "__new__"], [82, 3, 1, "", "get_action"], [82, 3, 1, "", "is_stochastic"], [82, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT": [[83, 2, 1, "", "__annotations__"], [83, 3, 1, "", "__init__"], [83, 3, 1, "", "__new__"], [83, 3, 1, "", "get_action"], [83, 3, 1, "", "is_stochastic"], [83, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.TFT": [[84, 2, 1, "", "__annotations__"], [84, 3, 1, "", "__init__"], [84, 3, 1, "", "__new__"], [84, 3, 1, "", "get_action"], [84, 3, 1, "", "is_stochastic"], [84, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.TFTT": [[85, 2, 1, "", "__annotations__"], [85, 3, 1, "", "__init__"], [85, 3, 1, "", "__new__"], [85, 3, 1, "", "get_action"], [85, 3, 1, "", "is_stochastic"], [85, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.TTFT": [[86, 2, 1, "", "__annotations__"], [86, 3, 1, "", "__init__"], [86, 3, 1, "", "__new__"], [86, 3, 1, "", "get_action"], [86, 3, 1, "", "is_stochastic"], [86, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies": [[88, 1, 1, "", "AbstractNFGStrategy"], [89, 1, 1, "", "Detective"], [90, 1, 1, "", "EpsilonGRIM"], [91, 1, 1, "", "EpsilonTFT"], [92, 1, 1, "", "MemoryOneStrategy"]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy": [[88, 2, 1, "", "__annotations__"], [88, 3, 1, "", "__init__"], [88, 3, 1, "", "__new__"], [88, 3, 1, "", "get_action"], [88, 3, 1, "", "is_stochastic"], [88, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective": [[89, 2, 1, "", "__annotations__"], [89, 3, 1, "", "__init__"], [89, 3, 1, "", "__new__"], [89, 3, 1, "", "__str__"], [89, 3, 1, "", "get_action"], [89, 3, 1, "", "is_stochastic"], [89, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM": [[90, 2, 1, "", "__annotations__"], [90, 3, 1, "", "__init__"], [90, 3, 1, "", "__new__"], [90, 3, 1, "", "__str__"], [90, 3, 1, "", "get_action"], [90, 3, 1, "", "is_stochastic"], [90, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT": [[91, 2, 1, "", "__annotations__"], [91, 3, 1, "", "__init__"], [91, 3, 1, "", "__new__"], [91, 3, 1, "", "__str__"], [91, 3, 1, "", "get_action"], [91, 3, 1, "", "is_stochastic"], [91, 3, 1, "", "type"]], "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy": [[92, 2, 1, "", "__annotations__"], [92, 3, 1, "", "__init__"], [92, 3, 1, "", "__new__"], [92, 3, 1, "", "__str__"], [92, 3, 1, "", "get_action"], [92, 3, 1, "", "is_stochastic"], [92, 3, 1, "", "type"]], "egttools.behaviors.opinion_behaviors": [[94, 1, 1, "", "Opinion"], [95, 4, 1, "", "opinion_factory"]], "egttools.behaviors.opinion_behaviors.Opinion": [[94, 2, 1, "", "__annotations__"], [94, 3, 1, "", "__init__"], [94, 3, 1, "", "get_action"], [94, 5, 1, "", "type"]], "egttools.behaviors.pgg_behaviors": [[97, 1, 1, "", "PGGOneShotStrategy"], [98, 4, 1, "", "player_factory"]], "egttools.behaviors.pgg_behaviors.PGGOneShotStrategy": [[97, 2, 1, "", "__annotations__"], [97, 3, 1, "", "__init__"], [97, 3, 1, "", "get_action"], [97, 5, 1, "", "type"]], "egttools.datastructures": [[103, 1, 1, "", "DataTable"]], "egttools.datastructures.DataTable": [[103, 2, 1, "", "__annotations__"], [103, 3, 1, "", "__init__"], [103, 3, 1, "", "__new__"], [103, 5, 1, "", "cols"], [103, 5, 1, "", "column_types"], [103, 5, 1, "", "data"], [103, 5, 1, "", "headers"], [103, 5, 1, "", "rows"]], "egttools.distributions": [[105, 1, 1, "", "TimingUncertainty"], [106, 4, 1, "", "binom"], [107, 4, 1, "", "comb"], [108, 4, 1, "", "multinomial_pmf"], [109, 4, 1, "", "multivariate_hypergeometric_pdf"]], "egttools.distributions.TimingUncertainty": [[105, 2, 1, "", "__annotations__"], [105, 3, 1, "", "__init__"], [105, 3, 1, "", "__new__"], [105, 3, 1, "", "calculate_end"], [105, 3, 1, "", "calculate_full_end"], [105, 5, 1, "", "max_rounds"], [105, 5, 1, "", "p"]], "egttools.games": [[112, 1, 1, "", "AbstractGame"], [113, 1, 1, "", "AbstractNPlayerGame"], [114, 1, 1, "", "AbstractSpatialGame"], [115, 1, 1, "", "AbstractTwoPLayerGame"], [116, 1, 1, "", "CRDGame"], [117, 1, 1, "", "CRDGameTU"], [118, 1, 1, "", "CommonPoolResourceDilemma"], [119, 1, 1, "", "CommonPoolResourceDilemmaCommitment"], [120, 1, 1, "", "InformalRiskGame"], [121, 1, 1, "", "Matrix2PlayerGameHolder"], [122, 1, 1, "", "MatrixNPlayerGameHolder"], [123, 1, 1, "", "NPlayerStagHunt"], [124, 1, 1, "", "NormalFormGame"], [125, 1, 1, "", "NormalFormNetworkGame"], [126, 1, 1, "", "OneShotCRD"], [127, 1, 1, "", "OneShotCRDNetworkGame"], [128, 1, 1, "", "PGG"], [129, 0, 0, "-", "abstract_games"], [137, 0, 0, "-", "informal_risk"], [143, 0, 0, "-", "nonlinear_games"], [151, 0, 0, "-", "opinion_game"], [157, 0, 0, "-", "pgg"]], "egttools.games.AbstractGame": [[112, 2, 1, "", "__annotations__"], [112, 3, 1, "", "__init__"], [112, 3, 1, "", "__new__"], [112, 3, 1, "", "__str__"], [112, 3, 1, "", "calculate_fitness"], [112, 3, 1, "", "calculate_payoffs"], [112, 3, 1, "", "nb_strategies"], [112, 3, 1, "", "payoff"], [112, 3, 1, "", "payoffs"], [112, 3, 1, "", "play"], [112, 3, 1, "", "save_payoffs"], [112, 3, 1, "", "type"]], "egttools.games.AbstractNPlayerGame": [[113, 2, 1, "", "__annotations__"], [113, 3, 1, "", "__init__"], [113, 3, 1, "", "__new__"], [113, 3, 1, "", "__str__"], [113, 3, 1, "", "calculate_fitness"], [113, 3, 1, "", "calculate_payoffs"], [113, 3, 1, "", "group_size"], [113, 3, 1, "", "nb_group_configurations"], [113, 3, 1, "", "nb_strategies"], [113, 3, 1, "", "payoff"], [113, 3, 1, "", "payoffs"], [113, 3, 1, "", "play"], [113, 3, 1, "", "save_payoffs"], [113, 3, 1, "", "type"], [113, 3, 1, "", "update_payoff"]], "egttools.games.AbstractSpatialGame": [[114, 2, 1, "", "__annotations__"], [114, 3, 1, "", "__init__"], [114, 3, 1, "", "__new__"], [114, 3, 1, "", "__str__"], [114, 3, 1, "", "calculate_fitness"], [114, 3, 1, "", "nb_strategies"], [114, 3, 1, "", "type"]], "egttools.games.AbstractTwoPLayerGame": [[115, 2, 1, "", "__annotations__"], [115, 3, 1, "", "__init__"], [115, 3, 1, "", "__new__"], [115, 3, 1, "", "__str__"], [115, 3, 1, "", "calculate_fitness"], [115, 3, 1, "", "calculate_payoffs"], [115, 3, 1, "", "nb_strategies"], [115, 3, 1, "", "payoff"], [115, 3, 1, "", "payoffs"], [115, 3, 1, "", "play"], [115, 3, 1, "", "save_payoffs"], [115, 3, 1, "", "type"]], "egttools.games.CRDGame": [[116, 2, 1, "", "__annotations__"], [116, 3, 1, "", "__init__"], [116, 3, 1, "", "__new__"], [116, 3, 1, "", "__str__"], [116, 3, 1, "", "calculate_fitness"], [116, 3, 1, "", "calculate_group_achievement"], [116, 3, 1, "", "calculate_payoffs"], [116, 3, 1, "", "calculate_polarization"], [116, 3, 1, "", "calculate_polarization_success"], [116, 3, 1, "", "calculate_population_group_achievement"], [116, 5, 1, "", "endowment"], [116, 5, 1, "", "enhancement_factor"], [116, 5, 1, "", "group_size"], [116, 5, 1, "", "nb_rounds"], [116, 5, 1, "", "nb_states"], [116, 3, 1, "", "nb_strategies"], [116, 3, 1, "", "payoff"], [116, 3, 1, "", "payoffs"], [116, 3, 1, "", "play"], [116, 5, 1, "", "risk"], [116, 3, 1, "", "save_payoffs"], [116, 5, 1, "", "strategies"], [116, 5, 1, "", "target"], [116, 3, 1, "", "type"]], "egttools.games.CRDGameTU": [[117, 2, 1, "", "__annotations__"], [117, 3, 1, "", "__init__"], [117, 3, 1, "", "__new__"], [117, 3, 1, "", "__str__"], [117, 3, 1, "", "calculate_fitness"], [117, 3, 1, "", "calculate_group_achievement"], [117, 3, 1, "", "calculate_payoffs"], [117, 3, 1, "", "calculate_polarization"], [117, 3, 1, "", "calculate_polarization_success"], [117, 3, 1, "", "calculate_population_group_achievement"], [117, 5, 1, "", "endowment"], [117, 5, 1, "", "group_size"], [117, 5, 1, "", "min_rounds"], [117, 5, 1, "", "nb_states"], [117, 3, 1, "", "nb_strategies"], [117, 3, 1, "", "payoff"], [117, 3, 1, "", "payoffs"], [117, 3, 1, "", "play"], [117, 5, 1, "", "risk"], [117, 3, 1, "", "save_payoffs"], [117, 5, 1, "", "strategies"], [117, 5, 1, "", "target"], [117, 3, 1, "", "type"]], "egttools.games.CommonPoolResourceDilemma": [[118, 2, 1, "", "__annotations__"], [118, 3, 1, "", "__init__"], [118, 3, 1, "", "__new__"], [118, 3, 1, "", "__str__"], [118, 3, 1, "", "calculate_fitness"], [118, 3, 1, "", "calculate_payoffs"], [118, 3, 1, "", "calculate_total_extraction"], [118, 3, 1, "", "conditional_low"], [118, 3, 1, "", "extraction"], [118, 3, 1, "", "extraction_strategy"], [118, 3, 1, "", "group_size"], [118, 3, 1, "", "high_extraction"], [118, 3, 1, "", "low_extraction"], [118, 3, 1, "", "min_extraction"], [118, 3, 1, "", "nb_group_configurations"], [118, 3, 1, "", "nb_strategies"], [118, 3, 1, "", "payoff"], [118, 3, 1, "", "payoffs"], [118, 3, 1, "", "play"], [118, 3, 1, "", "save_payoffs"], [118, 3, 1, "", "type"], [118, 3, 1, "", "update_payoff"]], "egttools.games.CommonPoolResourceDilemmaCommitment": [[119, 2, 1, "", "__annotations__"], [119, 3, 1, "", "__init__"], [119, 3, 1, "", "__new__"], [119, 3, 1, "", "__str__"], [119, 3, 1, "", "add_group_extraction"], [119, 3, 1, "", "calculate_expected_consumption"], [119, 3, 1, "", "calculate_fitness"], [119, 3, 1, "", "calculate_payoffs"], [119, 3, 1, "", "calculate_total_extraction"], [119, 3, 1, "", "check_if_commitment_validated"], [119, 3, 1, "", "get_nb_committed"], [119, 3, 1, "", "group_size"], [119, 3, 1, "", "nb_group_configurations"], [119, 3, 1, "", "nb_strategies"], [119, 3, 1, "", "payoff"], [119, 3, 1, "", "payoffs"], [119, 3, 1, "", "play"], [119, 3, 1, "", "save_payoffs"], [119, 3, 1, "", "type"], [119, 3, 1, "", "update_payoff"]], "egttools.games.InformalRiskGame": [[120, 2, 1, "", "__annotations__"], [120, 3, 1, "", "__init__"], [120, 3, 1, "", "__new__"], [120, 3, 1, "", "__str__"], [120, 3, 1, "", "calculate_fitness"], [120, 3, 1, "", "calculate_payoffs"], [120, 5, 1, "", "nb_strategies"], [120, 3, 1, "", "payoff"], [120, 5, 1, "", "payoffs"], [120, 3, 1, "", "play"], [120, 3, 1, "", "save_payoffs"], [120, 5, 1, "", "type"]], "egttools.games.Matrix2PlayerGameHolder": [[121, 2, 1, "", "__annotations__"], [121, 3, 1, "", "__init__"], [121, 3, 1, "", "__new__"], [121, 3, 1, "", "__str__"], [121, 3, 1, "", "calculate_fitness"], [121, 3, 1, "", "calculate_payoffs"], [121, 3, 1, "", "nb_strategies"], [121, 3, 1, "", "payoff"], [121, 3, 1, "", "payoffs"], [121, 3, 1, "", "play"], [121, 3, 1, "", "save_payoffs"], [121, 3, 1, "", "type"], [121, 3, 1, "", "update_payoff_matrix"]], "egttools.games.MatrixNPlayerGameHolder": [[122, 2, 1, "", "__annotations__"], [122, 3, 1, "", "__init__"], [122, 3, 1, "", "__new__"], [122, 3, 1, "", "__str__"], [122, 3, 1, "", "calculate_fitness"], [122, 3, 1, "", "calculate_payoffs"], [122, 3, 1, "", "group_size"], [122, 3, 1, "", "nb_group_configurations"], [122, 3, 1, "", "nb_strategies"], [122, 3, 1, "", "payoff"], [122, 3, 1, "", "payoffs"], [122, 3, 1, "", "play"], [122, 3, 1, "", "save_payoffs"], [122, 3, 1, "", "type"], [122, 3, 1, "", "update_payoff_matrix"]], "egttools.games.NPlayerStagHunt": [[123, 2, 1, "", "__annotations__"], [123, 3, 1, "", "__init__"], [123, 3, 1, "", "__new__"], [123, 3, 1, "", "__str__"], [123, 3, 1, "", "calculate_fitness"], [123, 3, 1, "", "calculate_payoffs"], [123, 3, 1, "", "group_size"], [123, 3, 1, "", "nb_group_configurations"], [123, 3, 1, "", "nb_strategies"], [123, 3, 1, "", "payoff"], [123, 3, 1, "", "payoffs"], [123, 3, 1, "", "play"], [123, 3, 1, "", "save_payoffs"], [123, 3, 1, "", "type"], [123, 3, 1, "", "update_payoff"]], "egttools.games.NormalFormGame": [[124, 2, 1, "", "__annotations__"], [124, 3, 1, "", "__init__"], [124, 3, 1, "", "__new__"], [124, 3, 1, "", "__str__"], [124, 3, 1, "", "calculate_fitness"], [124, 3, 1, "", "calculate_payoffs"], [124, 3, 1, "", "expected_payoffs"], [124, 5, 1, "", "nb_rounds"], [124, 5, 1, "", "nb_states"], [124, 3, 1, "", "nb_strategies"], [124, 3, 1, "", "payoff"], [124, 3, 1, "", "payoffs"], [124, 3, 1, "", "play"], [124, 3, 1, "", "save_payoffs"], [124, 5, 1, "", "strategies"], [124, 3, 1, "", "type"]], "egttools.games.NormalFormNetworkGame": [[125, 2, 1, "", "__annotations__"], [125, 3, 1, "", "__init__"], [125, 3, 1, "", "__new__"], [125, 3, 1, "", "__str__"], [125, 3, 1, "", "calculate_cooperation_level_neighborhood"], [125, 3, 1, "", "calculate_fitness"], [125, 3, 1, "", "calculate_payoffs"], [125, 3, 1, "", "expected_payoffs"], [125, 3, 1, "", "nb_rounds"], [125, 3, 1, "", "nb_strategies"], [125, 3, 1, "", "strategies"], [125, 3, 1, "", "type"]], "egttools.games.OneShotCRD": [[126, 2, 1, "", "__annotations__"], [126, 3, 1, "", "__init__"], [126, 3, 1, "", "__new__"], [126, 3, 1, "", "__str__"], [126, 3, 1, "", "calculate_fitness"], [126, 3, 1, "", "calculate_group_achievement"], [126, 3, 1, "", "calculate_payoffs"], [126, 3, 1, "", "calculate_population_group_achievement"], [126, 5, 1, "", "cost"], [126, 5, 1, "", "endowment"], [126, 5, 1, "", "group_achievement_per_group"], [126, 5, 1, "", "group_size"], [126, 5, 1, "", "min_nb_cooperators"], [126, 5, 1, "", "nb_states"], [126, 3, 1, "", "nb_strategies"], [126, 3, 1, "", "payoff"], [126, 3, 1, "", "payoffs"], [126, 3, 1, "", "play"], [126, 5, 1, "", "risk"], [126, 3, 1, "", "save_payoffs"], [126, 3, 1, "", "type"]], "egttools.games.OneShotCRDNetworkGame": [[127, 2, 1, "", "__annotations__"], [127, 3, 1, "", "__init__"], [127, 3, 1, "", "__new__"], [127, 3, 1, "", "__str__"], [127, 3, 1, "", "calculate_fitness"], [127, 3, 1, "", "cost"], [127, 3, 1, "", "endowment"], [127, 3, 1, "", "min_nb_cooperators"], [127, 3, 1, "", "nb_strategies"], [127, 3, 1, "", "risk"], [127, 3, 1, "", "type"]], "egttools.games.PGG": [[128, 2, 1, "", "__annotations__"], [128, 3, 1, "", "__init__"], [128, 3, 1, "", "__new__"], [128, 3, 1, "", "__str__"], [128, 3, 1, "", "calculate_fitness"], [128, 3, 1, "", "calculate_payoffs"], [128, 3, 1, "", "group_size"], [128, 3, 1, "", "nb_group_configurations"], [128, 3, 1, "", "nb_strategies"], [128, 3, 1, "", "payoff"], [128, 3, 1, "", "payoffs"], [128, 3, 1, "", "play"], [128, 3, 1, "", "save_payoffs"], [128, 3, 1, "", "type"], [128, 3, 1, "", "update_payoff"]], "egttools.games.abstract_games": [[130, 1, 1, "", "AbstractGame"], [131, 1, 1, "", "AbstractNPlayerGame"], [132, 1, 1, "", "AbstractNPlayerGameExpectedPayoff"], [133, 1, 1, "", "AbstractTwoPLayerGame"], [134, 4, 1, "", "abstractmethod"], [135, 4, 1, "", "calculate_state"], [136, 4, 1, "", "sample_simplex"]], "egttools.games.abstract_games.AbstractGame": [[130, 2, 1, "", "__annotations__"], [130, 3, 1, "", "__init__"], [130, 3, 1, "", "__new__"], [130, 3, 1, "", "__str__"], [130, 3, 1, "", "calculate_fitness"], [130, 3, 1, "", "calculate_payoffs"], [130, 3, 1, "", "nb_strategies"], [130, 3, 1, "", "payoff"], [130, 3, 1, "", "payoffs"], [130, 3, 1, "", "play"], [130, 3, 1, "", "save_payoffs"], [130, 3, 1, "", "type"]], "egttools.games.abstract_games.AbstractNPlayerGame": [[131, 2, 1, "", "__annotations__"], [131, 3, 1, "", "__init__"], [131, 3, 1, "", "__new__"], [131, 3, 1, "", "__str__"], [131, 3, 1, "", "calculate_fitness"], [131, 3, 1, "", "calculate_payoffs"], [131, 3, 1, "", "group_size"], [131, 3, 1, "", "nb_group_configurations"], [131, 3, 1, "", "nb_strategies"], [131, 3, 1, "", "payoff"], [131, 3, 1, "", "payoffs"], [131, 3, 1, "", "play"], [131, 3, 1, "", "save_payoffs"], [131, 3, 1, "", "type"], [131, 3, 1, "", "update_payoff"]], "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff": [[132, 2, 1, "", "__annotations__"], [132, 3, 1, "", "__init__"], [132, 3, 1, "", "__new__"], [132, 3, 1, "", "__str__"], [132, 3, 1, "", "calculate_fitness"], [132, 3, 1, "", "calculate_payoffs"], [132, 3, 1, "", "group_size"], [132, 3, 1, "", "nb_group_configurations"], [132, 3, 1, "", "nb_strategies"], [132, 3, 1, "", "payoff"], [132, 3, 1, "", "payoffs"], [132, 3, 1, "", "play"], [132, 3, 1, "", "save_payoffs"], [132, 3, 1, "", "type"], [132, 3, 1, "", "update_payoff"]], "egttools.games.abstract_games.AbstractTwoPLayerGame": [[133, 2, 1, "", "__annotations__"], [133, 3, 1, "", "__init__"], [133, 3, 1, "", "__new__"], [133, 3, 1, "", "__str__"], [133, 3, 1, "", "calculate_fitness"], [133, 3, 1, "", "calculate_payoffs"], [133, 3, 1, "", "nb_strategies"], [133, 3, 1, "", "payoff"], [133, 3, 1, "", "payoffs"], [133, 3, 1, "", "play"], [133, 3, 1, "", "save_payoffs"], [133, 3, 1, "", "type"]], "egttools.games.informal_risk": [[138, 1, 1, "", "AbstractGame"], [139, 1, 1, "", "InformalRiskGame"], [140, 4, 1, "", "calculate_nb_states"], [141, 4, 1, "", "calculate_state"], [142, 4, 1, "", "sample_simplex"]], "egttools.games.informal_risk.AbstractGame": [[138, 2, 1, "", "__annotations__"], [138, 3, 1, "", "__init__"], [138, 3, 1, "", "__new__"], [138, 3, 1, "", "__str__"], [138, 3, 1, "", "calculate_fitness"], [138, 3, 1, "", "calculate_payoffs"], [138, 3, 1, "", "nb_strategies"], [138, 3, 1, "", "payoff"], [138, 3, 1, "", "payoffs"], [138, 3, 1, "", "play"], [138, 3, 1, "", "save_payoffs"], [138, 3, 1, "", "type"]], "egttools.games.informal_risk.InformalRiskGame": [[139, 2, 1, "", "__annotations__"], [139, 3, 1, "", "__init__"], [139, 3, 1, "", "__new__"], [139, 3, 1, "", "__str__"], [139, 3, 1, "", "calculate_fitness"], [139, 3, 1, "", "calculate_payoffs"], [139, 5, 1, "", "nb_strategies"], [139, 3, 1, "", "payoff"], [139, 5, 1, "", "payoffs"], [139, 3, 1, "", "play"], [139, 3, 1, "", "save_payoffs"], [139, 5, 1, "", "type"]], "egttools.games.nonlinear_games": [[144, 1, 1, "", "AbstractCPRStrategy"], [145, 1, 1, "", "AbstractNPlayerGame"], [146, 1, 1, "", "CommonPoolResourceDilemma"], [147, 1, 1, "", "CommonPoolResourceDilemmaCommitment"], [148, 1, 1, "", "NPlayerStagHunt"], [149, 4, 1, "", "calculate_state"], [150, 4, 1, "", "sample_simplex"]], "egttools.games.nonlinear_games.AbstractCPRStrategy": [[144, 2, 1, "", "__abstractmethods__"], [144, 2, 1, "", "__annotations__"], [144, 2, 1, "", "__slots__"], [144, 3, 1, "", "__str__"], [144, 3, 1, "", "get_extraction"], [144, 3, 1, "", "get_payoff"], [144, 3, 1, "", "is_commitment_validated"], [144, 3, 1, "", "proposes_commitment"], [144, 3, 1, "", "type"], [144, 3, 1, "", "would_like_to_commit"]], "egttools.games.nonlinear_games.AbstractNPlayerGame": [[145, 2, 1, "", "__annotations__"], [145, 3, 1, "", "__init__"], [145, 3, 1, "", "__new__"], [145, 3, 1, "", "__str__"], [145, 3, 1, "", "calculate_fitness"], [145, 3, 1, "", "calculate_payoffs"], [145, 3, 1, "", "group_size"], [145, 3, 1, "", "nb_group_configurations"], [145, 3, 1, "", "nb_strategies"], [145, 3, 1, "", "payoff"], [145, 3, 1, "", "payoffs"], [145, 3, 1, "", "play"], [145, 3, 1, "", "save_payoffs"], [145, 3, 1, "", "type"], [145, 3, 1, "", "update_payoff"]], "egttools.games.nonlinear_games.CommonPoolResourceDilemma": [[146, 2, 1, "", "__annotations__"], [146, 3, 1, "", "__init__"], [146, 3, 1, "", "__new__"], [146, 3, 1, "", "__str__"], [146, 3, 1, "", "calculate_fitness"], [146, 3, 1, "", "calculate_payoffs"], [146, 3, 1, "", "calculate_total_extraction"], [146, 3, 1, "", "conditional_low"], [146, 3, 1, "", "extraction"], [146, 3, 1, "", "extraction_strategy"], [146, 3, 1, "", "group_size"], [146, 3, 1, "", "high_extraction"], [146, 3, 1, "", "low_extraction"], [146, 3, 1, "", "min_extraction"], [146, 3, 1, "", "nb_group_configurations"], [146, 3, 1, "", "nb_strategies"], [146, 3, 1, "", "payoff"], [146, 3, 1, "", "payoffs"], [146, 3, 1, "", "play"], [146, 3, 1, "", "save_payoffs"], [146, 3, 1, "", "type"], [146, 3, 1, "", "update_payoff"]], "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment": [[147, 2, 1, "", "__annotations__"], [147, 3, 1, "", "__init__"], [147, 3, 1, "", "__new__"], [147, 3, 1, "", "__str__"], [147, 3, 1, "", "add_group_extraction"], [147, 3, 1, "", "calculate_expected_consumption"], [147, 3, 1, "", "calculate_fitness"], [147, 3, 1, "", "calculate_payoffs"], [147, 3, 1, "", "calculate_total_extraction"], [147, 3, 1, "", "check_if_commitment_validated"], [147, 3, 1, "", "get_nb_committed"], [147, 3, 1, "", "group_size"], [147, 3, 1, "", "nb_group_configurations"], [147, 3, 1, "", "nb_strategies"], [147, 3, 1, "", "payoff"], [147, 3, 1, "", "payoffs"], [147, 3, 1, "", "play"], [147, 3, 1, "", "save_payoffs"], [147, 3, 1, "", "type"], [147, 3, 1, "", "update_payoff"]], "egttools.games.nonlinear_games.NPlayerStagHunt": [[148, 2, 1, "", "__annotations__"], [148, 3, 1, "", "__init__"], [148, 3, 1, "", "__new__"], [148, 3, 1, "", "__str__"], [148, 3, 1, "", "calculate_fitness"], [148, 3, 1, "", "calculate_payoffs"], [148, 3, 1, "", "group_size"], [148, 3, 1, "", "nb_group_configurations"], [148, 3, 1, "", "nb_strategies"], [148, 3, 1, "", "payoff"], [148, 3, 1, "", "payoffs"], [148, 3, 1, "", "play"], [148, 3, 1, "", "save_payoffs"], [148, 3, 1, "", "type"], [148, 3, 1, "", "update_payoff"]], "egttools.games.opinion_game": [[152, 1, 1, "", "AbstractNPlayerGame"], [153, 1, 1, "", "OpinionGame"], [154, 4, 1, "", "moment"], [155, 4, 1, "", "sample_simplex"], [156, 4, 1, "", "sigmoid"]], "egttools.games.opinion_game.AbstractNPlayerGame": [[152, 2, 1, "", "__annotations__"], [152, 3, 1, "", "__init__"], [152, 3, 1, "", "__new__"], [152, 3, 1, "", "__str__"], [152, 3, 1, "", "calculate_fitness"], [152, 3, 1, "", "calculate_payoffs"], [152, 3, 1, "", "group_size"], [152, 3, 1, "", "nb_group_configurations"], [152, 3, 1, "", "nb_strategies"], [152, 3, 1, "", "payoff"], [152, 3, 1, "", "payoffs"], [152, 3, 1, "", "play"], [152, 3, 1, "", "save_payoffs"], [152, 3, 1, "", "type"], [152, 3, 1, "", "update_payoff"]], "egttools.games.opinion_game.OpinionGame": [[153, 2, 1, "", "__annotations__"], [153, 3, 1, "", "__init__"], [153, 3, 1, "", "__new__"], [153, 3, 1, "", "__str__"], [153, 3, 1, "", "calculate_fitness"], [153, 3, 1, "", "calculate_payoffs"], [153, 3, 1, "", "group_size"], [153, 3, 1, "", "nb_group_configurations"], [153, 3, 1, "", "nb_strategies"], [153, 3, 1, "", "payoff"], [153, 3, 1, "", "payoffs"], [153, 3, 1, "", "play"], [153, 3, 1, "", "save_payoffs"], [153, 3, 1, "", "type"], [153, 3, 1, "", "update_payoff"]], "egttools.games.pgg": [[158, 1, 1, "", "AbstractNPlayerGame"], [159, 1, 1, "", "PGG"], [160, 1, 1, "", "PGGOneShotStrategy"], [161, 4, 1, "", "sample_simplex"]], "egttools.games.pgg.AbstractNPlayerGame": [[158, 2, 1, "", "__annotations__"], [158, 3, 1, "", "__init__"], [158, 3, 1, "", "__new__"], [158, 3, 1, "", "__str__"], [158, 3, 1, "", "calculate_fitness"], [158, 3, 1, "", "calculate_payoffs"], [158, 3, 1, "", "group_size"], [158, 3, 1, "", "nb_group_configurations"], [158, 3, 1, "", "nb_strategies"], [158, 3, 1, "", "payoff"], [158, 3, 1, "", "payoffs"], [158, 3, 1, "", "play"], [158, 3, 1, "", "save_payoffs"], [158, 3, 1, "", "type"], [158, 3, 1, "", "update_payoff"]], "egttools.games.pgg.PGG": [[159, 2, 1, "", "__annotations__"], [159, 3, 1, "", "__init__"], [159, 3, 1, "", "__new__"], [159, 3, 1, "", "__str__"], [159, 3, 1, "", "calculate_fitness"], [159, 3, 1, "", "calculate_payoffs"], [159, 3, 1, "", "group_size"], [159, 3, 1, "", "nb_group_configurations"], [159, 3, 1, "", "nb_strategies"], [159, 3, 1, "", "payoff"], [159, 3, 1, "", "payoffs"], [159, 3, 1, "", "play"], [159, 3, 1, "", "save_payoffs"], [159, 3, 1, "", "type"], [159, 3, 1, "", "update_payoff"]], "egttools.games.pgg.PGGOneShotStrategy": [[160, 2, 1, "", "__annotations__"], [160, 3, 1, "", "__init__"], [160, 3, 1, "", "get_action"], [160, 5, 1, "", "type"]], "egttools.helpers": [[163, 0, 0, "-", "vectorized"]], "egttools.helpers.vectorized": [[164, 4, 1, "", "barycentric_to_xy_coordinates"], [165, 4, 1, "", "cpp_vectorized_replicator_equation_n_player"], [166, 4, 1, "", "replicator_equation_n_player"], [167, 4, 1, "", "vectorized_barycentric_to_xy_coordinates"], [168, 4, 1, "", "vectorized_replicator_equation"], [169, 4, 1, "", "vectorized_replicator_equation_n_player"]], "egttools.numerical": [[173, 1, 1, "", "GeneralPopulationEvolver"], [174, 1, 1, "", "NetworkEvolver"], [175, 1, 1, "", "PairwiseComparisonNumerical"], [176, 0, 0, "-", "numerical_"], [192, 0, 0, "-", "structure"]], "egttools.numerical.GeneralPopulationEvolver": [[173, 2, 1, "", "__annotations__"], [173, 3, 1, "", "__init__"], [173, 3, 1, "", "__new__"], [173, 3, 1, "", "evolve"], [173, 3, 1, "", "run"], [173, 3, 1, "", "structure"]], "egttools.numerical.NetworkEvolver": [[174, 2, 1, "", "__annotations__"], [174, 3, 1, "", "__init__"], [174, 3, 1, "", "__new__"], [174, 3, 1, "", "estimate_time_dependent_average_gradients_of_selection"], [174, 3, 1, "", "estimate_time_independent_average_gradients_of_selection"], [174, 3, 1, "", "evolve"], [174, 3, 1, "", "run"]], "egttools.numerical.PairwiseComparisonNumerical": [[175, 2, 1, "", "__annotations__"], [175, 3, 1, "", "__init__"], [175, 3, 1, "", "__new__"], [175, 5, 1, "", "cache_size"], [175, 3, 1, "", "estimate_fixation_probability"], [175, 3, 1, "", "estimate_stationary_distribution"], [175, 3, 1, "", "estimate_stationary_distribution_sparse"], [175, 3, 1, "", "estimate_strategy_distribution"], [175, 3, 1, "", "evolve"], [175, 5, 1, "", "nb_states"], [175, 5, 1, "", "nb_strategies"], [175, 5, 1, "", "payoffs"], [175, 5, 1, "", "pop_size"], [175, 3, 1, "", "run"], [175, 3, 1, "", "run_with_mutation"], [175, 3, 1, "", "run_without_mutation"]], "egttools.numerical.numerical_": [[177, 1, 1, "", "GeneralPopulationEvolver"], [178, 1, 1, "", "NetworkEvolver"], [179, 1, 1, "", "PairwiseComparison"], [180, 1, 1, "", "PairwiseComparisonNumerical"], [181, 4, 1, "", "calculate_nb_states"], [182, 4, 1, "", "calculate_state"], [183, 4, 1, "", "calculate_strategies_distribution"], [184, 4, 1, "", "is_blas_lapack_enabled"], [185, 4, 1, "", "is_openmp_enabled"], [186, 4, 1, "", "replicator_equation"], [187, 4, 1, "", "replicator_equation_n_player"], [188, 4, 1, "", "sample_simplex"], [189, 4, 1, "", "sample_simplex_directly"], [190, 4, 1, "", "sample_unit_simplex"], [191, 4, 1, "", "vectorized_replicator_equation_n_player"]], "egttools.numerical.numerical_.GeneralPopulationEvolver": [[177, 2, 1, "", "__annotations__"], [177, 3, 1, "", "__init__"], [177, 3, 1, "", "__new__"], [177, 3, 1, "", "evolve"], [177, 3, 1, "", "run"], [177, 3, 1, "", "structure"]], "egttools.numerical.numerical_.NetworkEvolver": [[178, 2, 1, "", "__annotations__"], [178, 3, 1, "", "__init__"], [178, 3, 1, "", "__new__"], [178, 3, 1, "", "estimate_time_dependent_average_gradients_of_selection"], [178, 3, 1, "", "estimate_time_independent_average_gradients_of_selection"], [178, 3, 1, "", "evolve"], [178, 3, 1, "", "run"]], "egttools.numerical.numerical_.PairwiseComparison": [[179, 2, 1, "", "__annotations__"], [179, 3, 1, "", "__init__"], [179, 3, 1, "", "__new__"], [179, 3, 1, "", "calculate_fixation_probability"], [179, 3, 1, "", "calculate_gradient_of_selection"], [179, 3, 1, "", "calculate_transition_and_fixation_matrix_sml"], [179, 3, 1, "", "calculate_transition_matrix"], [179, 3, 1, "", "game"], [179, 3, 1, "", "nb_states"], [179, 3, 1, "", "nb_strategies"], [179, 3, 1, "", "population_size"], [179, 3, 1, "", "pre_calculate_edge_fitnesses"], [179, 3, 1, "", "update_population_size"]], "egttools.numerical.numerical_.PairwiseComparisonNumerical": [[180, 2, 1, "", "__annotations__"], [180, 3, 1, "", "__init__"], [180, 3, 1, "", "__new__"], [180, 5, 1, "", "cache_size"], [180, 3, 1, "", "estimate_fixation_probability"], [180, 3, 1, "", "estimate_stationary_distribution"], [180, 3, 1, "", "estimate_stationary_distribution_sparse"], [180, 3, 1, "", "estimate_strategy_distribution"], [180, 3, 1, "", "evolve"], [180, 5, 1, "", "nb_states"], [180, 5, 1, "", "nb_strategies"], [180, 5, 1, "", "payoffs"], [180, 5, 1, "", "pop_size"], [180, 3, 1, "", "run"], [180, 3, 1, "", "run_with_mutation"], [180, 3, 1, "", "run_without_mutation"]], "egttools.numerical.structure": [[193, 1, 1, "", "AbstractStructure"], [194, 1, 1, "", "Network"], [195, 1, 1, "", "NetworkGroup"], [196, 1, 1, "", "NetworkGroupSync"], [197, 1, 1, "", "NetworkSync"], [198, 0, 0, "-", "factories"]], "egttools.numerical.structure.AbstractStructure": [[193, 2, 1, "", "__annotations__"], [193, 3, 1, "", "__init__"], [193, 3, 1, "", "__new__"], [193, 3, 1, "", "initialize"], [193, 3, 1, "", "mean_population_state"], [193, 3, 1, "", "nb_strategies"], [193, 3, 1, "", "update_population"]], "egttools.numerical.structure.Network": [[194, 2, 1, "", "__annotations__"], [194, 3, 1, "", "__init__"], [194, 3, 1, "", "__new__"], [194, 3, 1, "", "calculate_average_gradient_of_selection"], [194, 3, 1, "", "calculate_average_gradient_of_selection_and_update_population"], [194, 3, 1, "", "calculate_fitness"], [194, 3, 1, "", "game"], [194, 3, 1, "", "initialize"], [194, 3, 1, "", "initialize_state"], [194, 3, 1, "", "mean_population_state"], [194, 3, 1, "", "nb_strategies"], [194, 3, 1, "", "network"], [194, 3, 1, "", "population_size"], [194, 3, 1, "", "population_strategies"], [194, 3, 1, "", "update_node"], [194, 3, 1, "", "update_population"]], "egttools.numerical.structure.NetworkGroup": [[195, 2, 1, "", "__annotations__"], [195, 3, 1, "", "__init__"], [195, 3, 1, "", "__new__"], [195, 3, 1, "", "calculate_average_gradient_of_selection"], [195, 3, 1, "", "calculate_average_gradient_of_selection_and_update_population"], [195, 3, 1, "", "calculate_fitness"], [195, 3, 1, "", "calculate_game_payoff"], [195, 3, 1, "", "game"], [195, 3, 1, "", "initialize"], [195, 3, 1, "", "initialize_state"], [195, 3, 1, "", "mean_population_state"], [195, 3, 1, "", "nb_strategies"], [195, 3, 1, "", "network"], [195, 3, 1, "", "population_size"], [195, 3, 1, "", "population_strategies"], [195, 3, 1, "", "update_node"], [195, 3, 1, "", "update_population"]], "egttools.numerical.structure.NetworkGroupSync": [[196, 2, 1, "", "__annotations__"], [196, 3, 1, "", "__init__"], [196, 3, 1, "", "__new__"], [196, 3, 1, "", "calculate_average_gradient_of_selection"], [196, 3, 1, "", "calculate_average_gradient_of_selection_and_update_population"], [196, 3, 1, "", "calculate_fitness"], [196, 3, 1, "", "calculate_game_payoff"], [196, 3, 1, "", "game"], [196, 3, 1, "", "initialize"], [196, 3, 1, "", "initialize_state"], [196, 3, 1, "", "mean_population_state"], [196, 3, 1, "", "nb_strategies"], [196, 3, 1, "", "network"], [196, 3, 1, "", "population_size"], [196, 3, 1, "", "population_strategies"], [196, 3, 1, "", "update_node"], [196, 3, 1, "", "update_population"]], "egttools.numerical.structure.NetworkSync": [[197, 2, 1, "", "__annotations__"], [197, 3, 1, "", "__init__"], [197, 3, 1, "", "__new__"], [197, 3, 1, "", "calculate_average_gradient_of_selection"], [197, 3, 1, "", "calculate_average_gradient_of_selection_and_update_population"], [197, 3, 1, "", "calculate_fitness"], [197, 3, 1, "", "game"], [197, 3, 1, "", "initialize"], [197, 3, 1, "", "initialize_state"], [197, 3, 1, "", "mean_population_state"], [197, 3, 1, "", "nb_strategies"], [197, 3, 1, "", "network"], [197, 3, 1, "", "population_size"], [197, 3, 1, "", "population_strategies"], [197, 3, 1, "", "update_node"], [197, 3, 1, "", "update_population"]], "egttools.numerical.structure.factories": [[199, 1, 1, "", "AbstractSpatialGame"], [200, 1, 1, "", "Network"], [201, 1, 1, "", "NetworkGroup"], [202, 1, 1, "", "NetworkGroupSync"], [203, 1, 1, "", "NetworkSync"], [204, 4, 1, "", "network_factory"], [205, 4, 1, "", "network_group_factory"], [206, 4, 1, "", "network_group_sync_factory"], [207, 4, 1, "", "network_sync_factory"]], "egttools.numerical.structure.factories.AbstractSpatialGame": [[199, 2, 1, "", "__annotations__"], [199, 3, 1, "", "__init__"], [199, 3, 1, "", "__new__"], [199, 3, 1, "", "__str__"], [199, 3, 1, "", "calculate_fitness"], [199, 3, 1, "", "nb_strategies"], [199, 3, 1, "", "type"]], "egttools.numerical.structure.factories.Network": [[200, 2, 1, "", "__annotations__"], [200, 3, 1, "", "__init__"], [200, 3, 1, "", "__new__"], [200, 3, 1, "", "calculate_average_gradient_of_selection"], [200, 3, 1, "", "calculate_average_gradient_of_selection_and_update_population"], [200, 3, 1, "", "calculate_fitness"], [200, 3, 1, "", "game"], [200, 3, 1, "", "initialize"], [200, 3, 1, "", "initialize_state"], [200, 3, 1, "", "mean_population_state"], [200, 3, 1, "", "nb_strategies"], [200, 3, 1, "", "network"], [200, 3, 1, "", "population_size"], [200, 3, 1, "", "population_strategies"], [200, 3, 1, "", "update_node"], [200, 3, 1, "", "update_population"]], "egttools.numerical.structure.factories.NetworkGroup": [[201, 2, 1, "", "__annotations__"], [201, 3, 1, "", "__init__"], [201, 3, 1, "", "__new__"], [201, 3, 1, "", "calculate_average_gradient_of_selection"], [201, 3, 1, "", "calculate_average_gradient_of_selection_and_update_population"], [201, 3, 1, "", "calculate_fitness"], [201, 3, 1, "", "calculate_game_payoff"], [201, 3, 1, "", "game"], [201, 3, 1, "", "initialize"], [201, 3, 1, "", "initialize_state"], [201, 3, 1, "", "mean_population_state"], [201, 3, 1, "", "nb_strategies"], [201, 3, 1, "", "network"], [201, 3, 1, "", "population_size"], [201, 3, 1, "", "population_strategies"], [201, 3, 1, "", "update_node"], [201, 3, 1, "", "update_population"]], "egttools.numerical.structure.factories.NetworkGroupSync": [[202, 2, 1, "", "__annotations__"], [202, 3, 1, "", "__init__"], [202, 3, 1, "", "__new__"], [202, 3, 1, "", "calculate_average_gradient_of_selection"], [202, 3, 1, "", "calculate_average_gradient_of_selection_and_update_population"], [202, 3, 1, "", "calculate_fitness"], [202, 3, 1, "", "calculate_game_payoff"], [202, 3, 1, "", "game"], [202, 3, 1, "", "initialize"], [202, 3, 1, "", "initialize_state"], [202, 3, 1, "", "mean_population_state"], [202, 3, 1, "", "nb_strategies"], [202, 3, 1, "", "network"], [202, 3, 1, "", "population_size"], [202, 3, 1, "", "population_strategies"], [202, 3, 1, "", "update_node"], [202, 3, 1, "", "update_population"]], "egttools.numerical.structure.factories.NetworkSync": [[203, 2, 1, "", "__annotations__"], [203, 3, 1, "", "__init__"], [203, 3, 1, "", "__new__"], [203, 3, 1, "", "calculate_average_gradient_of_selection"], [203, 3, 1, "", "calculate_average_gradient_of_selection_and_update_population"], [203, 3, 1, "", "calculate_fitness"], [203, 3, 1, "", "game"], [203, 3, 1, "", "initialize"], [203, 3, 1, "", "initialize_state"], [203, 3, 1, "", "mean_population_state"], [203, 3, 1, "", "nb_strategies"], [203, 3, 1, "", "network"], [203, 3, 1, "", "population_size"], [203, 3, 1, "", "population_strategies"], [203, 3, 1, "", "update_node"], [203, 3, 1, "", "update_population"]], "egttools.plotting": [[209, 1, 1, "", "Simplex2D"], [210, 4, 1, "", "draw_invasion_diagram"], [211, 0, 0, "-", "helpers"], [227, 0, 0, "-", "indicators"], [232, 4, 1, "", "plot_gradient"], [233, 4, 1, "", "plot_gradients"], [234, 4, 1, "", "plot_pairwise_comparison_rule_dynamics_in_simplex"], [235, 4, 1, "", "plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots"], [236, 4, 1, "", "plot_replicator_dynamics_in_simplex"], [237, 0, 0, "-", "simplex2d"], [251, 0, 0, "-", "simplified"]], "egttools.plotting.Simplex2D": [[209, 2, 1, "", "__annotations__"], [209, 3, 1, "", "__init__"], [209, 3, 1, "", "add_axis"], [209, 3, 1, "", "add_colorbar"], [209, 3, 1, "", "add_edges_with_random_drift"], [209, 3, 1, "", "add_vertex_labels"], [209, 3, 1, "", "apply_simplex_boundaries_to_gradients"], [209, 2, 1, "", "corners"], [209, 3, 1, "", "draw_gradients"], [209, 3, 1, "", "draw_scatter_shadow"], [209, 3, 1, "", "draw_stationary_distribution"], [209, 3, 1, "", "draw_stationary_points"], [209, 3, 1, "", "draw_trajectories"], [209, 3, 1, "", "draw_trajectory_from_points"], [209, 3, 1, "", "draw_trajectory_from_roots"], [209, 3, 1, "", "draw_trajectory_from_vector"], [209, 3, 1, "", "draw_triangle"], [209, 3, 1, "", "get_figure_and_axis"], [209, 2, 1, "", "refiner"], [209, 2, 1, "", "side_slope"], [209, 2, 1, "", "top_corner"], [209, 2, 1, "", "triangle"], [209, 2, 1, "", "trimesh"]], "egttools.plotting.helpers": [[212, 2, 1, "", "NDArray"], [213, 4, 1, "", "add_arrow"], [214, 4, 1, "", "barycentric_to_xy_coordinates"], [215, 4, 1, "", "calculate_nb_states"], [216, 4, 1, "", "calculate_stability"], [217, 4, 1, "", "calculate_stationary_points"], [218, 4, 1, "", "check_if_point_in_unit_simplex"], [219, 4, 1, "", "find_roots_in_discrete_barycentric_coordinates"], [220, 4, 1, "", "find_where_point_is_in_simplex"], [221, 4, 1, "", "perturb_state"], [222, 4, 1, "", "perturb_state_discrete"], [223, 4, 1, "", "root"], [224, 4, 1, "", "sample_simplex"], [225, 4, 1, "", "simplex_iterator"], [226, 4, 1, "", "xy_to_barycentric_coordinates"]], "egttools.plotting.indicators": [[228, 1, 1, "", "AutoMinorLocator"], [229, 4, 1, "", "draw_invasion_diagram"], [230, 4, 1, "", "plot_gradient"], [231, 4, 1, "", "plot_gradients"]], "egttools.plotting.indicators.AutoMinorLocator": [[228, 2, 1, "", "MAXTICKS"], [228, 2, 1, "", "__annotations__"], [228, 3, 1, "", "__call__"], [228, 3, 1, "", "__init__"], [228, 2, 1, "", "axis"], [228, 3, 1, "", "create_dummy_axis"], [228, 3, 1, "", "nonsingular"], [228, 3, 1, "", "raise_if_exceeds"], [228, 3, 1, "", "set_axis"], [228, 3, 1, "", "set_params"], [228, 3, 1, "", "tick_values"], [228, 3, 1, "", "view_limits"]], "egttools.plotting.simplex2d": [[238, 1, 1, "", "Circle"], [239, 1, 1, "", "Simplex2D"], [240, 1, 1, "", "TypeVar"], [241, 4, 1, "", "add_arrow"], [242, 4, 1, "", "barycentric_to_xy_coordinates"], [243, 4, 1, "", "calculate_nb_states"], [244, 4, 1, "", "find_where_point_is_in_simplex"], [245, 4, 1, "", "odeint"], [246, 4, 1, "", "perturb_state"], [247, 4, 1, "", "perturb_state_discrete"], [248, 4, 1, "", "sample_simplex"], [249, 4, 1, "", "sample_unit_simplex"], [250, 4, 1, "", "xy_to_barycentric_coordinates"]], "egttools.plotting.simplex2d.Circle": [[238, 2, 1, "", "__annotations__"], [238, 3, 1, "", "__init__"], [238, 3, 1, "", "__init_subclass__"], [238, 3, 1, "", "__str__"], [238, 3, 1, "", "add_callback"], [238, 5, 1, "", "angle"], [238, 5, 1, "", "axes"], [238, 5, 1, "", "center"], [238, 3, 1, "", "contains"], [238, 3, 1, "", "contains_point"], [238, 3, 1, "", "contains_points"], [238, 3, 1, "", "convert_xunits"], [238, 3, 1, "", "convert_yunits"], [238, 3, 1, "", "draw"], [238, 5, 1, "", "figure"], [238, 5, 1, "", "fill"], [238, 3, 1, "", "findobj"], [238, 3, 1, "", "format_cursor_data"], [238, 3, 1, "", "get_aa"], [238, 3, 1, "", "get_agg_filter"], [238, 3, 1, "", "get_alpha"], [238, 3, 1, "", "get_angle"], [238, 3, 1, "", "get_animated"], [238, 3, 1, "", "get_antialiased"], [238, 3, 1, "", "get_capstyle"], [238, 3, 1, "", "get_center"], [238, 3, 1, "", "get_children"], [238, 3, 1, "", "get_clip_box"], [238, 3, 1, "", "get_clip_on"], [238, 3, 1, "", "get_clip_path"], [238, 3, 1, "", "get_co_vertices"], [238, 3, 1, "", "get_corners"], [238, 3, 1, "", "get_cursor_data"], [238, 3, 1, "", "get_data_transform"], [238, 3, 1, "", "get_ec"], [238, 3, 1, "", "get_edgecolor"], [238, 3, 1, "", "get_extents"], [238, 3, 1, "", "get_facecolor"], [238, 3, 1, "", "get_fc"], [238, 3, 1, "", "get_figure"], [238, 3, 1, "", "get_fill"], [238, 3, 1, "", "get_gid"], [238, 3, 1, "", "get_hatch"], [238, 3, 1, "", "get_hatch_linewidth"], [238, 3, 1, "", "get_height"], [238, 3, 1, "", "get_in_layout"], [238, 3, 1, "", "get_joinstyle"], [238, 3, 1, "", "get_label"], [238, 3, 1, "", "get_linestyle"], [238, 3, 1, "", "get_linewidth"], [238, 3, 1, "", "get_ls"], [238, 3, 1, "", "get_lw"], [238, 3, 1, "", "get_mouseover"], [238, 3, 1, "", "get_patch_transform"], [238, 3, 1, "", "get_path"], [238, 3, 1, "", "get_path_effects"], [238, 3, 1, "", "get_picker"], [238, 3, 1, "", "get_radius"], [238, 3, 1, "", "get_rasterized"], [238, 3, 1, "", "get_sketch_params"], [238, 3, 1, "", "get_snap"], [238, 3, 1, "", "get_tightbbox"], [238, 3, 1, "", "get_transform"], [238, 3, 1, "", "get_transformed_clip_path_and_affine"], [238, 3, 1, "", "get_url"], [238, 3, 1, "", "get_vertices"], [238, 3, 1, "", "get_verts"], [238, 3, 1, "", "get_visible"], [238, 3, 1, "", "get_width"], [238, 3, 1, "", "get_window_extent"], [238, 3, 1, "", "get_zorder"], [238, 3, 1, "", "have_units"], [238, 5, 1, "", "height"], [238, 3, 1, "", "is_transform_set"], [238, 5, 1, "", "mouseover"], [238, 3, 1, "", "pchanged"], [238, 3, 1, "", "pick"], [238, 3, 1, "", "pickable"], [238, 3, 1, "", "properties"], [238, 5, 1, "", "radius"], [238, 3, 1, "", "remove"], [238, 3, 1, "", "remove_callback"], [238, 3, 1, "", "set"], [238, 3, 1, "", "set_aa"], [238, 3, 1, "", "set_agg_filter"], [238, 3, 1, "", "set_alpha"], [238, 3, 1, "", "set_angle"], [238, 3, 1, "", "set_animated"], [238, 3, 1, "", "set_antialiased"], [238, 3, 1, "", "set_capstyle"], [238, 3, 1, "", "set_center"], [238, 3, 1, "", "set_clip_box"], [238, 3, 1, "", "set_clip_on"], [238, 3, 1, "", "set_clip_path"], [238, 3, 1, "", "set_color"], [238, 3, 1, "", "set_ec"], [238, 3, 1, "", "set_edgecolor"], [238, 3, 1, "", "set_facecolor"], [238, 3, 1, "", "set_fc"], [238, 3, 1, "", "set_figure"], [238, 3, 1, "", "set_fill"], [238, 3, 1, "", "set_gid"], [238, 3, 1, "", "set_hatch"], [238, 3, 1, "", "set_hatch_linewidth"], [238, 3, 1, "", "set_height"], [238, 3, 1, "", "set_in_layout"], [238, 3, 1, "", "set_joinstyle"], [238, 3, 1, "", "set_label"], [238, 3, 1, "", "set_linestyle"], [238, 3, 1, "", "set_linewidth"], [238, 3, 1, "", "set_ls"], [238, 3, 1, "", "set_lw"], [238, 3, 1, "", "set_mouseover"], [238, 3, 1, "", "set_path_effects"], [238, 3, 1, "", "set_picker"], [238, 3, 1, "", "set_radius"], [238, 3, 1, "", "set_rasterized"], [238, 3, 1, "", "set_sketch_params"], [238, 3, 1, "", "set_snap"], [238, 3, 1, "", "set_transform"], [238, 3, 1, "", "set_url"], [238, 3, 1, "", "set_visible"], [238, 3, 1, "", "set_width"], [238, 3, 1, "", "set_zorder"], [238, 5, 1, "", "stale"], [238, 5, 1, "", "sticky_edges"], [238, 3, 1, "", "update"], [238, 3, 1, "", "update_from"], [238, 5, 1, "", "width"], [238, 2, 1, "", "zorder"]], "egttools.plotting.simplex2d.Simplex2D": [[239, 2, 1, "", "__annotations__"], [239, 3, 1, "", "__init__"], [239, 3, 1, "", "add_axis"], [239, 3, 1, "", "add_colorbar"], [239, 3, 1, "", "add_edges_with_random_drift"], [239, 3, 1, "", "add_vertex_labels"], [239, 3, 1, "", "apply_simplex_boundaries_to_gradients"], [239, 2, 1, "", "corners"], [239, 3, 1, "", "draw_gradients"], [239, 3, 1, "", "draw_scatter_shadow"], [239, 3, 1, "", "draw_stationary_distribution"], [239, 3, 1, "", "draw_stationary_points"], [239, 3, 1, "", "draw_trajectories"], [239, 3, 1, "", "draw_trajectory_from_points"], [239, 3, 1, "", "draw_trajectory_from_roots"], [239, 3, 1, "", "draw_trajectory_from_vector"], [239, 3, 1, "", "draw_triangle"], [239, 3, 1, "", "get_figure_and_axis"], [239, 2, 1, "", "refiner"], [239, 2, 1, "", "side_slope"], [239, 2, 1, "", "top_corner"], [239, 2, 1, "", "triangle"], [239, 2, 1, "", "trimesh"]], "egttools.plotting.simplex2d.TypeVar": [[240, 2, 1, "", "__annotations__"], [240, 2, 1, "", "__bound__"], [240, 2, 1, "", "__constraints__"], [240, 2, 1, "", "__contravariant__"], [240, 3, 1, "", "__copy__"], [240, 2, 1, "", "__covariant__"], [240, 3, 1, "", "__deepcopy__"], [240, 3, 1, "", "__init__"], [240, 3, 1, "", "__init_subclass__"], [240, 2, 1, "", "__name__"], [240, 3, 1, "", "__or__"], [240, 3, 1, "", "__reduce__"], [240, 3, 1, "", "__repr__"], [240, 3, 1, "", "__ror__"], [240, 2, 1, "", "__slots__"]], "egttools.plotting.simplified": [[252, 1, 1, "", "AbstractGame"], [253, 1, 1, "", "Matrix2PlayerGameHolder"], [254, 1, 1, "", "MatrixNPlayerGameHolder"], [255, 2, 1, "", "NDArray"], [256, 1, 1, "", "PairwiseComparison"], [257, 1, 1, "", "Simplex2D"], [258, 4, 1, "", "barycentric_to_xy_coordinates"], [259, 4, 1, "", "calculate_nb_states"], [260, 4, 1, "", "calculate_stability"], [261, 4, 1, "", "check_if_there_is_random_drift"], [262, 4, 1, "", "check_replicator_stability_pairwise_games"], [263, 4, 1, "", "find_roots"], [264, 4, 1, "", "find_roots_in_discrete_barycentric_coordinates"], [265, 4, 1, "", "plot_pairwise_comparison_rule_dynamics_in_simplex"], [266, 4, 1, "", "plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots"], [267, 4, 1, "", "plot_replicator_dynamics_in_simplex"], [268, 4, 1, "", "replicator_equation"], [269, 4, 1, "", "replicator_equation_n_player"], [270, 4, 1, "", "vectorized_barycentric_to_xy_coordinates"], [271, 4, 1, "", "vectorized_replicator_equation"], [272, 4, 1, "", "vectorized_replicator_equation_n_player"], [273, 4, 1, "", "xy_to_barycentric_coordinates"]], "egttools.plotting.simplified.AbstractGame": [[252, 2, 1, "", "__annotations__"], [252, 3, 1, "", "__init__"], [252, 3, 1, "", "__new__"], [252, 3, 1, "", "__str__"], [252, 3, 1, "", "calculate_fitness"], [252, 3, 1, "", "calculate_payoffs"], [252, 3, 1, "", "nb_strategies"], [252, 3, 1, "", "payoff"], [252, 3, 1, "", "payoffs"], [252, 3, 1, "", "play"], [252, 3, 1, "", "save_payoffs"], [252, 3, 1, "", "type"]], "egttools.plotting.simplified.Matrix2PlayerGameHolder": [[253, 2, 1, "", "__annotations__"], [253, 3, 1, "", "__init__"], [253, 3, 1, "", "__new__"], [253, 3, 1, "", "__str__"], [253, 3, 1, "", "calculate_fitness"], [253, 3, 1, "", "calculate_payoffs"], [253, 3, 1, "", "nb_strategies"], [253, 3, 1, "", "payoff"], [253, 3, 1, "", "payoffs"], [253, 3, 1, "", "play"], [253, 3, 1, "", "save_payoffs"], [253, 3, 1, "", "type"], [253, 3, 1, "", "update_payoff_matrix"]], "egttools.plotting.simplified.MatrixNPlayerGameHolder": [[254, 2, 1, "", "__annotations__"], [254, 3, 1, "", "__init__"], [254, 3, 1, "", "__new__"], [254, 3, 1, "", "__str__"], [254, 3, 1, "", "calculate_fitness"], [254, 3, 1, "", "calculate_payoffs"], [254, 3, 1, "", "group_size"], [254, 3, 1, "", "nb_group_configurations"], [254, 3, 1, "", "nb_strategies"], [254, 3, 1, "", "payoff"], [254, 3, 1, "", "payoffs"], [254, 3, 1, "", "play"], [254, 3, 1, "", "save_payoffs"], [254, 3, 1, "", "type"], [254, 3, 1, "", "update_payoff_matrix"]], "egttools.plotting.simplified.PairwiseComparison": [[256, 2, 1, "", "__annotations__"], [256, 3, 1, "", "__init__"], [256, 3, 1, "", "__new__"], [256, 3, 1, "", "calculate_fixation_probability"], [256, 3, 1, "", "calculate_gradient_of_selection"], [256, 3, 1, "", "calculate_transition_and_fixation_matrix_sml"], [256, 3, 1, "", "calculate_transition_matrix"], [256, 3, 1, "", "game"], [256, 3, 1, "", "nb_states"], [256, 3, 1, "", "nb_strategies"], [256, 3, 1, "", "population_size"], [256, 3, 1, "", "pre_calculate_edge_fitnesses"], [256, 3, 1, "", "update_population_size"]], "egttools.plotting.simplified.Simplex2D": [[257, 2, 1, "", "__annotations__"], [257, 3, 1, "", "__init__"], [257, 3, 1, "", "add_axis"], [257, 3, 1, "", "add_colorbar"], [257, 3, 1, "", "add_edges_with_random_drift"], [257, 3, 1, "", "add_vertex_labels"], [257, 3, 1, "", "apply_simplex_boundaries_to_gradients"], [257, 2, 1, "", "corners"], [257, 3, 1, "", "draw_gradients"], [257, 3, 1, "", "draw_scatter_shadow"], [257, 3, 1, "", "draw_stationary_distribution"], [257, 3, 1, "", "draw_stationary_points"], [257, 3, 1, "", "draw_trajectories"], [257, 3, 1, "", "draw_trajectory_from_points"], [257, 3, 1, "", "draw_trajectory_from_roots"], [257, 3, 1, "", "draw_trajectory_from_vector"], [257, 3, 1, "", "draw_triangle"], [257, 3, 1, "", "get_figure_and_axis"], [257, 2, 1, "", "refiner"], [257, 2, 1, "", "side_slope"], [257, 2, 1, "", "top_corner"], [257, 2, 1, "", "triangle"], [257, 2, 1, "", "trimesh"]], "egttools.utils": [[278, 1, 1, "", "AbstractGame"], [279, 1, 1, "", "Graph"], [280, 4, 1, "", "calculate_nb_unique_combinations"], [281, 4, 1, "", "calculate_stationary_distribution"], [282, 4, 1, "", "calculate_stationary_distribution_non_hermitian"], [283, 4, 1, "", "combine"], [284, 1, 1, "", "csc_matrix"], [285, 1, 1, "", "csr_matrix"], [286, 4, 1, "", "eigvals"], [287, 4, 1, "", "find_saddle_type_and_gradient_direction"], [288, 4, 1, "", "get_payoff_function"], [289, 4, 1, "", "schur"], [290, 4, 1, "", "transform_graph_to_dict_of_lists"], [291, 4, 1, "", "transform_payoffs_to_pairwise"], [292, 4, 1, "", "warn"]], "egttools.utils.AbstractGame": [[278, 2, 1, "", "__annotations__"], [278, 3, 1, "", "__init__"], [278, 3, 1, "", "__new__"], [278, 3, 1, "", "__str__"], [278, 3, 1, "", "calculate_fitness"], [278, 3, 1, "", "calculate_payoffs"], [278, 3, 1, "", "nb_strategies"], [278, 3, 1, "", "payoff"], [278, 3, 1, "", "payoffs"], [278, 3, 1, "", "play"], [278, 3, 1, "", "save_payoffs"], [278, 3, 1, "", "type"]], "egttools.utils.Graph": [[279, 2, 1, "", "__annotations__"], [279, 3, 1, "", "__contains__"], [279, 3, 1, "", "__getitem__"], [279, 3, 1, "", "__init__"], [279, 3, 1, "", "__iter__"], [279, 3, 1, "", "__len__"], [279, 2, 1, "", "__networkx_backend__"], [279, 3, 1, "", "__str__"], [279, 3, 1, "", "add_edge"], [279, 3, 1, "", "add_edges_from"], [279, 3, 1, "", "add_node"], [279, 3, 1, "", "add_nodes_from"], [279, 3, 1, "", "add_weighted_edges_from"], [279, 5, 1, "", "adj"], [279, 3, 1, "", "adjacency"], [279, 2, 1, "", "adjlist_inner_dict_factory"], [279, 2, 1, "", "adjlist_outer_dict_factory"], [279, 3, 1, "", "clear"], [279, 3, 1, "", "clear_edges"], [279, 3, 1, "", "copy"], [279, 5, 1, "", "degree"], [279, 2, 1, "", "edge_attr_dict_factory"], [279, 3, 1, "", "edge_subgraph"], [279, 5, 1, "", "edges"], [279, 3, 1, "", "get_edge_data"], [279, 2, 1, "", "graph_attr_dict_factory"], [279, 3, 1, "", "has_edge"], [279, 3, 1, "", "has_node"], [279, 3, 1, "", "is_directed"], [279, 3, 1, "", "is_multigraph"], [279, 5, 1, "", "name"], [279, 3, 1, "", "nbunch_iter"], [279, 3, 1, "", "neighbors"], [279, 2, 1, "", "node_attr_dict_factory"], [279, 2, 1, "", "node_dict_factory"], [279, 5, 1, "", "nodes"], [279, 3, 1, "", "number_of_edges"], [279, 3, 1, "", "number_of_nodes"], [279, 3, 1, "", "order"], [279, 3, 1, "", "remove_edge"], [279, 3, 1, "", "remove_edges_from"], [279, 3, 1, "", "remove_node"], [279, 3, 1, "", "remove_nodes_from"], [279, 3, 1, "", "size"], [279, 3, 1, "", "subgraph"], [279, 3, 1, "", "to_directed"], [279, 3, 1, "", "to_directed_class"], [279, 3, 1, "", "to_undirected"], [279, 3, 1, "", "to_undirected_class"], [279, 3, 1, "", "update"]], "egttools.utils.csc_matrix": [[284, 5, 1, "id0", "T"], [284, 3, 1, "", "__abs__"], [284, 3, 1, "", "__add__"], [284, 2, 1, "", "__annotations__"], [284, 2, 1, "", "__array_priority__"], [284, 3, 1, "", "__bool__"], [284, 3, 1, "", "__div__"], [284, 3, 1, "", "__eq__"], [284, 3, 1, "", "__ge__"], [284, 3, 1, "", "__getitem__"], [284, 3, 1, "", "__gt__"], [284, 2, 1, "", "__hash__"], [284, 3, 1, "", "__iadd__"], [284, 3, 1, "", "__idiv__"], [284, 3, 1, "", "__imul__"], [284, 3, 1, "", "__init__"], [284, 3, 1, "", "__isub__"], [284, 3, 1, "", "__iter__"], [284, 3, 1, "", "__itruediv__"], [284, 3, 1, "", "__le__"], [284, 3, 1, "", "__len__"], [284, 3, 1, "", "__lt__"], [284, 3, 1, "", "__matmul__"], [284, 3, 1, "", "__mul__"], [284, 3, 1, "", "__ne__"], [284, 3, 1, "", "__neg__"], [284, 3, 1, "", "__nonzero__"], [284, 3, 1, "", "__pow__"], [284, 3, 1, "", "__radd__"], [284, 3, 1, "", "__rdiv__"], [284, 3, 1, "", "__repr__"], [284, 3, 1, "", "__rmatmul__"], [284, 3, 1, "", "__rmul__"], [284, 3, 1, "", "__round__"], [284, 3, 1, "", "__rsub__"], [284, 3, 1, "", "__rtruediv__"], [284, 3, 1, "", "__setitem__"], [284, 3, 1, "", "__str__"], [284, 3, 1, "", "__sub__"], [284, 3, 1, "", "__truediv__"], [284, 3, 1, "", "arcsin"], [284, 3, 1, "", "arcsinh"], [284, 3, 1, "", "arctan"], [284, 3, 1, "", "arctanh"], [284, 3, 1, "", "argmax"], [284, 3, 1, "", "argmin"], [284, 3, 1, "", "asformat"], [284, 3, 1, "", "asfptype"], [284, 3, 1, "", "astype"], [284, 3, 1, "", "ceil"], [284, 3, 1, "", "check_format"], [284, 3, 1, "", "conj"], [284, 3, 1, "", "conjugate"], [284, 3, 1, "", "copy"], [284, 3, 1, "", "count_nonzero"], [284, 2, 1, "", "data"], [284, 3, 1, "", "deg2rad"], [284, 3, 1, "", "diagonal"], [284, 3, 1, "", "dot"], [284, 5, 1, "id1", "dtype"], [284, 3, 1, "", "eliminate_zeros"], [284, 3, 1, "", "expm1"], [284, 3, 1, "", "floor"], [284, 5, 1, "", "format"], [284, 3, 1, "", "getH"], [284, 3, 1, "", "get_shape"], [284, 3, 1, "", "getcol"], [284, 3, 1, "", "getformat"], [284, 3, 1, "", "getmaxprint"], [284, 3, 1, "", "getnnz"], [284, 3, 1, "", "getrow"], [284, 5, 1, "id2", "has_canonical_format"], [284, 5, 1, "id3", "has_sorted_indices"], [284, 5, 1, "", "imag"], [284, 2, 1, "", "indices"], [284, 2, 1, "", "indptr"], [284, 3, 1, "", "log1p"], [284, 3, 1, "", "max"], [284, 3, 1, "", "maximum"], [284, 3, 1, "", "mean"], [284, 3, 1, "", "min"], [284, 3, 1, "", "minimum"], [284, 3, 1, "", "multiply"], [284, 3, 1, "", "nanmax"], [284, 3, 1, "", "nanmin"], [284, 5, 1, "id4", "ndim"], [284, 5, 1, "id5", "nnz"], [284, 3, 1, "", "nonzero"], [284, 3, 1, "", "power"], [284, 3, 1, "", "prune"], [284, 3, 1, "", "rad2deg"], [284, 5, 1, "", "real"], [284, 3, 1, "", "reshape"], [284, 3, 1, "", "resize"], [284, 3, 1, "", "rint"], [284, 3, 1, "", "set_shape"], [284, 3, 1, "", "setdiag"], [284, 5, 1, "id6", "shape"], [284, 3, 1, "", "sign"], [284, 3, 1, "", "sin"], [284, 3, 1, "", "sinh"], [284, 5, 1, "id7", "size"], [284, 3, 1, "", "sort_indices"], [284, 3, 1, "", "sorted_indices"], [284, 3, 1, "", "sqrt"], [284, 3, 1, "", "sum"], [284, 3, 1, "", "sum_duplicates"], [284, 3, 1, "", "tan"], [284, 3, 1, "", "tanh"], [284, 3, 1, "", "toarray"], [284, 3, 1, "", "tobsr"], [284, 3, 1, "", "tocoo"], [284, 3, 1, "", "tocsc"], [284, 3, 1, "", "tocsr"], [284, 3, 1, "", "todense"], [284, 3, 1, "", "todia"], [284, 3, 1, "", "todok"], [284, 3, 1, "", "tolil"], [284, 3, 1, "", "trace"], [284, 3, 1, "", "transpose"], [284, 3, 1, "", "trunc"]], "egttools.utils.csr_matrix": [[285, 5, 1, "id0", "T"], [285, 3, 1, "", "__abs__"], [285, 3, 1, "", "__add__"], [285, 2, 1, "", "__annotations__"], [285, 2, 1, "", "__array_priority__"], [285, 3, 1, "", "__bool__"], [285, 3, 1, "", "__div__"], [285, 3, 1, "", "__eq__"], [285, 3, 1, "", "__ge__"], [285, 3, 1, "", "__getitem__"], [285, 3, 1, "", "__gt__"], [285, 2, 1, "", "__hash__"], [285, 3, 1, "", "__iadd__"], [285, 3, 1, "", "__idiv__"], [285, 3, 1, "", "__imul__"], [285, 3, 1, "", "__init__"], [285, 3, 1, "", "__isub__"], [285, 3, 1, "", "__iter__"], [285, 3, 1, "", "__itruediv__"], [285, 3, 1, "", "__le__"], [285, 3, 1, "", "__len__"], [285, 3, 1, "", "__lt__"], [285, 3, 1, "", "__matmul__"], [285, 3, 1, "", "__mul__"], [285, 3, 1, "", "__ne__"], [285, 3, 1, "", "__neg__"], [285, 3, 1, "", "__nonzero__"], [285, 3, 1, "", "__pow__"], [285, 3, 1, "", "__radd__"], [285, 3, 1, "", "__rdiv__"], [285, 3, 1, "", "__repr__"], [285, 3, 1, "", "__rmatmul__"], [285, 3, 1, "", "__rmul__"], [285, 3, 1, "", "__round__"], [285, 3, 1, "", "__rsub__"], [285, 3, 1, "", "__rtruediv__"], [285, 3, 1, "", "__setitem__"], [285, 3, 1, "", "__str__"], [285, 3, 1, "", "__sub__"], [285, 3, 1, "", "__truediv__"], [285, 3, 1, "", "arcsin"], [285, 3, 1, "", "arcsinh"], [285, 3, 1, "", "arctan"], [285, 3, 1, "", "arctanh"], [285, 3, 1, "", "argmax"], [285, 3, 1, "", "argmin"], [285, 3, 1, "", "asformat"], [285, 3, 1, "", "asfptype"], [285, 3, 1, "", "astype"], [285, 3, 1, "", "ceil"], [285, 3, 1, "", "check_format"], [285, 3, 1, "", "conj"], [285, 3, 1, "", "conjugate"], [285, 3, 1, "", "copy"], [285, 3, 1, "", "count_nonzero"], [285, 2, 1, "", "data"], [285, 3, 1, "", "deg2rad"], [285, 3, 1, "", "diagonal"], [285, 3, 1, "", "dot"], [285, 5, 1, "id1", "dtype"], [285, 3, 1, "", "eliminate_zeros"], [285, 3, 1, "", "expm1"], [285, 3, 1, "", "floor"], [285, 5, 1, "", "format"], [285, 3, 1, "", "getH"], [285, 3, 1, "", "get_shape"], [285, 3, 1, "", "getcol"], [285, 3, 1, "", "getformat"], [285, 3, 1, "", "getmaxprint"], [285, 3, 1, "", "getnnz"], [285, 3, 1, "", "getrow"], [285, 5, 1, "id2", "has_canonical_format"], [285, 5, 1, "id3", "has_sorted_indices"], [285, 5, 1, "", "imag"], [285, 2, 1, "", "indices"], [285, 2, 1, "", "indptr"], [285, 3, 1, "", "log1p"], [285, 3, 1, "", "max"], [285, 3, 1, "", "maximum"], [285, 3, 1, "", "mean"], [285, 3, 1, "", "min"], [285, 3, 1, "", "minimum"], [285, 3, 1, "", "multiply"], [285, 3, 1, "", "nanmax"], [285, 3, 1, "", "nanmin"], [285, 5, 1, "id4", "ndim"], [285, 5, 1, "id5", "nnz"], [285, 3, 1, "", "nonzero"], [285, 3, 1, "", "power"], [285, 3, 1, "", "prune"], [285, 3, 1, "", "rad2deg"], [285, 5, 1, "", "real"], [285, 3, 1, "", "reshape"], [285, 3, 1, "", "resize"], [285, 3, 1, "", "rint"], [285, 3, 1, "", "set_shape"], [285, 3, 1, "", "setdiag"], [285, 5, 1, "id6", "shape"], [285, 3, 1, "", "sign"], [285, 3, 1, "", "sin"], [285, 3, 1, "", "sinh"], [285, 5, 1, "id7", "size"], [285, 3, 1, "", "sort_indices"], [285, 3, 1, "", "sorted_indices"], [285, 3, 1, "", "sqrt"], [285, 3, 1, "", "sum"], [285, 3, 1, "", "sum_duplicates"], [285, 3, 1, "", "tan"], [285, 3, 1, "", "tanh"], [285, 3, 1, "", "toarray"], [285, 3, 1, "", "tobsr"], [285, 3, 1, "", "tocoo"], [285, 3, 1, "", "tocsc"], [285, 3, 1, "", "tocsr"], [285, 3, 1, "", "todense"], [285, 3, 1, "", "todia"], [285, 3, 1, "", "todok"], [285, 3, 1, "", "tolil"], [285, 3, 1, "", "trace"], [285, 3, 1, "", "transpose"], [285, 3, 1, "", "trunc"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "terms": {"": [10, 12, 31, 77, 83, 84, 113, 118, 119, 120, 121, 123, 131, 132, 139, 145, 146, 147, 148, 152, 158, 165, 191, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 223, 229, 238, 239, 240, 245, 253, 257, 279, 284, 285, 295, 298, 299, 300, 301, 306, 307, 309, 311], "0": [2, 3, 5, 7, 9, 10, 11, 12, 13, 16, 19, 21, 23, 24, 25, 26, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 46, 47, 80, 92, 100, 105, 112, 115, 120, 126, 130, 132, 133, 135, 136, 138, 139, 141, 142, 144, 149, 150, 155, 161, 165, 166, 175, 179, 180, 182, 186, 187, 188, 190, 191, 209, 210, 213, 216, 217, 219, 220, 221, 223, 224, 226, 228, 229, 231, 233, 234, 236, 238, 239, 241, 244, 245, 246, 248, 249, 250, 252, 256, 257, 260, 262, 263, 264, 265, 267, 269, 273, 274, 275, 278, 279, 284, 285, 286, 287, 289, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311], "00001": [210, 229, 299], "0001": [23, 25, 210, 229, 236, 262, 263, 267, 300], "001": [26, 219, 264, 300], "006": 311, "00667": [120, 139], "01": [175, 180, 209, 221, 239, 246, 257, 287, 298, 300, 301], "011909": 311, "02": [295, 300, 301], "020": [120, 139], "03": 295, "03590414": 289, "04": 311, "05": [209, 228, 239, 257, 295, 300, 301], "058301": 311, "06": [31, 223], "07": [25, 209, 216, 217, 234, 236, 239, 257, 260, 263, 265, 267], "08": [22, 26, 261], "0ef21391ac1a": 296, "1": [2, 3, 5, 7, 9, 10, 11, 12, 13, 16, 17, 19, 21, 23, 24, 30, 31, 32, 54, 74, 75, 77, 78, 80, 90, 91, 92, 100, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 165, 166, 175, 179, 180, 182, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 210, 216, 220, 222, 223, 224, 225, 226, 228, 229, 231, 233, 234, 236, 238, 239, 244, 245, 247, 248, 249, 250, 252, 253, 254, 256, 257, 260, 262, 265, 267, 269, 273, 274, 275, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 292, 294, 296, 297, 298, 299, 300, 301, 303, 305, 308, 310, 311], "10": [5, 8, 10, 12, 30, 31, 99, 101, 120, 139, 140, 165, 166, 181, 183, 187, 189, 191, 209, 210, 215, 223, 228, 229, 231, 233, 234, 235, 236, 239, 243, 245, 257, 259, 265, 266, 267, 269, 279, 284, 285, 295, 296, 297, 298, 299, 300, 301, 302, 305, 311], "100": [2, 22, 26, 174, 175, 178, 179, 180, 210, 229, 231, 233, 236, 256, 261, 267, 279, 295, 296, 297, 298, 299, 300, 301, 305, 310], "1000": [173, 174, 175, 177, 178, 180, 194, 195, 196, 197, 200, 201, 202, 203, 209, 219, 228, 239, 257, 264, 279], "10000": [175, 180], "1000000": 298, "1007": 311, "101": [245, 295, 296, 297, 305, 310], "1015648108": 311, "1016": 311, "1038": [120, 139, 311], "10421": [126, 127, 311], "10425": [126, 127, 311], "105": [116, 311], "1073": 311, "108": [126, 127, 311], "1098": 311, "11": [8, 10, 31, 99, 140, 181, 215, 223, 243, 259, 279, 284, 285, 295, 296, 297, 298, 299, 300], "110": 279, "1103": 311, "1126": 311, "118": 311, "12": [21, 210, 217, 218, 219, 229, 236, 245, 264, 267, 295, 296, 297, 298, 300], "128": 238, "13": [279, 295, 296, 297, 298, 300, 305], "13043109905998158313ul": 105, "131": 311, "14": [210, 229, 295, 296, 297, 298, 300, 309], "14275": 311, "1429": [31, 223], "15": [8, 10, 12, 99, 140, 181, 209, 210, 213, 215, 229, 231, 233, 239, 241, 243, 257, 259, 279, 284, 285, 289, 295, 297, 298, 300, 301, 309], "150": [210, 229, 299], "156ul": 105, "1588361": [31, 223], "16": [209, 238, 239, 257, 295, 296, 297, 298, 300], "1655": 311, "17": [295, 298, 300, 303], "17ul": 105, "18": [10, 12, 32, 190, 210, 229, 249, 275, 284, 285, 295, 298, 300], "18444473444759240704ul": 105, "1898": 311, "19": [295, 298, 300], "1975": 311, "1980": [31, 223], "1995": [31, 223], "1d": [5, 9, 20, 25, 30, 32, 100, 101, 135, 141, 149, 166, 182, 183, 186, 187, 190, 249, 263, 269, 275], "1e": [21, 22, 25, 26, 209, 210, 216, 217, 218, 219, 229, 234, 236, 239, 257, 260, 261, 263, 264, 265, 267, 289, 295, 296, 297, 298, 300], "1e3": 298, "1e6": 298, "1j": [31, 223], "1px": 238, "2": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 24, 29, 30, 31, 32, 78, 85, 86, 99, 100, 112, 115, 116, 120, 121, 124, 128, 130, 132, 133, 135, 138, 139, 140, 141, 149, 153, 159, 164, 166, 167, 168, 169, 181, 182, 186, 187, 189, 190, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 214, 215, 217, 220, 223, 225, 226, 228, 229, 231, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 249, 250, 252, 253, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289, 291, 294, 296, 297, 298, 299, 304, 306, 308, 311], "20": [209, 231, 233, 239, 257, 279, 295, 296, 297, 298, 300], "200": [174, 175, 178, 180], "2000": [173, 177, 210, 229], "2005": 311, "2006": [31, 223, 311], "2008": [116, 117, 311], "2009": 311, "2010": 311, "2011": [126, 127, 311], "2012": 311, "2017": 311, "2020": 302, "2021": [120, 139], "21": [295, 298, 300], "214": 297, "21822": 311, "22": [298, 300], "225": 279, "22839825": 289, "2291": [116, 311], "2294": [116, 311], "23": 298, "24": [186, 298], "25": [2, 32, 179, 190, 245, 249, 256, 275, 298], "251": 311, "26": [126, 127, 298, 311], "262": 311, "27": 298, "270": [209, 239, 257], "276": 311, "28976765": 289, "29ul": 105, "2d": [5, 20, 30, 165, 166, 186, 187, 191, 220, 234, 236, 244, 265, 267, 269, 279, 294, 310], "2nd": 311, "2pm": 279, "2x2": 289, "3": [2, 5, 8, 9, 10, 11, 12, 13, 16, 24, 25, 30, 31, 32, 99, 100, 101, 115, 116, 117, 118, 132, 133, 135, 136, 140, 141, 142, 146, 149, 150, 155, 161, 164, 165, 166, 167, 168, 169, 175, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 209, 214, 215, 223, 224, 225, 228, 231, 233, 238, 239, 242, 243, 248, 249, 256, 257, 258, 259, 263, 269, 270, 271, 272, 274, 275, 279, 284, 285, 286, 289, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 311], "30": [32, 190, 209, 239, 249, 257, 275, 295, 298, 300, 301, 305], "300": [209, 239, 257, 300, 301], "31178921": 289, "312ul": 105, "315": 311, "31ul": 105, "321": 311, "32378589j": 289, "32948354": 289, "33": [175, 180], "33079564": 289, "34": [175, 180], "342": 279, "3687125": 302, "37ul": 105, "382871": 279, "387": 311, "39": [295, 299], "3972649": 279, "3d": 310, "3e": 298, "4": [3, 7, 8, 9, 10, 12, 19, 25, 99, 100, 115, 132, 133, 135, 140, 141, 149, 181, 182, 186, 189, 209, 210, 215, 228, 229, 230, 231, 232, 233, 239, 243, 257, 259, 263, 279, 284, 285, 295, 296, 297, 298, 299, 300, 301, 305, 310, 311], "4000": [210, 229], "42440458": 289, "42590089": 289, "43829436": 289, "43ul": 105, "4419": 311, "4641280a": 311, "484": 240, "49012e": 245, "49063704": 289, "5": [2, 3, 5, 7, 10, 12, 19, 30, 31, 166, 179, 187, 189, 209, 210, 217, 223, 228, 229, 230, 231, 232, 233, 238, 239, 245, 256, 257, 269, 279, 284, 285, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 310, 311], "50": [2, 165, 174, 175, 178, 179, 180, 191, 209, 239, 256, 257, 298, 310], "500": [173, 177], "5000": [175, 180], "5151": 300, "51937378j": 289, "5281": 302, "52839428": 289, "56192146j": 289, "57": [32, 190, 249, 275], "59877807": 289, "5pm": 279, "5th": [73, 89], "6": [9, 10, 100, 135, 141, 149, 182, 186, 209, 239, 257, 279, 284, 285, 295, 296, 297, 298, 299, 300, 301, 305, 311], "600": 299, "60156188": 289, "6148914691236517205ul": 105, "6364136223846793005ul": 105, "64": 309, "64ul": 105, "65896708": 289, "687": 296, "691": 311, "7": [10, 11, 12, 24, 25, 116, 216, 231, 233, 234, 260, 263, 265, 279, 284, 285, 286, 295, 296, 297, 298, 299, 300, 301, 303, 305, 311], "70": [32, 190, 249, 275], "70710678": 11, "70710678j": 11, "714": 279, "72711591": 289, "7320508075688772": [209, 239, 257], "74": 311, "75": [31, 223], "7972e": [31, 223], "79801892": 289, "8": [10, 11, 22, 24, 209, 234, 235, 236, 238, 239, 245, 257, 261, 265, 266, 267, 279, 285, 286, 295, 296, 297, 298, 299, 300, 301, 305, 311], "80": 303, "80225456j": 289, "8202884508482404352ul": 105, "8411639": [31, 223], "8660254": [209, 239, 257], "8660254037844386": [209, 239, 257], "89811411": 289, "9": [10, 285, 295, 296, 297, 298, 299, 300, 303, 305, 311], "9160254037844386": 295, "92933439": 289, "978": 311, "99": [175, 180], "A": [3, 5, 7, 9, 10, 11, 12, 16, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 38, 55, 56, 57, 60, 63, 66, 73, 74, 75, 80, 89, 90, 91, 92, 100, 101, 112, 113, 115, 118, 119, 120, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 165, 166, 168, 169, 174, 175, 178, 180, 182, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 219, 221, 222, 223, 224, 229, 234, 236, 238, 239, 240, 245, 246, 247, 248, 249, 252, 257, 260, 262, 263, 264, 265, 267, 269, 271, 272, 274, 275, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 291, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 308, 309, 310, 311], "AND": 289, "And": [115, 132, 133, 287, 294], "As": [10, 238, 285, 298], "At": [209, 239, 240, 257, 305], "Be": 238, "But": [10, 279, 284, 285], "By": [2, 10, 179, 240, 245, 256, 279, 284, 285], "For": [3, 7, 10, 12, 19, 31, 108, 109, 115, 133, 193, 223, 238, 245, 279, 284, 285, 295, 296, 297, 303, 305, 307, 308, 309, 310], "If": [3, 7, 10, 11, 12, 19, 24, 31, 54, 57, 66, 73, 80, 89, 92, 115, 117, 126, 127, 133, 175, 180, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 213, 221, 222, 223, 228, 229, 231, 233, 234, 235, 238, 239, 241, 245, 246, 247, 257, 265, 266, 279, 284, 285, 286, 289, 296, 297, 303, 306, 307, 308], "In": [3, 7, 10, 11, 12, 15, 19, 24, 31, 70, 80, 92, 115, 117, 132, 133, 193, 194, 195, 196, 197, 200, 201, 202, 203, 223, 238, 279, 284, 285, 286, 289, 291, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309], "It": [3, 7, 10, 12, 19, 31, 32, 101, 115, 132, 133, 165, 183, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 223, 230, 232, 235, 236, 238, 240, 249, 266, 267, 275, 279, 284, 285, 289, 295, 296, 297, 300, 301, 303, 304, 305], "NOT": 279, "No": [10, 12, 175, 180, 284, 285], "Not": 279, "OR": [279, 289], "Of": [10, 12, 209, 239, 257, 284, 285], "On": [279, 296, 297], "One": [80, 92, 126, 127, 308], "Or": 303, "Such": [296, 297], "That": 279, "The": [0, 3, 5, 7, 8, 9, 10, 11, 12, 19, 24, 30, 31, 38, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 96, 99, 100, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 186, 187, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 218, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 250, 252, 257, 259, 265, 266, 267, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 291, 294, 296, 297, 300, 301, 302, 303, 304, 309, 311], "Then": 245, "There": [10, 115, 133, 225, 231, 233, 279, 284, 285], "These": [238, 245, 309], "To": [194, 195, 196, 197, 200, 201, 202, 203, 228, 238, 245, 279, 291, 303, 306, 309, 310], "Will": [238, 279], "With": [10, 12, 284, 285], "_": [289, 295], "__abs__": [10, 12, 284, 285], "__abstractmethods__": [36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 144], "__add__": [10, 12, 284, 285], "__annotations__": [2, 3, 7, 10, 12, 19, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 144, 145, 146, 147, 148, 152, 153, 158, 159, 160, 173, 174, 175, 177, 178, 179, 180, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 228, 238, 239, 240, 252, 253, 254, 256, 257, 278, 279, 284, 285], "__array_priority__": [10, 12, 284, 285], "__bool__": [10, 12, 284, 285], "__bound__": 240, "__call__": 228, "__class__": 279, "__constraints__": 240, "__contains__": 279, "__contravariant__": 240, "__copy__": 240, "__covariant__": 240, "__deepcopy__": 240, "__dict__": 240, "__div__": [10, 12, 284, 285], "__eq__": [10, 12, 284, 285], "__ge__": [10, 12, 284, 285], "__getattribute__": 13, "__getitem__": [10, 12, 279, 284, 285], "__gt__": [10, 12, 284, 285], "__hash__": [10, 12, 284, 285], "__iadd__": [10, 12, 284, 285], "__idiv__": [10, 12, 284, 285], "__imul__": [10, 12, 284, 285], "__init__": [2, 3, 7, 10, 12, 19, 41, 44, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 160, 173, 174, 175, 177, 178, 179, 180, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 228, 238, 239, 240, 252, 253, 254, 256, 257, 278, 279, 284, 285, 307, 308], "__init_subclass__": [238, 240], "__isub__": [10, 12, 284, 285], "__iter__": [10, 12, 13, 279, 284, 285], "__itruediv__": [10, 12, 284, 285], "__le__": [10, 12, 284, 285], "__len__": [10, 12, 279, 284, 285], "__lt__": [10, 12, 284, 285], "__matmul__": [10, 12, 284, 285], "__mul__": [10, 12, 284, 285], "__name__": 240, "__ne__": [10, 12, 284, 285], "__neg__": [10, 12, 284, 285], "__networkx_backend__": 279, "__new__": [2, 13, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 173, 174, 175, 177, 178, 179, 180, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 252, 253, 254, 256, 278], "__next__": 13, "__nonzero__": [10, 12, 284, 285], "__or__": 240, "__pow__": [10, 12, 284, 285], "__radd__": [10, 12, 284, 285], "__rdiv__": [10, 12, 284, 285], "__reduce__": [13, 240], "__repr__": [10, 12, 240, 284, 285], "__rmatmul__": [10, 12, 284, 285], "__rmul__": [10, 12, 284, 285], "__ror__": 240, "__round__": [10, 12, 284, 285], "__rsub__": [10, 12, 284, 285], "__rtruediv__": [10, 12, 284, 285], "__setitem__": [10, 12, 284, 285], "__sizeof__": 13, "__slots__": [36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 144, 240], "__str__": [10, 12, 37, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 60, 63, 66, 73, 74, 75, 80, 89, 90, 91, 92, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 144, 145, 146, 147, 148, 152, 153, 158, 159, 199, 238, 252, 253, 254, 278, 279, 284, 285, 306, 308], "__sub__": [10, 12, 284, 285], "__truediv__": [10, 12, 284, 285], "_csc_base": 284, "_csr_base": [10, 285], "_final": 240, "_i": [296, 297], "_immut": 240, "_lil_bas": 12, "_scalartype_co": [212, 255], "_seed": [298, 299], "_triangul": [209, 239, 257], "_trirefin": [209, 239, 257], "_typevarlik": 240, "a0": [55, 56, 60, 63], "a_": [54, 295, 296, 297], "aa": [55, 56, 60, 63, 238], "ab": [31, 55, 56, 60, 63, 223, 245, 289], "abc": [37, 40, 144], "abcmeta": [38, 134], "abl": [291, 298, 303], "about": [10, 12, 117, 209, 239, 257, 284, 285, 303, 304], "abov": [10, 55, 56, 60, 63, 115, 132, 133, 209, 238, 239, 257, 284, 285, 303], "absolut": [22, 25, 245, 261, 263], "absorb": [296, 297], "abstract": [37, 38, 40, 112, 113, 114, 115, 118, 123, 130, 131, 132, 133, 134, 138, 144, 145, 146, 148, 152, 158, 193, 199, 252, 278, 307, 308], "abstract_cpr_strategi": 307, "abstract_normal_form_strategi": 307, "abstractcprstrategi": [41, 42, 43, 44, 45, 46, 47, 119, 147, 307], "abstractcrdstrategi": [54, 55, 56, 57, 60, 63, 66, 116, 117, 307], "abstractgam": [2, 5, 30, 54, 70, 71, 72, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 113, 115, 116, 117, 120, 121, 122, 124, 126, 131, 133, 139, 145, 152, 158, 166, 175, 179, 180, 186, 187, 234, 235, 236, 253, 254, 256, 265, 266, 267, 269, 288, 291, 304, 306, 309], "abstractnetworkstructur": [174, 178, 194, 195, 196, 197, 200, 201, 202, 203], "abstractnfgstrategi": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 124, 125], "abstractnormalformstrategi": 307, "abstractnplayergam": [118, 119, 123, 128, 132, 146, 147, 148, 153, 159, 304, 306], "abstractpatheffect": 238, "abstractspatialgam": [125, 127, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 306], "abstractstructur": [173, 177], "abstracttwoplayergam": 304, "academ": 311, "academi": [127, 311], "accec": 302, "acceler": [2, 170, 179, 184, 256], "accept": [31, 119, 147, 223, 238, 289], "accepts_commit": 44, "access": [126, 132, 238, 279, 306], "accord": [11, 24, 105, 193, 194, 195, 196, 197, 200, 201, 202, 203, 245, 286, 289], "account": [3, 7, 10, 19, 209, 239, 257, 284, 285, 296, 297, 298, 305], "accumul": [10, 12, 195, 196, 201, 202, 284, 285], "accuraci": 245, "achiev": [116, 117, 126, 295], "across": [10, 12, 22, 101, 117, 122, 126, 174, 178, 183, 221, 222, 245, 246, 247, 254, 261, 284, 285, 309], "act": [74, 75, 90, 91, 245, 279, 307], "action": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 97, 98, 123, 124, 125, 148, 160, 311], "action_abov": 54, "action_below": 54, "action_equ": 54, "action_first_round": [80, 92], "action_prev": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92], "actions_per_round": [57, 66], "activ": [10, 114, 125, 199, 284, 285, 303], "actual": [10, 12, 209, 238, 239, 257, 279, 284, 285], "ad": [10, 12, 31, 209, 223, 238, 239, 245, 257, 279, 284, 285], "adam": 245, "adapt": [55, 56, 57, 60, 63, 66, 115, 132, 133, 295, 296, 297, 298], "add": [116, 193, 209, 213, 238, 239, 241, 257, 279, 298, 299, 303, 306], "add_axi": [209, 239, 257, 300, 301], "add_callback": 238, "add_colorbar": [209, 239, 257, 295, 300, 301], "add_edg": 279, "add_edges_from": 279, "add_edges_with_random_drift": [209, 239, 257], "add_group_extract": [119, 147], "add_nod": 279, "add_nodes_from": 279, "add_patch": 238, "add_vertex_label": [209, 239, 257, 295, 300, 301], "add_weighted_edges_from": 279, "addit": [10, 12, 25, 31, 78, 223, 238, 245, 263, 279, 284, 285, 305], "addition": 305, "adj": 279, "adj_dict": 279, "adj_it": 279, "adjac": [238, 279], "adjlist_dict": 279, "adjlist_inner_dict_factori": 279, "adjlist_outer_dict_factori": 279, "adjust": 228, "adopt": [2, 3, 7, 19, 115, 120, 133, 139, 175, 179, 180, 189, 193, 194, 195, 196, 197, 200, 201, 202, 203, 256, 291, 296, 297, 305, 309], "advanc": [209, 239, 257, 279, 310], "advantag": [10, 12, 284, 285], "advic": 302, "advis": [175, 180], "affect": [125, 279], "affin": 238, "after": [10, 12, 74, 75, 77, 90, 91, 105, 173, 174, 177, 178, 238, 279, 284, 285, 296, 297, 298, 306, 309], "afterward": [54, 298], "again": [296, 297], "against": [3, 4, 7, 14, 19, 29, 121, 124, 238, 253, 268, 288, 291, 295, 296, 297], "agent": [54, 125, 296, 297], "agg": 238, "agg_filt": 238, "aggreg": [194, 195, 196, 197, 200, 201, 202, 203], "aim": 295, "aitoolbox": 302, "al": [116, 117, 123, 148, 308], "algorithm": [9, 31, 100, 135, 141, 149, 182, 193, 194, 195, 196, 197, 200, 201, 202, 203, 223, 236, 267, 279, 289], "alia": [212, 238, 255, 279], "align": [209, 238, 239, 257], "alik": 81, "all": [3, 5, 7, 10, 12, 15, 19, 23, 30, 31, 38, 101, 109, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 138, 139, 145, 146, 148, 152, 158, 159, 166, 174, 175, 178, 180, 183, 187, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 217, 223, 230, 232, 238, 239, 240, 252, 253, 254, 257, 262, 269, 278, 279, 284, 285, 287, 289, 291, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309], "all_edge_dict": 279, "allc": 299, "alld": 299, "alloc": [10, 12, 112, 120, 130, 138, 139, 252, 278, 284, 285], "allow": [10, 12, 103, 116, 124, 125, 126, 127, 217, 245, 279, 284, 285, 296, 297, 303, 304, 307, 310], "almost": 295, "along": [10, 12, 31, 209, 223, 238, 239, 257, 279, 284, 285], "alongsid": [209, 239, 257], "alpha": [209, 238, 239, 257, 295, 298, 300, 301], "alreadi": [115, 133, 279, 304], "also": [2, 10, 31, 179, 193, 210, 223, 229, 236, 238, 240, 256, 267, 279, 284, 285, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310], "alter": 279, "altern": [10, 12, 238, 279, 284, 285, 289], "although": 301, "alwai": [3, 7, 10, 12, 19, 70, 71, 72, 73, 89, 209, 239, 245, 257, 284, 285, 291, 307], "alwaysconservecpr": 307, "am": [55, 56, 60, 63], "amax": [10, 284, 285], "amin": [10, 284, 285], "ammount": [296, 297], "among": [3, 7, 19, 23, 116, 117, 128, 159, 262, 287], "amount": [209, 221, 222, 239, 246, 247, 257], "amp": [296, 297], "amplitud": 238, "an": [3, 7, 9, 10, 11, 12, 17, 19, 23, 24, 28, 36, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 100, 107, 113, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 131, 132, 133, 135, 139, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 164, 168, 169, 175, 180, 182, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 213, 214, 220, 221, 222, 228, 229, 230, 232, 238, 239, 241, 242, 244, 245, 246, 247, 257, 258, 262, 271, 272, 279, 283, 284, 285, 286, 287, 289, 291, 292, 294, 295, 296, 297, 298, 300, 301, 303, 305, 307, 308, 309, 311], "anaconda": 303, "analys": [115, 133, 231, 233, 294, 295, 296, 297], "analysi": 305, "analyt": [162, 166, 175, 179, 180, 186, 187, 209, 210, 229, 239, 256, 257, 268, 269, 294, 295, 296, 300, 302, 304, 309, 310], "analytical_evolv": 298, "analyz": [3, 7, 19, 73, 89, 132], "anchor": [209, 239, 257], "anderson": [31, 223], "angl": [238, 245], "angular": 245, "ani": [3, 7, 10, 12, 19, 24, 38, 74, 75, 90, 91, 107, 112, 115, 124, 130, 132, 133, 134, 138, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 216, 217, 219, 228, 238, 239, 252, 257, 260, 264, 278, 279, 284, 285, 286, 291, 295, 296, 297, 300, 301, 303, 304], "anim": 238, "anoth": [10, 12, 115, 119, 133, 147, 194, 195, 196, 197, 200, 201, 202, 203, 217, 279, 284, 285, 287, 303, 305], "anti": 238, "antialias": 238, "anyth": [10, 12, 115, 133, 240, 284, 285], "api": [1, 33, 52, 67, 69, 111, 193, 208, 306], "apolog": 78, "appear": [209, 239, 257, 279, 296, 300], "append": [10, 285, 298], "appl": 303, "appli": [10, 31, 116, 163, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 221, 222, 223, 238, 239, 246, 247, 257, 284, 285, 304], "applic": [108, 109, 238, 303], "apply_simplex_boundaries_to_gradi": [209, 239, 257, 300], "approach": [10, 12, 189, 238, 284, 285, 309], "appropri": [10, 12, 22, 228, 261, 284, 285, 303, 309], "approxim": [21, 31, 106, 223, 238, 294, 305], "ar": [2, 3, 7, 10, 12, 19, 31, 38, 77, 113, 115, 118, 119, 123, 125, 126, 131, 132, 133, 134, 145, 146, 147, 148, 152, 158, 168, 169, 175, 179, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 217, 221, 222, 223, 225, 229, 238, 239, 240, 245, 246, 247, 256, 257, 271, 272, 279, 284, 285, 291, 294, 295, 296, 297, 300, 301, 303, 305, 307, 309, 310], "arang": [295, 296, 297, 298], "arbitrari": [116, 238, 279, 301], "architectur": 303, "archiv": [31, 223], "arcsin": [10, 284, 285], "arcsinh": [10, 284, 285], "arctan": [10, 284, 285], "arctanh": [10, 284, 285], "area": 245, "aren": [231, 233], "arg": [3, 7, 19, 31, 109, 124, 125, 174, 178, 223, 240, 245], "arg0": [116, 117, 121, 122, 124, 126, 194, 197, 200, 203, 253, 254], "arg1": [10, 12, 116, 117, 121, 122, 126, 253, 254, 284, 285], "argmax": [10, 284, 285], "argmin": [10, 284, 285], "argument": [3, 7, 10, 12, 19, 31, 132, 209, 223, 238, 239, 240, 245, 257, 279, 284, 285, 289], "arithmet": [10, 12, 284, 285], "arm64": 303, "arn": 311, "around": [10, 12, 228, 284, 285], "arr": [10, 12, 284, 285], "arrai": [2, 3, 5, 7, 9, 10, 11, 12, 16, 19, 20, 24, 25, 30, 31, 32, 100, 101, 112, 115, 120, 124, 130, 132, 133, 135, 136, 138, 139, 141, 142, 149, 150, 155, 161, 164, 165, 166, 175, 179, 180, 182, 183, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 214, 223, 224, 226, 229, 231, 233, 238, 239, 242, 245, 248, 249, 250, 252, 256, 257, 258, 263, 269, 273, 274, 275, 278, 279, 284, 285, 286, 287, 289, 295, 296, 297, 298, 299, 300, 301, 305, 310], "array_lik": [10, 11, 12, 24, 284, 285, 286, 289], "arraylik": [3, 7, 19], "arrow": [209, 213, 230, 231, 232, 233, 239, 241, 257, 287, 300, 301], "arrowdirect": [209, 239, 257, 300, 301], "arrows": [209, 239, 257, 300, 301], "arrowstyl": [209, 213, 231, 233, 239, 241, 257, 300, 301], "articl": [123, 148], "artist": 238, "as_view": 279, "asarrai": [209, 239, 257, 298, 300], "asformat": [10, 12, 284, 285], "asfptyp": [10, 12, 284, 285], "aspect": [209, 239, 257], "assign": [8, 99, 115, 132, 133, 140, 181, 193, 194, 195, 196, 197, 200, 201, 202, 203, 215, 231, 233, 238, 243, 259, 279], "associ": [26, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 228, 238, 279, 281, 282], "assum": [2, 3, 7, 11, 19, 24, 27, 31, 101, 109, 115, 121, 126, 132, 133, 179, 183, 194, 195, 196, 197, 200, 201, 202, 203, 210, 223, 229, 245, 253, 256, 279, 286, 291, 295, 296, 297, 303, 305, 310], "assumpt": [3, 7, 19, 115, 133, 296, 297], "astyp": [10, 12, 209, 239, 257, 284, 285, 300], "asynchron": [194, 195, 196, 197, 200, 201, 202, 203], "atlasview": 279, "atol": [22, 25, 26, 209, 210, 216, 217, 219, 229, 234, 236, 239, 245, 257, 260, 261, 263, 264, 265, 267, 295, 300], "atol_equ": [236, 267], "atol_neg": [23, 26, 262, 295, 296, 297], "atol_po": [23, 26, 262, 295, 296, 297], "atol_stability_neg": [236, 267], "atol_stability_po": [236, 267], "atol_stability_zero": [236, 267], "atol_zero": [23, 26, 262, 295, 296, 297], "attempt": [245, 279], "attr": 279, "attract": [119, 147], "attractor": [296, 297], "attrdict": 279, "attribut": [10, 12, 31, 94, 97, 103, 105, 113, 115, 116, 117, 118, 120, 123, 124, 126, 131, 132, 133, 139, 145, 146, 148, 152, 158, 160, 175, 180, 209, 223, 228, 238, 239, 257, 279, 284, 285], "author": 302, "auto": [228, 238], "autolim": 238, "automat": [175, 180, 228, 279, 289], "autosc": [228, 238], "avail": [8, 16, 31, 99, 101, 112, 115, 120, 125, 127, 130, 133, 136, 138, 139, 140, 142, 150, 155, 161, 181, 183, 188, 189, 194, 195, 196, 197, 200, 201, 202, 203, 215, 223, 224, 243, 248, 252, 259, 274, 278, 279, 280, 303, 307, 308, 309], "averag": [3, 7, 10, 12, 19, 55, 56, 57, 60, 63, 66, 101, 126, 174, 175, 178, 180, 183, 194, 195, 196, 197, 200, 201, 202, 203, 284, 285, 298, 305], "avg_grad": [174, 178], "avoid": [2, 10, 112, 115, 116, 117, 120, 126, 127, 130, 132, 133, 138, 139, 179, 209, 217, 228, 239, 252, 256, 257, 278, 279, 284, 285, 296, 300, 303, 308, 309], "ax": [10, 12, 209, 210, 228, 229, 231, 233, 234, 235, 236, 238, 239, 257, 265, 266, 267, 284, 285, 295, 296, 297, 298, 299, 300, 301], "axesimag": 238, "axessubplot": 295, "axi": [10, 12, 209, 210, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 257, 265, 266, 267, 284, 285, 295, 299, 300, 301], "axis_labels_fonts": [231, 233], "axis_labels_fontweight": [231, 233], "b": [3, 7, 11, 19, 24, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 118, 119, 126, 144, 146, 147, 209, 231, 233, 238, 239, 245, 257, 279, 286, 295, 296, 297, 300, 301, 310, 311], "back": [209, 228, 238, 239, 257, 296, 297], "backend": 238, "backend_bas": 238, "backtrack": [31, 223], "backward": [10, 12, 284, 285], "bad": [31, 223], "balanc": 309, "band": [11, 24, 245, 286], "bar": [8, 99, 140, 181, 209, 215, 238, 239, 243, 257, 259, 279, 310], "bargiacchi": 302, "barycentr": [21, 164, 167, 209, 214, 216, 217, 218, 219, 220, 221, 222, 226, 234, 236, 239, 242, 244, 246, 247, 250, 257, 258, 260, 264, 265, 267, 270, 273, 298], "barycentric_coordin": [167, 270], "barycentric_to_xy_coordin": 300, "base": [2, 3, 7, 10, 12, 13, 19, 22, 23, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 101, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 144, 145, 146, 147, 148, 152, 153, 158, 159, 160, 173, 174, 175, 177, 178, 179, 180, 183, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 228, 238, 239, 240, 245, 252, 253, 254, 256, 257, 261, 262, 278, 279, 284, 285, 303, 306, 307, 308, 309], "basic": [10, 284, 285, 306, 310], "bbox": [238, 298], "bbox_inch": 238, "bbox_to_anchor": 298, "bboxbas": 238, "bdf": 245, "becaus": [3, 7, 19, 289, 296, 297, 298, 303], "becom": [279, 295], "been": [12, 31, 120, 139, 209, 223, 225, 231, 233, 238, 239, 257, 303], "befor": [10, 12, 31, 112, 115, 117, 120, 128, 130, 132, 133, 138, 139, 159, 174, 178, 209, 223, 228, 238, 239, 252, 257, 278, 279, 284, 285], "begin": [126, 309], "behav": 279, "behavior": [125, 128, 159, 193, 210, 229, 238, 299, 304, 307], "behaviour": 228, "being": [10, 12, 112, 127, 128, 130, 138, 153, 159, 252, 278, 284, 285, 298], "bellow": [209, 239, 257, 298], "belong": 238, "below": [3, 7, 19, 55, 56, 60, 63, 209, 239, 257, 279, 298, 303, 308], "benefit": 240, "besid": [25, 115, 133, 210, 229, 263], "best": [194, 195, 196, 197, 200, 201, 202, 203, 245, 279, 296, 297], "beta": [2, 3, 7, 19, 22, 175, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 210, 229, 234, 235, 256, 261, 265, 266, 295, 296, 297, 298, 299, 300, 301, 305, 309, 310], "better": [175, 180, 309], "between": [3, 7, 10, 12, 19, 21, 23, 27, 28, 105, 121, 124, 174, 178, 194, 195, 196, 197, 200, 201, 202, 203, 209, 228, 230, 232, 238, 239, 253, 257, 262, 279, 284, 285, 287, 298], "bevel": 238, "bewhar": 298, "bezier": 238, "big": [175, 180, 194, 195, 196, 197, 200, 201, 202, 203, 302], "bigger": [175, 180], "biggest": 298, "bin": [8, 99, 140, 181, 215, 243, 259, 303], "binari": [209, 239, 257, 295, 300, 301], "bincount": [10, 12, 284, 285], "bind": [302, 304, 306, 307], "binder": 294, "binom": [107, 108, 109, 225, 305], "binomi": [106, 107], "biolog": 311, "birth": [295, 296, 297], "bit": [3, 7, 19, 294, 309], "bitmap": 238, "bla": [170, 184], "black": [193, 209, 231, 233, 238, 239, 257, 300, 301], "blend": 238, "blit": 238, "blob": 225, "block": [10, 12, 284, 285, 289], "blocksiz": [10, 12, 284, 285], "blue": 279, "bold": [231, 233], "book": [31, 223], "bool": [10, 11, 12, 21, 24, 31, 37, 40, 41, 42, 43, 44, 45, 46, 47, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 144, 170, 171, 184, 185, 209, 210, 216, 218, 223, 225, 229, 234, 236, 238, 239, 245, 257, 260, 265, 267, 279, 284, 285, 286, 287, 289], "boolean": [31, 209, 216, 223, 230, 232, 234, 236, 238, 239, 257, 260, 265, 267, 289], "boost": 303, "border": [209, 210, 217, 229, 231, 233, 239, 257], "both": [80, 92, 108, 109, 119, 147, 238, 245, 298, 299, 303, 305], "bottom": [209, 231, 233, 238, 239, 257], "bound": [10, 12, 21, 238, 240, 284, 285], "boundari": [2, 31, 179, 209, 217, 223, 225, 239, 256, 257], "box": 238, "bracket": [238, 279], "brian": 311, "broyden": [31, 223], "broyden1": [31, 223], "broyden2": [31, 223], "bsr": 284, "bsr_arrai": [10, 12, 284, 285], "buffer": [10, 12, 284, 285], "bug": 303, "build": [10, 276, 285, 302], "bump": 238, "burn": [173, 175, 177, 180, 309], "burton": [31, 223], "busi": 311, "butt": 238, "byte": [10, 12, 13, 240, 284, 285], "b\u00e9zier": 238, "c": [3, 7, 10, 12, 19, 31, 38, 106, 107, 115, 120, 123, 126, 127, 133, 134, 139, 148, 154, 176, 209, 223, 238, 239, 240, 245, 257, 279, 284, 285, 296, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311], "c_contigu": [121, 122, 124, 125, 253, 254], "cach": [2, 175, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 256, 309], "cache_s": [2, 175, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 256], "calcul": [2, 3, 6, 7, 8, 11, 19, 20, 99, 101, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 130, 132, 133, 138, 139, 140, 148, 168, 169, 174, 175, 178, 179, 180, 181, 183, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 215, 216, 217, 219, 238, 239, 243, 252, 253, 256, 257, 259, 260, 264, 271, 272, 278, 280, 281, 282, 291, 294, 295, 296, 297, 301, 308, 309], "calculate_average_gradient_of_select": [194, 195, 196, 197, 200, 201, 202, 203], "calculate_average_gradient_of_selection_and_update_popul": [194, 195, 196, 197, 200, 201, 202, 203], "calculate_cooperation_level_neighborhood": 125, "calculate_end": 105, "calculate_expected_consumpt": [119, 147], "calculate_fit": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 194, 195, 196, 197, 199, 200, 201, 202, 203, 252, 253, 254, 278, 306, 308], "calculate_fixation_prob": [2, 179, 256, 305], "calculate_full_end": 105, "calculate_full_transition_matrix": [3, 7, 19], "calculate_game_payoff": [195, 196, 201, 202], "calculate_gradi": [209, 239, 257, 295, 296, 297, 300, 305], "calculate_gradient_of_select": [2, 179, 256, 295, 297, 305, 310], "calculate_group_achiev": [116, 117, 126], "calculate_nb_st": [3, 7, 9, 16, 19, 100, 101, 135, 136, 141, 142, 149, 150, 155, 161, 182, 183, 188, 189, 224, 248, 274, 298, 308], "calculate_payoff": [112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 252, 253, 254, 278, 306, 308], "calculate_polar": [116, 117], "calculate_polarization_success": [116, 117], "calculate_population_group_achiev": [116, 117, 126], "calculate_st": [8, 16, 99, 101, 136, 140, 142, 150, 155, 161, 181, 183, 188, 189, 209, 215, 224, 239, 243, 248, 257, 259, 274, 300], "calculate_stationary_distribut": [3, 7, 19, 210, 229, 282, 295, 296, 297, 298, 299, 300, 301], "calculate_stationary_distribution_non_hermitian": 281, "calculate_stationary_point": [209, 219, 239, 257, 264], "calculate_total_extract": [118, 119, 146, 147], "calculate_transition_and_fixation_matrix_sml": [2, 179, 256, 297, 299, 305], "calculate_transition_matrix": [2, 179, 256, 295, 297, 301, 305], "calculu": 311, "call": [10, 12, 31, 38, 112, 115, 120, 130, 132, 133, 134, 138, 139, 193, 194, 195, 196, 197, 200, 201, 202, 203, 223, 228, 238, 240, 245, 252, 278, 279, 283, 284, 285], "callabl": [20, 25, 26, 31, 209, 216, 217, 219, 223, 234, 235, 236, 238, 239, 245, 257, 260, 263, 264, 265, 266, 267, 279, 288, 289], "callback": [31, 223, 238], "can": [2, 3, 7, 10, 12, 19, 31, 38, 96, 105, 112, 115, 120, 130, 132, 133, 134, 138, 139, 162, 163, 175, 179, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 219, 223, 228, 236, 238, 239, 240, 245, 252, 256, 257, 264, 267, 278, 279, 284, 285, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310], "cannot": [10, 12, 38, 134, 238, 279, 284, 285], "canon": [10, 284, 285], "canva": 238, "capac": 279, "capstyl": 238, "captur": [117, 126], "care": [238, 245, 279, 296, 297], "carlo": [294, 302], "cartesian": [164, 167, 209, 214, 217, 226, 234, 236, 239, 242, 250, 257, 258, 265, 267, 270, 273], "cartesian_coord": [226, 250, 273], "case": [3, 7, 10, 11, 12, 19, 24, 31, 80, 92, 126, 175, 180, 209, 223, 228, 235, 238, 239, 245, 257, 266, 279, 281, 284, 285, 286, 291, 295, 296, 297, 298, 300, 301, 302, 303, 308, 309, 310], "cast": [10, 12, 284, 285], "categori": [8, 17, 26, 99, 140, 181, 215, 243, 259, 292], "caus": [31, 223, 228, 279, 289], "cb": 126, "cc": [80, 92], "cd": 303, "ceil": [10, 284, 285], "center": [209, 238, 239, 257], "central": [302, 308], "certain": [195, 196, 201, 202, 296, 297, 298], "chain": [3, 7, 9, 19, 100, 135, 141, 149, 182, 210, 229, 281, 282, 295, 296, 297, 305, 311], "chang": [3, 7, 10, 12, 19, 57, 66, 70, 74, 75, 90, 91, 114, 116, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 228, 238, 279, 284, 285, 295, 296, 297, 298, 305, 311], "character": 309, "check": [10, 11, 21, 22, 24, 170, 171, 184, 185, 209, 218, 238, 239, 257, 261, 279, 284, 285, 286, 289, 298], "check_finit": [11, 24, 286, 289], "check_format": [10, 284, 285], "check_if_commitment_valid": [119, 147], "check_replicator_stability_pairwise_gam": [295, 296, 297, 300, 305], "checker": 240, "child": 238, "children": 238, "choos": [82, 107, 306, 309], "chosen": 228, "ci": 303, "circl": [209, 231, 233, 239, 257, 289, 300, 301], "circlepolygon": 238, "cite": [209, 225, 239, 257], "class": [1, 2, 3, 6, 7, 10, 12, 13, 18, 19, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 143, 144, 145, 146, 147, 148, 151, 152, 153, 157, 158, 159, 160, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 211, 227, 228, 237, 238, 239, 240, 245, 251, 252, 253, 254, 256, 257, 271, 272, 277, 278, 279, 284, 285, 294, 295, 296, 300, 301, 304, 306, 307, 309], "class_": 306, "classic": [128, 153, 159, 307], "classif": [23, 216, 234, 235, 260, 262, 265, 266], "classifi": [23, 262], "classmethod": [238, 240], "clear": 279, "clear_edg": 279, "clearer": 238, "click": 238, "climat": [116, 311], "clip": 238, "clip_box": 238, "clip_on": 238, "clip_path": 238, "clipbox": 238, "clockwis": 238, "close": [26, 153, 217, 221, 222, 246, 247, 296, 297], "closer": 238, "cluster": 303, "cmake": 303, "cmap": [209, 239, 257, 295, 300, 301], "co": [15, 238], "code": [245, 279, 308], "coeffici": [106, 107], "coincid": [222, 238, 247], "col": [10, 12, 103, 284, 285], "col_deriv": 245, "col_ind": [10, 284, 285], "collect": [116, 117, 120, 123, 126, 127, 139, 148, 238, 279, 294, 308, 311], "color": [209, 210, 213, 229, 231, 233, 238, 239, 241, 257, 279, 295, 298, 300, 301, 310], "colorbar": [31, 209, 223, 238, 239, 257], "colormap": [209, 239, 257], "column": [3, 5, 7, 10, 11, 12, 15, 19, 30, 103, 113, 115, 118, 119, 123, 128, 131, 132, 133, 145, 146, 147, 148, 152, 153, 158, 159, 166, 174, 178, 187, 238, 245, 269, 284, 285, 305, 308], "column_typ": 103, "com": [225, 302, 303], "comb": [106, 108, 109], "combin": [107, 115, 120, 124, 132, 133, 139, 238, 279, 280, 291], "combinatori": [8, 99, 140, 181, 215, 243, 259], "come": [296, 297], "comma": 238, "command": [238, 279, 303], "commit": [37, 40, 41, 42, 43, 44, 45, 46, 47, 119, 144, 147], "commitment_accept": [119, 147], "commitment_threshold": 41, "common": [10, 12, 117, 119, 126, 127, 147, 193, 279, 284, 285, 304, 307, 311], "comp": [31, 223], "compar": [54, 294, 295, 296, 297], "comparison": [2, 175, 179, 180, 216, 234, 235, 236, 256, 260, 265, 266, 267, 294, 296, 297, 304], "compat": [10, 12, 115, 120, 133, 139, 284, 285, 303], "compet": [296, 297, 305], "compil": [170, 171, 184, 185, 303, 306, 308], "complet": 279, "complete_graph": 279, "complex": [10, 11, 12, 24, 284, 285, 286, 289, 307, 309], "compon": [209, 226, 239, 245, 250, 257, 273], "compos": [3, 7, 19, 112, 120, 130, 138, 139, 252, 278, 302], "composit": [5, 8, 9, 16, 30, 32, 99, 100, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 166, 181, 182, 187, 188, 189, 190, 199, 215, 224, 243, 248, 249, 252, 253, 259, 269, 274, 275, 278, 288, 291, 305, 308], "compress": [10, 12, 284, 285], "comput": [2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 24, 26, 27, 28, 29, 30, 101, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 165, 166, 175, 179, 180, 183, 186, 187, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 216, 234, 235, 238, 245, 252, 253, 254, 256, 260, 265, 266, 268, 269, 278, 284, 285, 286, 289, 298, 302, 303, 305, 310], "computation": 303, "concret": [112, 130, 138, 193, 252, 278], "conda": 303, "condit": [2, 125, 175, 179, 180, 245, 256, 289], "conditional_low": [118, 146], "config": [296, 297], "configur": [2, 3, 5, 7, 9, 15, 19, 30, 100, 108, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 128, 131, 132, 133, 135, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 166, 179, 182, 187, 199, 253, 254, 256, 269, 303, 308, 309], "confus": 279, "conj": [10, 11, 12, 284, 285], "conjug": [10, 11, 12, 284, 285, 289], "conjunct": [10, 12, 284, 285], "connect": [194, 195, 196, 197, 200, 201, 202, 203, 279], "conserv": 307, "consid": [3, 7, 10, 12, 19, 21, 22, 23, 25, 26, 174, 175, 178, 180, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 217, 218, 219, 229, 239, 257, 261, 262, 263, 264, 284, 285, 295, 296, 297, 303, 305], "consist": 295, "const": 306, "constant": 245, "constrainedlayout_guid": 238, "constraint": 240, "construct": [10, 12, 175, 180, 235, 266, 284, 285], "constructor": [2, 124, 125, 179, 256], "consumpt": 309, "contain": [3, 5, 6, 7, 10, 11, 12, 19, 20, 24, 30, 96, 101, 105, 108, 109, 112, 113, 115, 118, 119, 120, 121, 123, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 164, 166, 168, 169, 172, 174, 175, 176, 178, 180, 183, 186, 187, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 217, 226, 228, 229, 230, 231, 232, 233, 238, 239, 240, 242, 245, 250, 252, 253, 257, 258, 269, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 295], "contains_point": 238, "context": [112, 113, 114, 115, 118, 119, 120, 123, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 199, 238, 252, 278], "contigu": [10, 12, 284, 285], "continu": [4, 14, 29, 32, 190, 209, 239, 249, 257, 268, 275], "contrast": [238, 279], "contravari": 240, "contribut": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 116, 117, 126, 127, 128, 153, 159], "control": [10, 12, 31, 223, 238, 245, 279, 284, 285, 305, 309], "conveni": [12, 209, 239, 257, 279, 296, 297], "convent": [238, 306], "converg": [11, 24, 26, 245, 286], "convers": [10, 12, 284, 285], "convert": [9, 10, 12, 16, 100, 135, 136, 141, 142, 149, 150, 155, 161, 182, 188, 224, 238, 245, 248, 274, 279, 284, 285, 289], "convert_xunit": 238, "convert_yunit": 238, "coo": [10, 12, 284, 285], "coo_arrai": [10, 12, 284, 285], "coo_axis0_stored_valu": [10, 12, 284, 285], "coo_axis1_stored_valu": [10, 12, 284, 285], "coo_matrix": [10, 284, 285], "cooordin": [209, 239, 257], "coop_level": 298, "coop_level_analyt": 298, "cooper": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 116, 125, 126, 127, 128, 159, 210, 229, 298, 299, 307, 308, 310], "cooperation_threshold": 308, "cooperation_threshold_": 308, "coord": [10, 12, 284, 285], "coordin": [10, 11, 12, 21, 24, 164, 167, 209, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 231, 233, 234, 238, 239, 242, 244, 246, 247, 250, 257, 258, 260, 264, 265, 270, 273, 284, 285, 286, 298], "copi": [10, 12, 225, 238, 279, 284, 285, 295, 296, 297], "corner": [164, 167, 209, 214, 217, 226, 238, 239, 242, 250, 257, 258, 270, 273, 300], "correct": [107, 115, 132, 133, 279, 306], "correctli": 307, "correspond": [5, 8, 9, 10, 11, 12, 16, 20, 23, 30, 31, 99, 100, 113, 118, 119, 122, 123, 128, 131, 132, 135, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 166, 167, 181, 182, 187, 188, 189, 215, 219, 223, 224, 238, 243, 248, 254, 259, 262, 264, 269, 270, 274, 279, 284, 285, 305, 307], "cosh": [31, 223], "cost": [37, 40, 41, 42, 43, 44, 45, 46, 47, 118, 119, 120, 126, 127, 128, 139, 144, 146, 147, 153, 159, 308], "cost_": 308, "costli": 127, "could": [279, 289, 296, 297, 307], "count": [2, 3, 7, 9, 10, 12, 19, 100, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 131, 132, 133, 135, 141, 145, 146, 147, 148, 149, 152, 153, 154, 158, 159, 173, 174, 175, 177, 178, 179, 180, 182, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 253, 254, 256, 279, 284, 285, 289, 309], "count_nonzero": [10, 12, 284, 285], "coupl": 295, "cours": [209, 239, 257, 311], "covari": 240, "cover": [115, 133], "cpp": 303, "cpprefer": 303, "cpr": [119, 147, 304], "crash": [11, 24, 286, 289, 306], "crd": [116, 117, 126, 307], "crdgame": [54, 308], "crdgametu": 54, "crdmemoryoneplay": [53, 55, 56, 57, 59, 60, 62, 63, 65, 66], "creat": [36, 115, 132, 133, 193, 209, 230, 231, 232, 233, 235, 238, 239, 257, 266, 279, 303, 304], "create_dummy_axi": 228, "creation": [10, 238, 284, 285, 307], "criterion": 238, "critic": 245, "cross": 238, "cruel": [10, 285], "cruz": [31, 223], "csc": [10, 12, 284, 285], "csc_arrai": [10, 12, 284, 285], "csc_matrix": [281, 282], "csr": [10, 12, 284, 285], "csr_arrai": [10, 12, 284, 285], "csr_matrix": [2, 3, 7, 19, 101, 175, 179, 180, 183, 256, 281, 282], "csr_minor_stored_valu": [10, 12, 284, 285], "cumul": 245, "current": [5, 10, 12, 15, 27, 30, 31, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 112, 115, 117, 120, 121, 122, 125, 130, 133, 138, 139, 166, 175, 180, 186, 187, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 223, 238, 239, 252, 253, 254, 257, 269, 278, 279, 284, 285, 303, 305, 308, 309, 310], "cursor": 238, "curv": [231, 233, 238, 245], "custom": [102, 124, 125, 174, 178, 238, 279, 289, 304, 306], "d": [10, 12, 123, 126, 148, 279, 284, 285, 295, 296, 297, 298, 305, 310, 311], "d2x": [31, 223], "d2y": [31, 223], "dai": 279, "danger": [116, 311], "dash": [209, 238, 239, 257], "dashdot": 238, "data": [10, 12, 24, 102, 103, 228, 238, 245, 279, 284, 285, 286, 289], "data_dictionari": 279, "datadict": 279, "date": 228, "dc": [80, 92], "ddict": 279, "death": [295, 296, 297], "decid": 126, "decide_act": 307, "declar": [38, 134, 240], "decompos": 289, "decomposit": 289, "decor": [38, 134], "decreas": [3, 7, 19, 194, 195, 196, 197, 200, 201, 202, 203, 245, 296, 297], "deep": 279, "deepcopi": 279, "def": [3, 7, 19, 31, 38, 134, 223, 238, 240, 245, 279, 306, 307, 308, 310], "default": [10, 11, 12, 21, 22, 24, 25, 26, 31, 105, 115, 132, 133, 210, 216, 223, 228, 229, 231, 233, 234, 235, 236, 238, 240, 245, 260, 261, 263, 265, 266, 267, 279, 284, 285, 286, 289], "defect": [72, 73, 74, 76, 77, 78, 80, 81, 83, 85, 86, 89, 90, 92, 119, 147, 307, 308], "defectionsbi": 78, "defector": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 126, 210, 229, 299], "defin": [3, 5, 7, 19, 30, 31, 57, 66, 80, 92, 108, 112, 115, 116, 122, 124, 130, 132, 133, 138, 166, 173, 175, 177, 180, 187, 209, 223, 228, 238, 239, 240, 245, 252, 254, 257, 269, 278, 279, 287, 294, 295, 299, 304, 305, 308], "definit": [238, 240, 245, 303], "deg2rad": [10, 284, 285], "degener": [296, 297], "degre": [10, 12, 279, 284, 285], "degreeview": 279, "del": 279, "delta": [21, 217, 218, 219, 264], "demension": [167, 270], "denot": [245, 289], "dens": [10, 12, 284, 285, 298], "densiti": [108, 109, 209, 210, 229, 238, 239, 257], "dep": 303, "depend": [5, 10, 12, 30, 31, 166, 174, 178, 187, 223, 238, 269, 284, 285, 295, 296, 297, 298, 303, 305, 306, 307], "depict": [210, 229], "deprec": [296, 300, 305], "deprecationwarn": [296, 300], "depth": 238, "deriv": [4, 14, 15, 29, 31, 38, 134, 223, 245, 268], "describ": [31, 112, 115, 120, 130, 133, 138, 139, 174, 178, 223, 238, 252, 278, 289, 305, 308, 309], "descript": [31, 223, 238, 308], "descriptor": [38, 134, 295], "design": [279, 307], "desir": [10, 12, 238, 245, 284, 285], "despin": 298, "destin": [113, 118, 119, 123, 128, 131, 132, 145, 146, 147, 148, 152, 153, 158, 159], "detail": [31, 223, 238, 240, 279], "detect": [175, 180, 210, 229, 236, 245, 267], "determin": [3, 7, 19, 21, 23, 25, 26, 127, 238, 245, 262, 263, 305, 309], "determinist": [2, 179, 256, 305, 310], "develop": [114, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 303, 305, 310], "df": [31, 223], "dfun": 245, "dg": 279, "dia_arrai": [10, 12, 284, 285], "diagbroyden": [31, 223], "diagon": [3, 7, 10, 12, 19, 31, 223, 238, 245, 284, 285, 289], "diagram": [210, 229, 294], "dict": [31, 80, 92, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 223, 238, 245, 279, 290], "dictionari": [10, 12, 31, 80, 92, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 223, 238, 245, 279, 284, 285], "did": [175, 180], "die": [3, 7, 19, 194, 195, 196, 197, 200, 201, 202, 203], "diferenci": 295, "diff": [10, 12, 284, 285], "differ": [3, 7, 19, 70, 78, 81, 175, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 279, 296, 297, 298, 303, 306, 310], "differenci": [296, 297], "differenti": 245, "digraph": 279, "dilemma": [116, 117, 123, 126, 127, 148, 294, 307, 308, 311], "dimens": [2, 3, 7, 10, 12, 19, 167, 179, 209, 231, 233, 239, 256, 257, 270, 284, 285, 298], "dimension": [10, 12, 168, 169, 209, 239, 257, 271, 272, 281, 282, 284, 285, 298, 310], "direct": [26, 189, 194, 195, 196, 197, 200, 201, 202, 203, 209, 213, 230, 231, 232, 233, 234, 236, 239, 241, 257, 265, 267, 279, 287, 300, 301], "directli": [112, 120, 130, 138, 139, 175, 180, 209, 239, 252, 257, 278, 279, 295, 296, 297, 306], "disabl": [11, 24, 238, 286, 289], "disadvantag": [10, 12, 284, 285], "disallow": 279, "disast": 117, "discard": [173, 174, 175, 177, 178, 180, 309], "discern": [209, 239, 257], "discret": [8, 9, 15, 22, 99, 100, 135, 140, 141, 149, 175, 180, 181, 182, 189, 209, 215, 219, 234, 239, 243, 257, 259, 261, 264, 265, 295, 298, 300], "displai": [10, 12, 210, 229, 231, 233, 238, 284, 285, 295, 299], "display_edge_label": [210, 229], "display_node_label": [210, 229], "display_sd_label": [210, 229], "dist": 298, "distanc": 228, "distinct": [113, 116, 118, 119, 122, 123, 126, 128, 131, 132, 145, 146, 147, 148, 152, 153, 158, 159, 254], "distribut": [3, 7, 15, 19, 21, 32, 101, 116, 117, 126, 175, 180, 183, 190, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 229, 239, 249, 257, 275, 281, 282, 294, 295, 296, 297, 304, 305], "diverg": 298, "divid": [128, 159, 228], "divis": [10, 12, 194, 195, 196, 197, 200, 201, 202, 203, 284, 285], "do": [10, 11, 12, 24, 115, 133, 228, 231, 233, 238, 279, 284, 285, 286, 289, 291, 294, 295, 298, 303, 307], "doc": [10, 279, 285], "document": [1, 10, 33, 52, 67, 69, 111, 208, 285, 289], "doe": [3, 7, 10, 11, 12, 19, 24, 115, 133, 238, 240, 279, 284, 285, 286, 295, 296, 297, 298, 303], "doesn": 279, "doi": [120, 139, 302, 311], "dok": [10, 12, 284, 285], "dok_arrai": [10, 12, 284, 285], "domingo": 302, "don": [221, 222, 246, 247, 279, 287, 303], "done": [3, 7, 10, 12, 19, 115, 120, 133, 139, 209, 238, 239, 257, 284, 285, 291], "dot": [10, 12, 238, 284, 285, 295, 296, 297, 298, 305], "doubl": [11, 24, 70, 245, 286, 306], "dove": [294, 295, 298, 304, 310], "down": 245, "dpi": [210, 229, 238, 299], "draw": [108, 189, 209, 210, 229, 235, 236, 238, 239, 257, 266, 267, 298], "draw_arrow": [209, 239, 257, 300, 301], "draw_artist": 238, "draw_gradi": [209, 239, 257, 295, 300, 301], "draw_idl": 238, "draw_invasion_diagram": [209, 239, 257, 299], "draw_scatter_shadow": [209, 239, 257, 295, 300, 301], "draw_stationary_distribut": [209, 239, 257, 295, 300, 301], "draw_stationary_point": [209, 239, 257, 295, 300, 301], "draw_trajectori": [209, 239, 257], "draw_trajectory_from_point": [209, 239, 257], "draw_trajectory_from_root": [209, 239, 257, 300, 301], "draw_trajectory_from_vector": [209, 239, 257], "draw_triangl": [209, 239, 257, 295, 300, 301], "drawn": [108, 109, 209, 238, 239, 257], "drew": 311, "drift": [22, 209, 210, 229, 234, 236, 239, 257, 261, 265, 267, 296, 297, 305], "drive": [296, 297], "dt": [245, 310], "dtype": [10, 12, 112, 120, 130, 138, 139, 212, 252, 255, 278, 284, 285, 289, 295, 296, 297, 298, 308], "due": [2, 179, 238, 256, 289, 309], "dummi": [236, 267, 310], "duplic": [10, 12, 279, 284, 285], "dure": [73, 89, 228, 279], "dx": [31, 223, 310], "dy": [31, 223, 245], "dydt": 245, "dynam": [0, 2, 3, 4, 5, 6, 7, 9, 14, 15, 19, 23, 29, 30, 100, 112, 120, 123, 125, 130, 135, 138, 139, 141, 148, 149, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 191, 209, 210, 219, 222, 227, 229, 231, 233, 234, 235, 236, 239, 247, 252, 256, 257, 262, 264, 265, 266, 267, 268, 269, 278, 294, 299, 304, 306, 307, 309, 310, 311], "e": [2, 3, 7, 8, 9, 10, 12, 19, 21, 22, 26, 31, 32, 80, 92, 99, 100, 105, 112, 114, 115, 116, 120, 130, 132, 133, 135, 138, 139, 140, 141, 149, 173, 175, 177, 179, 180, 181, 182, 190, 193, 199, 215, 223, 225, 228, 231, 233, 236, 238, 240, 243, 245, 249, 252, 256, 259, 261, 267, 275, 278, 279, 284, 285, 291, 295, 296, 297, 298, 303, 305, 307, 309, 310, 311], "each": [3, 5, 7, 9, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25, 27, 30, 31, 78, 80, 92, 100, 101, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 165, 166, 168, 169, 173, 174, 175, 177, 178, 180, 182, 183, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 223, 224, 229, 230, 232, 238, 245, 248, 252, 253, 254, 260, 262, 263, 269, 271, 272, 274, 278, 279, 280, 283, 284, 285, 286, 291, 295, 296, 297, 298, 305, 306, 307, 308, 309], "easi": [132, 168, 169, 210, 229, 271, 272], "easili": [295, 302], "eattr": 279, "ebunch": 279, "ebunch_to_add": 279, "ec": 238, "econom": 311, "edg": [2, 3, 7, 19, 179, 209, 210, 219, 220, 221, 222, 229, 231, 233, 234, 236, 238, 239, 244, 246, 247, 256, 257, 264, 265, 267, 279], "edge_attr_dict": 279, "edge_attr_dict_factori": 279, "edge_dict": 279, "edge_ind": 279, "edge_subgraph": 279, "edge_width": [210, 229, 299], "edgecolor": [209, 231, 233, 238, 239, 257, 295, 300, 301], "edgedataview": 279, "edgeview": 279, "edit": 311, "edn": 311, "eff": [296, 297], "effect": [23, 209, 238, 239, 257, 262, 279, 295, 296, 297, 305], "effici": [10, 12, 122, 175, 180, 238, 254, 284, 285], "egt": [210, 229, 295, 298, 299, 300, 302, 305, 310], "egtenv": 303, "egttool": [296, 297, 298, 299, 300, 301, 303, 304, 307, 308, 310], "eiegenvector": 11, "eig": [24, 286], "eig_band": 11, "eigen": [303, 306], "eigenvalu": [11, 23, 24, 26, 236, 262, 267, 281, 282, 286, 289, 296, 297], "eigenvector": [11, 24, 281, 282, 286], "eigh": 11, "eigh_tridiagon": 11, "eigval": [11, 289], "eigvals_band": [24, 286], "eigvalsh": [24, 286], "eigvalsh_tridiagon": [24, 286], "either": [10, 12, 209, 239, 245, 257, 279, 284, 285, 289, 303, 307], "ekei": 279, "element": [3, 7, 10, 12, 13, 19, 108, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 238, 239, 245, 257, 280, 283, 284, 285, 296, 297], "elementwis": [165, 191], "elia": 302, "eliasfernandez": [296, 297], "elif": 308, "elimin": [10, 115, 120, 133, 139, 284, 285], "eliminate_zero": [10, 284, 285], "ellips": 238, "els": [240, 279, 307, 308], "elsewher": [31, 223], "email": 303, "embed": 311, "emit": 228, "empti": [10, 12, 238, 279, 284, 285], "en": 303, "enabl": [121, 122, 236, 238, 253, 254, 267, 279, 296, 297], "enclos": [209, 238, 239, 257], "encod": [5, 30, 122, 166, 187, 234, 254, 265, 269], "encount": [125, 303], "encourag": 193, "end": [105, 126, 238], "endow": [116, 117, 126, 127], "enhancement_factor": [116, 308], "enhancement_factor_": 308, "enough": [175, 180, 194, 195, 196, 197, 200, 201, 202, 203, 298], "ensur": [238, 306], "entir": [10, 12, 279, 284, 285, 307], "entri": [3, 4, 5, 7, 10, 12, 14, 15, 16, 19, 23, 29, 30, 109, 113, 118, 119, 122, 123, 124, 128, 131, 132, 136, 142, 145, 146, 147, 148, 150, 152, 153, 155, 158, 159, 161, 166, 186, 187, 188, 189, 220, 224, 238, 244, 248, 254, 262, 268, 269, 274, 284, 285, 291, 296, 297], "enumer": 308, "env": 303, "environ": [114, 199, 303, 307, 308], "epsilon": [70, 74, 75, 90, 91, 238], "epsilon_bottom": [209, 239, 257, 295], "epsilon_top": [209, 239, 257, 295], "equal": [55, 56, 60, 63, 126, 128, 159, 165, 191, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 217, 219, 228, 229, 239, 257, 264, 295, 296, 297, 300, 301], "equat": [4, 5, 14, 23, 27, 28, 29, 30, 31, 166, 186, 187, 209, 223, 231, 233, 239, 245, 257, 262, 268, 269, 294, 295, 300, 301, 305], "equidist": 228, "equilibria": [209, 239, 257, 295, 296, 297], "equilibrium": [209, 234, 239, 257, 265, 300, 301], "equiv": [10, 12, 284, 285], "equival": [10, 12, 106, 107, 209, 239, 257, 279, 284, 285], "error": [175, 180, 245, 279, 289, 296, 297, 298, 303], "error_prob": 79, "escap": [126, 127, 311], "especi": 310, "essenti": 240, "estim": [31, 174, 175, 178, 180, 223, 245, 294, 302, 304], "estimate_fixation_prob": [175, 180, 309], "estimate_stationary_distribut": [175, 180, 298, 309], "estimate_stationary_distribution_spars": [101, 175, 180, 183, 309], "estimate_strategy_distribut": [175, 180, 309], "estimate_time_dependent_average_gradients_of_select": [174, 178], "estimate_time_independent_average_gradients_of_select": [174, 178], "et": [116, 117, 123, 148, 308], "etc": [10, 12, 279, 284, 285], "eugenio": 302, "evalu": [2, 22, 122, 126, 127, 174, 178, 179, 245, 254, 256, 261, 279], "even": [238, 279, 296, 297], "evenli": [228, 245], "event": 238, "everi": [31, 57, 66, 126, 193, 194, 195, 196, 197, 200, 201, 202, 203, 223, 279], "evocrd": 294, "evolut": [174, 178], "evolutionari": [0, 3, 6, 7, 19, 112, 122, 123, 130, 138, 148, 172, 173, 174, 175, 176, 177, 178, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 227, 239, 252, 254, 257, 278, 294, 295, 305, 306, 307, 309, 310, 311], "evolv": [173, 174, 175, 177, 178, 180, 210, 229, 234, 235, 265, 266, 295, 296, 297, 298, 299, 300, 301, 305, 309, 310], "ewen": 311, "ewt": 245, "exact": [2, 107, 175, 179, 180, 256], "exactli": [74, 75, 90, 91, 279], "exampl": [2, 3, 5, 7, 8, 9, 10, 11, 12, 16, 19, 24, 30, 31, 32, 99, 100, 101, 112, 120, 130, 135, 136, 138, 139, 140, 141, 142, 149, 150, 155, 161, 165, 166, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 209, 210, 215, 223, 224, 226, 229, 238, 239, 240, 243, 245, 248, 249, 250, 252, 256, 257, 259, 269, 273, 274, 275, 278, 279, 283, 284, 285, 286, 289, 291, 296, 297, 301, 304, 310], "exce": 309, "except": [10, 12, 17, 57, 66, 228, 279, 284, 285, 292], "excitingmix": [31, 223], "exclud": [53, 55, 56, 57, 59, 60, 62, 63, 65, 66, 113, 116, 118, 119, 122, 123, 124, 126, 128, 131, 132, 145, 146, 147, 148, 152, 153, 158, 159, 175, 180, 238, 254], "execut": [113, 117, 118, 119, 121, 124, 126, 128, 131, 145, 146, 147, 152, 153, 158, 159, 253, 298], "exhaust": 279, "exhibit": [22, 261], "exist": [112, 120, 130, 138, 139, 194, 195, 196, 197, 200, 201, 202, 203, 219, 236, 238, 240, 252, 264, 267, 278, 279, 304], "exit": [31, 223], "expand": [228, 238, 303], "expans": 238, "expect": [3, 7, 10, 12, 15, 19, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 167, 168, 169, 238, 252, 253, 254, 270, 271, 272, 278, 284, 285, 299, 303, 305, 308], "expected_payoff": [124, 125, 210, 229], "expens": [10, 284, 285], "explain": [115, 132, 133, 296, 297, 306, 308], "explicit": [10, 12, 279, 284, 285], "explicitli": [10, 238, 284, 285], "explor": [70, 219, 264, 305], "expm1": [10, 284, 285], "expos": [193, 306, 307], "express": [107, 279, 289, 295, 296, 297], "extend": [2, 5, 30, 31, 117, 166, 179, 187, 223, 238, 240, 256, 269, 304, 308], "extens": [279, 309], "extent": 238, "extern": [121, 253], "extra": [3, 7, 19, 31, 223, 245, 279], "extract": [37, 40, 41, 42, 43, 44, 45, 46, 47, 51, 118, 144, 146], "extraction_strategi": [118, 146], "extrem": 309, "extrud": 289, "f": [10, 12, 31, 77, 120, 126, 127, 139, 209, 216, 217, 219, 223, 239, 257, 260, 264, 284, 285, 295, 296, 297, 303], "f0": [31, 223], "f_a": [3, 7, 19, 295, 296, 297], "f_b": [3, 7, 19, 295, 296, 297], "f_i": [295, 296, 297, 305], "f_j": [295, 305], "face": [117, 238], "facecolor": [238, 298], "facet": 298, "facilit": [168, 169, 271, 272, 279], "fact": 238, "factor": [128, 159, 238, 245], "factori": 279, "fail": [126, 127, 279, 289], "failur": [117, 126, 127, 289, 311], "fair": 116, "fals": [10, 11, 12, 21, 24, 31, 37, 40, 41, 42, 43, 44, 45, 46, 47, 80, 92, 144, 209, 216, 223, 225, 234, 236, 238, 239, 240, 245, 257, 260, 265, 267, 279, 284, 285, 286, 289], "fanci": [209, 239, 257, 300, 301], "fancyarrowpatch": 238, "far": 294, "fashion": 12, "fast": [10, 12, 121, 253, 284, 285], "faster": [3, 7, 19, 126, 175, 180, 235, 245, 266, 284, 296, 300], "favour": [296, 300], "fc": 238, "featur": [209, 239, 257, 279], "feed": 295, "fermi": [3, 7, 19, 194, 195, 196, 197, 200, 201, 202, 203, 295, 296, 297, 305], "fernandez2020": 302, "fernando": 311, "fern\u00e1ndez": 302, "ffdd52efb7d6": 300, "field": [236, 267, 294, 310], "fig": [209, 210, 229, 238, 239, 257, 295, 296, 297, 298, 299, 300, 301], "fig_titl": [230, 231, 232, 233, 296, 297], "figsiz": [209, 210, 229, 230, 231, 232, 233, 234, 235, 236, 239, 257, 265, 266, 267, 295, 296, 297, 298, 299, 300, 301, 305], "figur": [209, 210, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 257, 265, 266, 267, 304], "figure_format": [296, 297], "figurecanvasbas": 238, "file": [112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 252, 253, 254, 278, 279, 308], "file_nam": [112, 113, 115, 116, 117, 118, 119, 120, 123, 124, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 252, 278, 308], "filenam": 306, "fill": [10, 12, 113, 115, 118, 119, 121, 128, 131, 132, 133, 145, 146, 147, 152, 153, 158, 159, 231, 233, 238, 253, 284, 285], "filter": [236, 238, 267], "filter_func": 238, "final": [105, 173, 174, 175, 177, 178, 180, 238, 279, 298, 303, 309], "find": [11, 24, 25, 26, 31, 217, 220, 223, 235, 236, 238, 244, 245, 263, 266, 267, 277, 286, 287, 294, 304, 305, 308], "find_root": [295, 296, 297, 300, 305], "find_roots_in_discrete_barycentric_coordin": 300, "findobj": 238, "fine": [37, 40, 41, 42, 43, 44, 45, 46, 47, 119, 144, 147, 238], "finit": [2, 6, 9, 11, 24, 100, 135, 141, 149, 172, 175, 179, 180, 182, 209, 219, 222, 234, 239, 247, 256, 257, 264, 265, 286, 289, 294, 304], "finitepopul": 125, "finnal": 298, "fire": 238, "first": [3, 7, 10, 12, 19, 31, 54, 70, 74, 75, 77, 80, 83, 84, 90, 91, 92, 165, 167, 173, 174, 175, 177, 178, 180, 191, 193, 223, 226, 238, 245, 250, 270, 273, 279, 284, 285, 299, 307, 311], "fisher": 305, "fit": [2, 3, 7, 15, 19, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 175, 179, 180, 194, 195, 196, 197, 199, 200, 201, 202, 203, 252, 253, 254, 256, 278, 295, 296, 297, 305, 308, 309], "fitness_diff": [3, 7, 19], "fitness_group": [3, 7, 19], "fitness_pair": [3, 7, 19], "fix": [26, 106, 107, 121, 122, 125, 173, 177, 253, 254, 307, 309], "fixat": [2, 3, 7, 19, 175, 179, 180, 210, 229, 256, 294, 296, 297, 304, 305, 310, 311], "fixation_prob": [2, 3, 7, 19, 179, 210, 229, 256, 297, 299], "flag": [10, 31, 121, 122, 124, 125, 223, 238, 253, 254, 284, 285], "flaot": [119, 147, 209, 239, 257], "flat": [209, 239, 257], "flatten": [10, 12, 284, 285], "flexibl": [12, 307, 310], "float": [2, 3, 7, 10, 12, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 70, 74, 75, 77, 79, 80, 90, 91, 92, 105, 106, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 144, 145, 146, 147, 148, 152, 153, 158, 159, 175, 179, 180, 190, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 218, 219, 221, 222, 223, 226, 228, 229, 234, 235, 236, 238, 239, 245, 246, 247, 249, 250, 252, 253, 254, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 273, 275, 278, 279, 284, 285, 287, 288, 303, 308], "float32": [10, 12, 284, 285], "float64": [2, 3, 5, 7, 10, 12, 19, 25, 30, 32, 101, 108, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 165, 166, 174, 175, 178, 179, 180, 183, 186, 187, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203, 209, 216, 234, 235, 236, 239, 249, 252, 253, 254, 256, 257, 260, 263, 265, 266, 267, 269, 275, 278, 284, 285, 287, 291, 295, 296, 297, 300, 308], "floor": [10, 284, 285, 300], "flow": 310, "floyd": 311, "fname": 238, "focal": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 199, 252, 253, 254, 278], "folder": 303, "follow": [10, 31, 77, 113, 115, 118, 123, 126, 127, 131, 132, 133, 145, 146, 148, 152, 158, 193, 209, 223, 238, 239, 240, 245, 257, 279, 285, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 308], "font": [209, 210, 229, 231, 233, 239, 257], "font_scal": 298, "font_size_edge_label": [210, 229, 299], "font_size_node_label": [210, 229, 299], "font_size_sd_label": [210, 229, 299], "fontsiz": [209, 213, 239, 241, 257, 298], "foo": 279, "foovalu": 279, "forc": 238, "form": [115, 124, 125, 126, 133, 217, 238, 245, 279, 289, 294, 295, 296, 297, 304, 305], "formal": 295, "format": [3, 7, 10, 12, 19, 103, 175, 180, 238, 279, 280, 284, 285, 291, 296, 297, 298], "format_cursor_data": 238, "formatt": 238, "former": [10, 284, 285], "formul": 127, "formula": [8, 99, 140, 181, 215, 243, 259], "fortran": [10, 12, 245, 284, 285], "found": [10, 25, 31, 217, 223, 238, 263, 279, 284, 285, 296, 297], "four": 279, "fr16": [31, 223], "frac": [77, 295, 296, 297, 305], "fraction": [126, 295, 296, 297], "framework": [302, 307], "francisco": [302, 311], "free": [31, 223, 238, 307], "freedom": [193, 194, 195, 196, 197, 200, 201, 202, 203], "freq": [5, 30, 101, 166, 183, 186, 187, 269], "freq_arrai": [27, 28], "frequenc": [4, 5, 14, 15, 20, 23, 26, 27, 28, 29, 30, 101, 108, 165, 166, 168, 169, 175, 180, 183, 186, 187, 191, 209, 210, 229, 231, 233, 239, 257, 262, 268, 269, 271, 272, 295, 296, 297, 298, 305, 310], "frequent": [175, 180], "fresh": 279, "friction": 245, "fridai": 279, "from": [2, 9, 10, 11, 12, 16, 24, 26, 31, 32, 38, 73, 89, 100, 101, 102, 108, 109, 110, 112, 120, 126, 127, 130, 134, 135, 136, 138, 139, 141, 142, 149, 150, 155, 161, 173, 174, 175, 177, 178, 179, 180, 182, 183, 188, 189, 190, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 223, 224, 225, 226, 228, 235, 236, 238, 239, 245, 248, 249, 250, 252, 256, 257, 266, 267, 273, 274, 275, 278, 279, 281, 282, 284, 285, 286, 289, 294, 295, 296, 297, 300, 304, 305, 306, 307, 309, 310, 311], "frozenset": [36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 144], "fudenberg": 311, "full": [2, 3, 7, 19, 31, 113, 118, 119, 122, 123, 128, 131, 145, 146, 147, 148, 152, 153, 158, 159, 174, 175, 178, 179, 180, 223, 254, 256, 279, 291, 304, 305, 308, 310], "full_check": [10, 284, 285], "full_fitness_difference_group": [3, 7, 19], "full_fitness_difference_pairwis": [3, 7, 19], "full_gradient_select": [3, 7, 19, 300, 301], "full_gradient_selection_without_mut": [3, 7, 19, 300], "full_output": 245, "fun": [31, 223], "func": [238, 245], "funcobj": [38, 134], "function": [0, 1, 3, 4, 5, 6, 7, 10, 12, 14, 15, 16, 18, 19, 20, 23, 25, 26, 29, 30, 31, 32, 35, 39, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 104, 108, 109, 112, 120, 124, 125, 129, 130, 136, 137, 138, 139, 142, 143, 150, 151, 155, 157, 161, 162, 163, 165, 166, 168, 169, 172, 175, 176, 180, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 208, 209, 210, 211, 216, 217, 219, 220, 223, 224, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 251, 252, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 277, 278, 279, 281, 284, 285, 288, 291, 295, 296, 297, 301, 304, 305, 306, 310], "fundament": 295, "further": 238, "futur": [114, 115, 120, 133, 139, 193, 199, 298, 303, 305, 307, 309, 310], "g": [9, 10, 12, 26, 31, 80, 92, 100, 112, 114, 115, 120, 130, 132, 133, 135, 138, 139, 141, 149, 173, 177, 182, 193, 199, 210, 223, 228, 229, 231, 233, 236, 238, 240, 245, 252, 267, 278, 279, 284, 285, 295, 296, 297, 298, 299, 307, 309, 310], "g2": 279, "gain": [11, 24, 286, 289], "galleri": 238, "game": [2, 3, 4, 5, 6, 7, 14, 15, 19, 22, 23, 26, 28, 29, 30, 54, 57, 66, 70, 71, 72, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 96, 105, 165, 166, 168, 169, 175, 179, 180, 186, 187, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 229, 234, 235, 236, 252, 253, 254, 256, 261, 262, 265, 266, 267, 268, 269, 271, 272, 277, 278, 288, 291, 294, 295, 298, 301, 304, 309, 310], "game_payoff": [112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 252, 253, 254, 278, 306, 308], "garbow": [31, 223], "gather": [31, 223], "gca": 238, "gener": [11, 24, 32, 114, 173, 174, 175, 177, 178, 180, 190, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 229, 238, 239, 240, 245, 249, 257, 275, 279, 283, 286, 294, 296, 297, 298, 306, 309, 310], "generation_start": [174, 178], "generation_stop": [174, 178], "generoustft": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92], "genet": 311, "geometr": [105, 108, 109], "geq": 126, "get": [10, 12, 110, 209, 228, 238, 239, 257, 279, 284, 285, 298], "get_aa": 238, "get_act": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 160], "get_agg_filt": 238, "get_alpha": 238, "get_angl": 238, "get_anim": 238, "get_antialias": 238, "get_capstyl": 238, "get_cent": 238, "get_children": 238, "get_clip_box": 238, "get_clip_on": 238, "get_clip_path": 238, "get_co_vertic": 238, "get_corn": 238, "get_cursor_data": 238, "get_data_transform": 238, "get_ec": 238, "get_edge_data": 279, "get_edgecolor": 238, "get_ext": 238, "get_extract": [37, 40, 41, 42, 43, 44, 45, 46, 47, 144], "get_facecolor": 238, "get_fc": 238, "get_figur": 238, "get_figure_and_axi": [209, 239, 257], "get_fil": 238, "get_gid": 238, "get_hatch": 238, "get_hatch_linewidth": 238, "get_height": 238, "get_in_layout": 238, "get_joinstyl": 238, "get_l": 238, "get_label": 238, "get_linestyl": 238, "get_linewidth": 238, "get_lw": 238, "get_mouseov": 238, "get_nb_commit": [119, 147], "get_patch_transform": 238, "get_path": 238, "get_path_effect": 238, "get_payoff": [3, 7, 19, 37, 40, 41, 42, 43, 44, 45, 46, 47, 144], "get_payoff_a_vs_a": [3, 7, 19], "get_payoff_a_vs_b": [3, 7, 19], "get_payoff_b_vs_a": [3, 7, 19], "get_payoff_b_vs_b": [3, 7, 19], "get_pick": 238, "get_radiu": 238, "get_raster": 238, "get_render": 238, "get_shap": [10, 12, 284, 285], "get_sketch_param": 238, "get_snap": 238, "get_tightbbox": 238, "get_transform": 238, "get_transformed_clip_path_and_affin": 238, "get_url": 238, "get_vert": 238, "get_vertic": 238, "get_vis": 238, "get_width": 238, "get_window_ext": 238, "get_zord": 238, "getattr": 13, "getcol": [10, 12, 284, 285], "getformat": [10, 12, 284, 285], "geth": [10, 12, 284, 285], "getmaxprint": [10, 12, 284, 285], "getnnz": [10, 12, 284, 285], "getrow": [10, 12, 284, 285], "getrowview": 12, "gid": 238, "github": [225, 302, 303], "give": [2, 10, 11, 12, 15, 24, 103, 115, 124, 132, 133, 179, 209, 210, 229, 239, 245, 256, 257, 279, 284, 285, 286, 288, 289, 294, 295, 296, 297, 300, 301], "given": [2, 3, 7, 10, 12, 16, 19, 25, 26, 101, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 138, 139, 142, 145, 146, 147, 148, 150, 152, 153, 155, 158, 159, 161, 174, 178, 179, 183, 188, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 210, 217, 224, 228, 229, 234, 238, 239, 245, 248, 252, 253, 254, 256, 257, 263, 265, 274, 278, 279, 280, 284, 285, 288, 289, 291, 295, 300, 301, 305, 308, 310], "global": 240, "go": [115, 132, 133, 168, 169, 271, 272, 296, 297, 300, 301], "good": [31, 115, 126, 127, 128, 132, 133, 153, 159, 175, 180, 223, 298, 308], "goodby": [10, 285], "gouraud": [31, 209, 223, 239, 257, 295, 300, 301], "grad": [5, 30, 166, 186, 187, 269], "gradient": [2, 3, 5, 7, 15, 19, 20, 22, 25, 26, 27, 28, 30, 165, 166, 168, 169, 174, 178, 179, 186, 187, 191, 194, 195, 196, 197, 200, 201, 202, 203, 209, 216, 217, 219, 230, 231, 232, 233, 234, 235, 236, 239, 245, 256, 257, 260, 261, 263, 264, 265, 266, 267, 269, 271, 272, 277, 287, 294, 295, 296, 297, 304, 305], "gradient_direct": [230, 232, 287], "gradient_funct": [20, 25, 26, 263, 295, 296, 297, 300, 301, 305, 310], "gradient_functionm": 295, "gradient_select": [3, 7, 19, 296], "gradualtft": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92], "grai": [209, 239, 257, 295, 298, 300, 301], "graph": [210, 229, 290], "graph_attr_dict_factori": 279, "graphic": 238, "graviti": 245, "great": 302, "greater": [126, 245], "grei": [209, 238, 239, 257], "grid": [114, 165, 191, 199, 209, 238, 239, 245, 257, 300, 301], "grim": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 210, 229, 299], "group": [3, 5, 7, 8, 9, 15, 16, 19, 22, 28, 30, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 99, 100, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 165, 166, 169, 173, 177, 181, 182, 187, 188, 191, 215, 224, 236, 238, 243, 248, 252, 253, 254, 259, 261, 267, 269, 272, 274, 278, 280, 288, 291, 305, 308], "group_achievement_per_group": 126, "group_composiiton": [120, 139], "group_composit": [9, 100, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 135, 138, 139, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 182, 252, 253, 254, 278, 306, 308], "group_configur": [3, 7, 19, 308], "group_configuration_index": [3, 7, 19, 113, 118, 119, 123, 128, 131, 132, 145, 146, 147, 148, 152, 153, 158, 159], "group_contributions_prev": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66], "group_extract": [37, 40, 41, 42, 43, 44, 45, 46, 47, 51, 119, 144, 147], "group_siz": [3, 5, 7, 8, 9, 15, 19, 22, 28, 30, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 60, 63, 99, 100, 113, 116, 117, 118, 119, 120, 122, 123, 126, 128, 131, 132, 135, 139, 140, 141, 144, 145, 146, 147, 148, 149, 152, 153, 158, 159, 165, 166, 169, 181, 182, 187, 191, 215, 234, 235, 236, 243, 254, 259, 261, 265, 266, 267, 269, 272, 288, 295, 305, 308], "group_size_": 308, "grow": 279, "grown": 279, "growth": 186, "gt": [295, 296, 300], "guarante": [10, 12, 279, 284, 285], "guess": [31, 223], "guid": [31, 223, 306, 308], "h": [11, 279, 289, 311], "h0": 245, "ha": [10, 12, 31, 38, 74, 75, 76, 90, 91, 109, 120, 134, 139, 193, 194, 195, 196, 197, 200, 201, 202, 203, 223, 225, 231, 233, 238, 279, 284, 285], "half": 238, "han": 311, "hand": [11, 24, 286, 289], "handl": [279, 303], "happen": [279, 294, 303, 308], "happi": 303, "has_canonical_format": [10, 284, 285], "has_edg": 279, "has_nod": 279, "has_sorted_indic": [10, 284, 285], "hash": 279, "hashabl": 279, "hatch": 238, "hatch_linewidth": 238, "have": [3, 7, 10, 12, 19, 31, 55, 56, 60, 63, 115, 132, 133, 175, 180, 209, 223, 228, 230, 232, 238, 239, 245, 257, 279, 284, 285, 289, 295, 296, 297, 298, 303, 304, 310], "have_unit": 238, "haw": 298, "hawk": [294, 295, 304, 310], "hawk_dove_dynam": 308, "header": 103, "hear": 303, "heatmap": 310, "heavi": 303, "height": 238, "hello": [10, 279, 285], "help": [2, 104, 179, 256, 302, 304, 310], "helper": [36, 209, 227, 239, 240, 257, 264, 271, 272, 300, 310], "henc": 279, "here": [10, 12, 31, 223, 238, 284, 285, 294, 295, 296, 297, 299, 305, 307, 308, 309], "hermitian": [3, 7, 10, 11, 12, 19, 24, 281, 282, 284, 285, 286], "heta": [123, 148], "hierarch": 311, "high": [296, 297, 303, 304, 305], "high_extract": [118, 146], "higher": [303, 309, 310], "highli": 303, "hillstrom": [31, 223], "histogram": 238, "hit": 238, "hmax": 245, "hmin": 245, "hold": [10, 12, 245, 279, 284, 285], "holder": [121, 122, 253, 254, 308], "homogen": [11, 24, 286, 305], "homogeneous_eigv": [11, 24, 286], "horizont": [209, 238, 239, 257], "horizontalalign": [209, 239, 257], "how": [10, 55, 56, 60, 63, 115, 132, 133, 173, 175, 177, 180, 189, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 217, 231, 233, 239, 257, 285, 294, 295, 301, 303, 304, 306, 308], "howev": [74, 75, 90, 91, 107, 175, 180, 209, 238, 239, 257, 279, 296, 297, 298, 301], "howpublish": 302, "hpc": 303, "html": 279, "http": [31, 120, 139, 223, 225, 279, 302, 303], "hu": 245, "huge": 228, "human": 295, "hunt": [123, 148, 304, 311], "hx": [31, 223], "hy": [31, 223], "hybr": [25, 26, 31, 223, 236, 263, 267, 295, 296, 297, 305], "hybrid": [31, 223], "hyper": [108, 109], "i": [2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 54, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 99, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 165, 168, 169, 175, 176, 179, 180, 181, 182, 183, 186, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 210, 213, 215, 217, 218, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 252, 253, 256, 257, 259, 261, 262, 263, 265, 266, 267, 268, 271, 272, 275, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "id": [238, 279], "idea": [115, 132, 133, 294, 300, 301], "ident": [10, 11, 12, 24, 25, 263, 279, 284, 285, 286, 295], "identifi": [112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 199, 234, 252, 265, 278, 279, 295], "idiom": [10, 12, 279, 284, 285], "ignor": [10, 12, 17, 238, 279, 284, 285, 289, 292], "ii": [295, 296, 297], "ij": [295, 296, 297], "imag": [10, 12, 238, 284, 285, 289], "imaginari": 289, "imhof": 311, "imit": [3, 7, 19, 79, 83, 84, 194, 195, 196, 197, 200, 201, 202, 203, 209, 239, 257, 295, 296, 297, 299, 305, 311], "immedi": 228, "immit": [295, 296, 297], "impact": 279, "imperfecttft": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92], "implement": [0, 2, 3, 4, 7, 10, 12, 13, 14, 19, 29, 31, 104, 112, 113, 115, 116, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 138, 139, 145, 146, 148, 152, 158, 175, 179, 180, 186, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 223, 238, 239, 240, 245, 252, 256, 257, 268, 278, 284, 285, 291, 295, 296, 300, 301, 302, 304, 305, 306, 309], "impli": [10, 284, 285], "implicit": [10, 284, 285], "import": [2, 3, 7, 10, 11, 12, 19, 24, 31, 101, 153, 173, 175, 177, 179, 180, 183, 209, 210, 223, 226, 229, 239, 245, 250, 256, 257, 273, 279, 284, 285, 286, 289, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 310], "improv": [11, 24, 286, 289], "imxer": 245, "in_layout": 238, "incid": 279, "includ": [3, 7, 10, 12, 19, 121, 174, 178, 225, 236, 238, 253, 267, 279, 284, 285, 307], "include_self": 238, "inclus": 238, "incoming_graph_data": 279, "incorrectli": 238, "increas": [3, 7, 19, 78, 194, 195, 196, 197, 200, 201, 202, 203, 238, 245, 289, 296, 297, 298, 309], "increment": [10, 12, 285], "ind": [10, 284, 285], "independ": [174, 175, 178, 180, 279, 298, 309], "index": [2, 3, 5, 7, 9, 10, 12, 16, 19, 22, 27, 28, 30, 100, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 166, 175, 179, 180, 182, 187, 188, 194, 195, 196, 197, 200, 201, 202, 203, 220, 224, 244, 245, 248, 252, 253, 254, 256, 261, 269, 274, 278, 284, 285, 288, 302, 303, 305, 308], "index_invading_strategi": [175, 180, 309], "index_resident_strategi": [175, 180, 309], "indic": [3, 4, 7, 10, 12, 14, 19, 29, 31, 38, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 108, 112, 120, 130, 134, 138, 139, 189, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 217, 220, 223, 232, 233, 234, 236, 238, 239, 244, 245, 252, 257, 265, 267, 268, 278, 284, 285, 287, 295, 296, 297, 300, 301, 305, 309, 310], "individu": [3, 7, 8, 9, 15, 16, 19, 22, 27, 28, 99, 100, 101, 112, 115, 120, 124, 126, 127, 130, 133, 135, 136, 138, 139, 140, 141, 142, 149, 150, 155, 161, 173, 175, 177, 180, 181, 182, 183, 188, 189, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 215, 224, 234, 235, 239, 243, 248, 252, 257, 259, 261, 265, 266, 274, 278, 288, 295, 296, 297, 305], "indptr": [10, 12, 284, 285], "induc": 279, "industri": [31, 223], "inequ": 245, "inexact": [31, 223], "inf": [105, 228], "infeas": 309, "infer": [10, 284, 285], "infin": [11, 24, 286, 289], "infinit": [4, 6, 14, 29, 32, 108, 186, 190, 249, 268, 275, 294, 295, 304, 305], "info": 279, "infodict": 245, "inform": [10, 13, 103, 120, 139, 209, 228, 238, 239, 240, 245, 257, 276, 279, 284, 285, 304], "infti": 305, "inherit": [36, 112, 130, 138, 252, 278, 279, 306, 307, 309], "init": [298, 299, 306], "init_gam": 306, "init_st": [174, 175, 178, 180, 298, 309], "initi": [26, 31, 32, 55, 56, 60, 63, 73, 89, 115, 116, 117, 124, 125, 126, 127, 132, 133, 173, 174, 175, 177, 178, 180, 190, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 223, 239, 245, 249, 257, 275, 279, 307, 309, 310], "initial_act": 54, "initial_st": [174, 178], "initialize_all_black": 193, "initialize_st": [194, 195, 196, 197, 200, 201, 202, 203], "ink": 238, "inlin": [295, 296, 297, 298, 299, 300, 301], "inlinebackend": [296, 297], "inner": 279, "inplac": [10, 279, 284, 285], "inprevi": 81, "input": [9, 10, 11, 12, 20, 24, 100, 135, 141, 149, 164, 165, 168, 169, 182, 191, 194, 195, 196, 197, 200, 201, 202, 203, 214, 242, 245, 258, 271, 272, 279, 284, 285, 286, 289, 295, 296, 300, 305], "insert": 12, "insid": [21, 123, 148, 209, 210, 218, 219, 221, 222, 229, 238, 239, 246, 247, 257, 264, 289, 300, 301, 303, 307, 308], "insight": 309, "inspect": 306, "inspir": 279, "instabl": [236, 267], "instal": 279, "instanc": [112, 115, 116, 117, 120, 124, 130, 133, 138, 139, 228, 235, 238, 240, 252, 266, 278], "instanci": 294, "instanti": [10, 12, 38, 134, 209, 234, 239, 257, 265, 284, 285, 294, 307], "instead": [3, 7, 10, 12, 19, 228, 245, 279, 281, 284, 285, 295, 296, 297, 306, 308, 309], "instruct": 303, "insur": [120, 139], "int": [2, 3, 5, 7, 8, 9, 10, 12, 15, 16, 19, 22, 23, 25, 26, 27, 28, 30, 32, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 160, 161, 165, 166, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 215, 216, 217, 219, 220, 222, 224, 225, 228, 229, 234, 235, 236, 238, 239, 240, 243, 244, 245, 247, 248, 249, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 274, 275, 278, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 298, 306, 308], "int32": [10, 12, 284, 285], "int64": [2, 3, 7, 9, 10, 12, 16, 19, 100, 112, 115, 120, 130, 133, 135, 136, 138, 139, 141, 142, 149, 150, 155, 161, 173, 174, 175, 177, 178, 179, 180, 182, 188, 189, 224, 248, 252, 256, 274, 278, 284, 285, 287, 300], "int64_t": 309, "int8": [10, 284, 285], "int_0": [31, 223], "integ": [3, 7, 8, 9, 10, 12, 19, 99, 100, 124, 135, 140, 141, 149, 181, 182, 209, 215, 216, 220, 231, 233, 236, 238, 239, 243, 244, 245, 257, 259, 260, 267, 279, 284, 285, 298, 303, 309], "integr": [236, 245, 267, 295, 304], "integrodifferenti": [31, 223], "intend": [12, 228, 238, 304], "intens": [2, 3, 7, 19, 22, 175, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 256, 261, 294, 298, 305, 306, 309], "intent": [168, 169, 271, 272], "interact": [3, 5, 7, 15, 19, 23, 30, 113, 114, 118, 122, 123, 124, 125, 127, 131, 132, 145, 146, 148, 152, 158, 165, 166, 173, 174, 177, 178, 186, 187, 191, 199, 234, 235, 236, 238, 254, 262, 265, 266, 267, 269, 295, 305, 306, 307, 308], "interest": [303, 309], "interfac": [112, 114, 130, 138, 193, 199, 252, 278, 279, 304, 306], "interg": 298, "interior": [220, 221, 222, 244, 246, 247], "intermedi": [10, 12, 175, 180, 284, 285], "intermediari": [107, 175, 180], "intern": [8, 99, 112, 120, 121, 122, 130, 138, 139, 140, 181, 215, 238, 243, 245, 252, 253, 254, 259, 278, 307], "interpol": 238, "interpret": 238, "intersect": 238, "interv": [228, 245], "introduc": [117, 120, 126, 139, 295, 296, 297, 305], "introspect": 240, "invad": [3, 7, 19, 22, 27, 28, 175, 180, 261, 305, 309], "invading_strategy_index": [2, 179, 256, 305], "invari": 240, "invas": [210, 229, 294, 305, 309, 311], "invers": [16, 31, 136, 142, 150, 155, 161, 188, 223, 224, 248, 274], "invest": [119, 147], "investig": [120, 139, 303], "invis": 238, "invok": [31, 223], "involv": [3, 5, 7, 19, 30, 166, 187, 269, 305], "io": 303, "ipykernel": 303, "ipython": [296, 300], "is_commitment_valid": [37, 40, 41, 42, 43, 44, 45, 46, 47, 144], "is_direct": 279, "is_multigraph": 279, "is_stochast": [68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92], "is_transform_set": 238, "isbn": 311, "isinst": [238, 240], "isol": 238, "issu": [17, 238, 279, 292, 296, 300, 303], "issubclass": 240, "ital": 298, "item": [12, 279], "iter": [13, 31, 115, 117, 133, 209, 223, 225, 239, 257, 279, 308], "iterator_of_edg": 279, "iterator_of_nod": 279, "itertool": 279, "its": [10, 11, 12, 21, 24, 31, 38, 74, 75, 76, 77, 78, 81, 83, 90, 91, 112, 115, 130, 132, 133, 134, 138, 174, 178, 193, 195, 196, 201, 202, 210, 223, 229, 238, 252, 278, 279, 284, 285, 286, 295, 296, 297, 298, 308, 310], "itself": 238, "iuc": 289, "ixpr": 245, "j": [2, 3, 4, 7, 10, 11, 12, 14, 15, 19, 22, 24, 27, 28, 29, 31, 120, 124, 126, 127, 139, 179, 186, 194, 195, 196, 197, 200, 201, 202, 203, 223, 245, 256, 261, 268, 284, 285, 286, 288, 291, 295, 296, 297, 300, 305, 311], "jac": [31, 223, 245], "jacobian": [23, 31, 223, 245, 262], "jadoul": 302, "jet": 311, "ji": 305, "jochem": 311, "join": 279, "joinstyl": 238, "jorg": [31, 223, 311], "journal": [302, 311], "jump": 295, "jupyt": 303, "just": [10, 238, 279, 284, 285, 307], "k": [3, 7, 10, 12, 19, 106, 107, 108, 109, 123, 126, 148, 195, 196, 201, 202, 209, 239, 257, 279, 284, 285, 288, 291, 295, 296, 297, 298, 300, 301, 305, 310], "k3": 279, "karl": 311, "karlin": 311, "keep": [127, 307], "kei": [10, 12, 194, 195, 196, 197, 200, 201, 202, 203, 245, 279, 284, 285, 309], "kellei": [31, 223], "kenneth": [31, 223], "keydict": 279, "keyerror": 279, "keyword": [31, 223, 238, 279], "kfc": [123, 148], "kind": [10, 12, 284, 285], "kl": 298, "know": [291, 296, 297], "known": [31, 223, 296, 297], "krambeck": 311, "krylov": [31, 223], "kth": [10, 12, 284, 285], "kwarg": [2, 13, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 103, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 173, 174, 175, 177, 178, 179, 180, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 228, 230, 232, 238, 252, 253, 254, 256, 278], "kwd": 240, "l": [238, 279], "la": [31, 223], "label": [112, 115, 120, 130, 133, 138, 139, 209, 210, 229, 230, 231, 232, 233, 238, 239, 245, 252, 257, 278, 279, 298], "label_fonts": [209, 239, 257], "label_rot": [209, 239, 257], "labelpad": [209, 239, 257], "lambda": [31, 209, 223, 239, 257, 289, 295, 296, 297, 300, 305, 310], "lapack": [170, 184], "larg": [2, 12, 31, 163, 175, 176, 179, 180, 223, 238, 245, 256, 298, 309, 310], "larger": [302, 309], "largest": 245, "largest_wcc": 279, "last": [75, 91, 174, 178, 245, 295, 298], "last_opponent_mov": 307, "later": 238, "latest": [303, 306], "latter": [3, 7, 10, 19, 240, 284, 285], "lattic": 225, "launch": 294, "layout": 238, "lead": [238, 289], "learn": [209, 239, 257, 305, 307, 308], "least": [31, 115, 132, 133, 175, 180, 223, 225, 245], "leav": [209, 239, 257, 296, 297], "left": [11, 31, 209, 213, 223, 231, 233, 238, 239, 240, 241, 257, 289, 295, 305], "legaci": 305, "legend": [238, 245, 298], "len": [10, 210, 229, 240, 245, 279, 285, 298], "lenaert": 302, "length": [10, 12, 13, 16, 20, 32, 136, 142, 150, 155, 161, 188, 189, 190, 209, 224, 228, 230, 231, 232, 233, 238, 239, 245, 248, 249, 257, 274, 275, 279, 280, 283, 284, 285, 298], "leniw": 245, "lenrw": 245, "less": [10, 12, 225, 284, 285], "let": 245, "letter": [210, 229, 238, 311], "level": [125, 126, 209, 228, 238, 239, 257, 279, 304, 309], "levenberg": [31, 223], "levin": [120, 139], "lexicograph": [5, 30, 166, 187, 269], "lhp": 289, "li": [21, 25, 263], "librari": [108, 109, 245, 279, 296, 297, 302, 303, 304, 308], "lie": [10, 12, 284, 285], "like": [9, 10, 12, 100, 135, 141, 149, 182, 238, 279, 284, 285, 295, 302, 306, 307], "likelihood": [3, 7, 19], "lil": [10, 12, 284, 285], "lil_arrai": [10, 12, 284, 285], "limit": [2, 3, 7, 19, 105, 179, 194, 195, 196, 197, 200, 201, 202, 203, 210, 228, 229, 238, 256, 291, 295, 296, 297, 299, 300, 304], "linalg": [11, 24, 286, 289], "linalgerror": [11, 24, 286, 289], "line": [31, 209, 210, 213, 223, 229, 231, 233, 238, 239, 241, 257, 279, 296, 297, 298], "line2d": [213, 238, 241], "linear": [12, 31, 223, 228], "linearmix": [31, 223], "linelabel": [231, 233], "linestyl": 238, "linewidth": [209, 231, 233, 238, 239, 257, 295, 296, 297, 298, 300, 301], "linewidth_edg": [231, 233], "linewidth_gradi": [231, 233], "linewidth_random_drift": [209, 239, 257], "link": [194, 195, 196, 197, 200, 201, 202, 203, 279, 303, 304], "linspac": [165, 191, 209, 239, 245, 257, 295, 296, 297, 305, 310], "linux": 303, "list": [3, 7, 9, 10, 12, 19, 20, 22, 23, 25, 26, 57, 66, 98, 100, 103, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 138, 139, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 174, 178, 182, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 219, 221, 222, 226, 229, 231, 233, 234, 236, 238, 239, 240, 246, 247, 250, 252, 253, 254, 257, 260, 261, 262, 263, 264, 265, 267, 273, 278, 279, 280, 283, 284, 285, 287, 288, 290, 298, 299, 303, 304], "lit": [119, 147], "llc": 311, "lm": [26, 31, 223], "loc": [228, 245], "local": [114, 127, 199, 245], "locat": 228, "log": [228, 298], "log1p": [10, 284, 285], "logic": [10, 12, 234, 265, 284, 285], "logspac": 298, "long": [105, 303, 304, 309], "longer": [10, 12, 228, 284, 285, 289, 295, 296, 297], "longest": 240, "look": [217, 221, 222, 238, 246, 247, 279, 296, 297, 298], "lookup": 279, "loop": 279, "loos": 81, "loren": 311, "lose": [116, 117, 126, 127, 279], "loss": [126, 127], "lot": [209, 210, 229, 239, 257, 298], "low": [279, 298, 305], "low_extract": [118, 146], "lower": [238, 245], "lowest": 245, "lsoda": 245, "lt": [295, 296, 300], "lw": 238, "lwork": 289, "ly": [10, 12, 284, 285], "m": [3, 7, 10, 11, 12, 15, 19, 20, 24, 31, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 167, 168, 169, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 223, 238, 239, 252, 253, 254, 257, 270, 271, 272, 278, 284, 285, 286, 287, 289, 291, 303, 305, 306, 311], "m1": 303, "mac": 303, "maco": 303, "macosx": [238, 303], "made": [221, 222, 246, 247, 308], "magic": [296, 297], "magnitud": [245, 296], "magnitut": 297, "mai": [10, 11, 12, 24, 31, 38, 114, 116, 117, 125, 134, 193, 199, 209, 210, 223, 229, 230, 232, 238, 239, 240, 257, 279, 284, 285, 286, 289, 295, 296, 297, 302, 303, 304, 305, 306], "main": [10, 12, 168, 169, 209, 239, 257, 271, 272, 284, 285, 295], "main_pag": 303, "maintain": [10, 12, 279, 284, 285], "major": [10, 12, 228, 231, 233, 284, 285], "major_axis_stored_valu": [10, 12, 284, 285], "major_ticks_length": [231, 233], "make": [12, 74, 75, 79, 90, 91, 119, 147, 195, 196, 201, 202, 279, 291, 295, 296, 297, 298, 302, 303, 309], "manag": 303, "manfr": 311, "mani": [189, 193, 209, 210, 229, 231, 233, 239, 257, 279, 308, 309], "manipul": 279, "manual": 306, "map": [3, 7, 9, 19, 100, 135, 141, 149, 182, 209, 238, 239, 257, 279, 298, 310], "marcharp": 225, "margin": 238, "marker": [209, 231, 233, 239, 257, 295, 296, 297, 298, 300, 301, 305, 310], "marker_edgecolor": [231, 233], "marker_facecolor": [231, 233, 295, 296, 297, 305], "marker_linewidth": [231, 233], "marker_plot_freq": [231, 233, 295, 296, 297, 305], "marker_s": [231, 233, 295, 296, 297, 305], "markov": [3, 7, 9, 19, 100, 135, 141, 149, 182, 210, 229, 281, 282, 295, 296, 297, 305, 311], "marotzk": 311, "marquardt": [31, 223], "martin": 311, "martinez": [31, 223], "master": 225, "match": [115, 121, 124, 133, 194, 195, 196, 197, 200, 201, 202, 203, 238, 253], "math": [31, 223], "mathbf": 295, "mathemat": [31, 223, 311], "matplotlib": [31, 209, 210, 223, 228, 229, 231, 233, 234, 235, 238, 239, 245, 257, 265, 266, 295, 296, 297, 298, 299, 300, 301, 303], "matric": [2, 3, 7, 10, 11, 12, 19, 24, 165, 179, 191, 256, 284, 285, 286], "matrix": [2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 19, 22, 23, 24, 27, 28, 29, 30, 101, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 164, 166, 167, 168, 169, 174, 175, 178, 179, 180, 183, 187, 210, 214, 217, 229, 234, 235, 236, 242, 245, 252, 253, 254, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 281, 282, 284, 285, 286, 289, 291, 294, 295, 296, 297, 298, 304, 305, 306, 309], "matrix2d": 306, "matrix2playergamehold": [2, 175, 179, 180, 256, 295, 297, 305, 308, 310], "matrixnplayergamehold": [306, 308], "max": [10, 31, 223, 245, 284, 285, 311], "max_displayed_label_lett": [210, 229], "max_long_int": [175, 180], "max_round": 105, "maximum": [2, 10, 12, 105, 117, 175, 179, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 228, 229, 239, 245, 256, 257, 284, 285, 309], "maxit": [31, 223], "maxprint": [10, 12, 284, 285], "maxtick": 228, "mayb": [17, 292], "mdg": 279, "me": 303, "mean": [2, 10, 12, 31, 179, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 213, 223, 239, 241, 245, 256, 257, 284, 285, 298], "mean_population_st": [193, 194, 195, 196, 197, 200, 201, 202, 203], "mean_squared_error": 298, "meant": 193, "meantim": 303, "mechan": [38, 134, 194, 195, 196, 197, 200, 201, 202, 203], "media": 311, "member": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 194, 195, 196, 197, 200, 201, 202, 203, 291, 295, 296, 297], "membership": 279, "memmori": 298, "memo": 240, "memori": [2, 10, 12, 13, 80, 92, 112, 120, 130, 138, 139, 175, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 228, 252, 256, 278, 279, 284, 285, 307, 309], "merg": 26, "mersenne_twister_engin": 105, "meshgrid": [165, 191], "messag": [17, 31, 223, 245, 279, 292], "met": [116, 117, 127], "metaclass": [38, 134], "method": [0, 2, 3, 7, 10, 12, 13, 19, 25, 26, 31, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 101, 103, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 138, 139, 144, 145, 146, 147, 148, 152, 153, 158, 159, 160, 168, 169, 173, 174, 175, 177, 178, 179, 180, 183, 189, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 223, 228, 234, 238, 239, 240, 245, 252, 253, 254, 256, 257, 263, 265, 271, 272, 278, 279, 284, 285, 288, 291, 295, 296, 297, 298, 300, 301, 302, 304, 307, 308, 310], "method_find_root": [236, 267], "metric": [126, 298], "mg": 279, "mgrid": [31, 223], "midwai": 228, "might": [10, 12, 115, 120, 132, 133, 139, 175, 180, 193, 279, 284, 285, 295, 298], "milinski": [116, 117, 308, 311], "mimic": 307, "min": [10, 77, 284, 285], "min_": [118, 146], "min_extract": [118, 146], "min_nb_cooper": [126, 127], "min_round": [105, 117], "min_strategy_frequ": [210, 229, 299], "miniforg": 303, "minimum": [10, 12, 105, 117, 126, 127, 209, 210, 229, 239, 245, 257, 284, 285], "minlength": [10, 12, 284, 285], "minor": [10, 12, 228, 231, 233, 284, 285], "minor_ticks_length": [231, 233], "minpack": [31, 223], "misc": [238, 302], "miscellan": 279, "miss": 307, "mistak": [74, 75, 79, 90, 91], "miter": 238, "mix": [23, 31, 223, 262, 296, 297, 309], "ml": 245, "mode": 303, "model": [2, 32, 112, 114, 117, 120, 126, 130, 138, 139, 179, 190, 199, 209, 234, 239, 249, 252, 256, 257, 265, 275, 278, 294, 295, 300, 301, 302, 304, 306, 309], "modif": [31, 223, 228, 303], "modifi": [10, 12, 112, 120, 130, 138, 139, 238, 245, 252, 278, 279, 284, 285, 308], "modul": [6, 172, 176, 277, 279, 302], "mojav": 303, "moment": [3, 7, 19, 194, 195, 196, 197, 200, 201, 202, 203, 209, 239, 257, 298], "monomorph": [2, 3, 7, 19, 175, 179, 180, 210, 229, 256, 296, 297], "monoton": 245, "mont": [294, 302], "moran": [3, 7, 19, 219, 222, 247, 264, 291, 294, 296, 297, 300, 305], "more": [3, 5, 7, 10, 19, 30, 31, 107, 153, 166, 175, 180, 187, 193, 219, 223, 238, 240, 245, 264, 269, 279, 284, 285, 291, 294, 296, 297, 298, 304, 305], "moreov": [3, 7, 19, 175, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 238, 296, 297], "most": [3, 7, 10, 12, 19, 115, 132, 133, 238, 279, 284, 285, 291, 298, 300, 301, 303], "mostli": 305, "mous": 238, "mouseev": 238, "mouseov": 238, "move": [10, 12, 55, 56, 57, 60, 63, 66, 81, 83, 84, 238, 284, 285, 307], "mpltype": 238, "mse": 298, "mu": [2, 3, 7, 19, 175, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 245, 256, 295, 296, 297, 298, 300, 301, 305, 309], "much": [55, 56, 60, 63, 175, 180, 209, 238, 239, 245, 257, 298], "multi": [10, 12, 125, 284, 285, 309], "multidigraph": 279, "multidimension": [10, 12, 284, 285], "multigraph": 279, "multipl": [10, 11, 12, 24, 117, 174, 178, 194, 195, 196, 197, 200, 201, 202, 203, 228, 238, 279, 284, 285, 286, 305, 308], "multipli": [10, 12, 116, 128, 159, 284, 285], "multiplying_factor": [120, 128, 139, 159], "multiprecis": 303, "multivari": [108, 109], "multivariate_hypergeometric_pdf": [106, 107, 108], "muse": 245, "must": [3, 5, 7, 10, 12, 19, 30, 31, 108, 109, 112, 113, 115, 116, 117, 118, 120, 123, 125, 126, 130, 131, 132, 133, 138, 139, 145, 146, 148, 152, 158, 165, 166, 187, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 223, 228, 230, 232, 234, 238, 239, 240, 245, 252, 257, 265, 269, 278, 279, 284, 285, 289, 295, 296, 297, 306, 307, 308, 309], "mutabl": 279, "mutant": [2, 175, 179, 180, 256, 305, 309], "mutat": [2, 3, 7, 19, 175, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 210, 229, 256, 291, 296, 297, 298, 299, 304, 309, 311], "mxhnil": 245, "mxord": 245, "mxordn": 245, "mxstep": 245, "my": 279, "my_abstract_method": [38, 134], "my_arg": [31, 223], "my_kwarg": [31, 223], "my_network": [174, 178], "mycustomgam": 306, "mycustomstrategi": 307, "n": [3, 4, 5, 7, 9, 10, 12, 14, 15, 19, 20, 21, 22, 23, 28, 29, 30, 100, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 135, 138, 141, 145, 146, 147, 148, 149, 152, 153, 154, 158, 159, 165, 166, 167, 168, 169, 182, 187, 191, 225, 228, 236, 238, 240, 252, 253, 254, 261, 262, 267, 268, 269, 270, 271, 272, 278, 279, 284, 285, 291, 295, 296, 297, 303, 304, 306, 311], "n_": 305, "n_strategi": [112, 120, 130, 138, 139, 175, 180, 252, 278], "nabla": [31, 223], "name": [13, 112, 115, 120, 130, 133, 138, 139, 193, 209, 228, 239, 240, 252, 257, 278, 279, 303], "nan": [10, 11, 24, 284, 285, 286, 289], "nanmax": [10, 284, 285], "nanmin": [10, 284, 285], "nash": [296, 297], "nation": [127, 311], "natur": [120, 139], "navig": 303, "navigationtoolbar2": 238, "nb_action": 124, "nb_column": 103, "nb_commit": [119, 147], "nb_committ": [37, 40, 41, 42, 43, 44, 45, 46, 47, 144], "nb_edge_point": [219, 264], "nb_gener": [173, 174, 175, 177, 178, 180, 309], "nb_group_combin": [3, 7, 19], "nb_group_configur": [3, 5, 7, 19, 28, 30, 113, 115, 116, 117, 118, 119, 122, 123, 128, 131, 132, 133, 145, 146, 147, 148, 152, 153, 158, 159, 165, 166, 187, 191, 254, 269, 306, 308], "nb_group_configurations_": 308, "nb_initial_random_point": [25, 26, 263, 295, 296, 297, 300, 305], "nb_interior_point": [219, 264, 300], "nb_minor_tick": [231, 233], "nb_of_initial_points_for_root_search": [236, 267, 301], "nb_point": [22, 209, 239, 257, 261, 295, 296, 297, 300, 310], "nb_points_per_axi": 310, "nb_points_simplex": [236, 267], "nb_round": [116, 117, 124, 125], "nb_row": 103, "nb_run": [175, 180, 309], "nb_simul": [174, 178], "nb_state": [2, 116, 117, 124, 126, 175, 179, 180, 209, 239, 256, 257], "nb_strategi": [2, 3, 5, 7, 8, 16, 19, 22, 25, 26, 27, 28, 30, 32, 99, 101, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 138, 139, 140, 142, 145, 146, 147, 148, 150, 152, 153, 155, 158, 159, 161, 166, 174, 175, 178, 179, 180, 181, 183, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 224, 243, 248, 249, 252, 253, 254, 256, 259, 261, 263, 269, 274, 275, 278, 288, 291, 295, 296, 297, 300, 305, 306, 308], "nb_strategies_": [113, 115, 118, 123, 131, 132, 133, 145, 146, 148, 152, 158, 308], "nb_trajectori": [209, 239, 257], "nbr": 279, "nbrdict": 279, "nbrsdict": 279, "nbunch": 279, "nbunch_it": 279, "ndarrai": [2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 100, 101, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 164, 165, 166, 167, 168, 169, 173, 174, 175, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 234, 235, 236, 239, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 281, 282, 284, 285, 286, 287, 289, 291, 308, 309], "ndigit": [10, 12, 284, 285], "ndim": [10, 12, 284, 285], "ndiv": 228, "nearest": 238, "nearli": 245, "necessari": [6, 10, 12, 115, 120, 133, 139, 284, 285, 303, 309], "necessarili": [10, 12, 284, 285], "nedg": 279, "need": [31, 115, 126, 132, 133, 223, 228, 238, 279, 291, 298, 299, 303, 307, 308, 309], "neg": [23, 26, 32, 190, 210, 229, 236, 245, 249, 262, 267, 275, 295], "neighbor": [114, 125, 127, 194, 195, 196, 197, 199, 200, 201, 202, 203, 279], "neighborhood": [114, 125, 127, 194, 195, 196, 197, 199, 200, 201, 202, 203], "neighbour": [195, 196, 201, 202, 204, 205, 206, 207], "neighbourhood": [195, 196, 201, 202], "neq": [2, 179, 256], "nest": 238, "net1": [174, 178], "net2": [174, 178], "net3": [174, 178], "network": [114, 125, 127, 173, 174, 177, 178, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 306, 309], "networkgroup": [205, 206], "networkx": [210, 229, 279, 303], "networkxerror": 279, "neutral": [234, 265], "never": [209, 239, 257, 279, 296, 297], "new": [3, 7, 10, 12, 19, 113, 115, 118, 119, 121, 122, 123, 128, 131, 132, 133, 145, 146, 147, 148, 152, 153, 158, 159, 193, 209, 231, 233, 239, 245, 253, 254, 257, 279, 284, 285, 294, 303, 304, 311], "newton": [31, 223], "next": [13, 279, 295], "nfe": 245, "nfgstrategi": [210, 229, 299], "nice": 276, "niter": 279, "nje": 245, "nnode": 279, "nnz": [10, 12, 284, 285], "node": [194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 210, 229, 279], "node_attr_dict_factori": 279, "node_dict": 279, "node_dict_factori": 279, "node_edgecolor": [210, 229], "node_for_ad": 279, "node_labels_bottom_separ": [210, 229], "node_labels_top_separ": [210, 229], "node_linewidth": [210, 229], "node_list": [204, 205, 206, 207], "node_s": [210, 229, 299], "nodeborder_width": [231, 233], "nodedata": 279, "nodedataview": 279, "nodes": [231, 233], "nodes_for_ad": 279, "nodeview": 279, "non": [10, 11, 12, 24, 32, 190, 220, 238, 244, 245, 249, 275, 279, 281, 284, 285, 286, 289], "nonaxi": [10, 12, 284, 285], "none": [3, 7, 10, 11, 12, 13, 17, 19, 22, 24, 31, 53, 54, 59, 62, 65, 68, 70, 71, 72, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 210, 213, 219, 223, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 245, 252, 253, 254, 257, 261, 264, 265, 266, 267, 278, 279, 284, 285, 286, 289, 292, 307, 308], "nonexist": 279, "nonlinear": [31, 223], "nonneg": 238, "nonsingular": 228, "nonstiff": 245, "nonzero": [10, 12, 284, 285], "norm": 245, "normal": [2, 11, 38, 115, 124, 125, 133, 134, 179, 225, 256, 281, 282, 294, 296, 297, 303, 304], "normalform": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 210, 229, 299, 307], "normalformgam": [112, 115, 120, 130, 133, 138, 139, 210, 229, 252, 278, 298, 299, 308], "notat": 279, "note": [3, 7, 10, 12, 19, 31, 113, 115, 118, 123, 131, 132, 133, 145, 146, 148, 152, 158, 175, 180, 210, 223, 229, 236, 238, 240, 267, 279, 284, 285, 289, 296, 297, 298, 304], "notebook": [294, 295, 298, 299], "noth": [10, 12, 126, 228, 238, 240, 284, 285], "notimplementederror": [10, 284, 285], "now": [175, 180, 289, 294, 296, 297, 298, 307], "nowak": 311, "np": [2, 3, 5, 7, 9, 10, 11, 12, 16, 19, 24, 25, 30, 31, 32, 100, 101, 112, 115, 120, 130, 133, 135, 136, 138, 139, 141, 142, 149, 150, 155, 161, 165, 166, 173, 174, 175, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 191, 209, 210, 216, 223, 224, 226, 229, 234, 235, 236, 239, 245, 248, 249, 250, 252, 256, 257, 260, 263, 265, 266, 267, 269, 273, 274, 275, 278, 284, 285, 286, 289, 295, 296, 297, 298, 299, 300, 301, 305, 308, 310], "nplayerstaghunt": 308, "npt": [3, 7, 19, 25, 263], "nqu": 245, "nst": 245, "null": 279, "num": [295, 296, 297, 305], "number": [2, 3, 5, 7, 8, 9, 10, 11, 12, 15, 16, 19, 22, 24, 25, 26, 27, 28, 30, 32, 57, 66, 99, 100, 101, 103, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 165, 166, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 217, 219, 221, 222, 224, 225, 228, 229, 231, 233, 234, 235, 236, 238, 239, 243, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 259, 261, 263, 264, 265, 266, 267, 269, 274, 275, 278, 279, 280, 284, 285, 286, 288, 289, 291, 296, 297, 298, 303, 308, 309, 310], "number_of_edg": 279, "number_of_nod": 279, "numer": [2, 3, 4, 5, 7, 14, 19, 29, 30, 31, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 101, 102, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 145, 146, 147, 148, 152, 153, 158, 159, 166, 216, 223, 252, 253, 254, 256, 260, 268, 269, 278, 279, 294, 295, 302, 303, 304, 306], "numerical_": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 103, 105, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 138, 145, 146, 147, 148, 152, 153, 158, 159, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 252, 253, 254, 278], "numpi": [3, 5, 7, 9, 10, 11, 12, 19, 20, 24, 25, 26, 30, 31, 100, 101, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 138, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 164, 166, 167, 168, 169, 182, 183, 186, 187, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 210, 214, 217, 218, 219, 220, 221, 222, 223, 226, 229, 231, 233, 239, 242, 244, 245, 246, 247, 250, 252, 253, 254, 257, 258, 263, 264, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 295, 296, 297, 298, 299, 300, 301, 303, 305, 308, 309, 310], "nx": [31, 223, 279], "ny": [31, 223], "o": [10, 128, 153, 159, 238, 279, 284, 285, 295, 296, 297, 298, 299, 305, 311], "object": [2, 3, 7, 10, 12, 13, 19, 31, 36, 94, 97, 107, 108, 109, 112, 115, 117, 120, 125, 130, 132, 133, 138, 139, 160, 175, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 223, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 245, 252, 256, 257, 265, 266, 267, 278, 279, 284, 285, 288, 291, 299, 309], "observ": [238, 295], "obtain": [31, 162, 194, 195, 196, 197, 200, 201, 202, 203, 223, 245, 279, 298, 309, 310], "occasion": 305, "occupi": 107, "occur": [10, 12, 117, 175, 180, 238, 284, 285, 296, 297, 298, 305], "occurr": [10, 284, 285], "od": [236, 245, 267], "odeint": [209, 236, 239, 257, 267, 295], "odepack": 245, "off": [10, 12, 210, 229, 238, 284, 285, 295, 299, 300, 301], "offer": [209, 239, 257], "offset": [10, 12, 238, 284, 285, 287], "often": [107, 108, 109, 231, 233, 279], "oid": 238, "ok": 303, "omega": 245, "omit": [24, 286], "onc": [12, 76, 127, 175, 180, 238, 279, 296, 297, 303, 307], "one": [2, 3, 7, 19, 31, 106, 115, 117, 121, 122, 126, 127, 133, 168, 169, 174, 175, 178, 179, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 223, 225, 235, 238, 253, 254, 256, 266, 271, 272, 279, 289, 295, 296, 297, 305], "ones": [10, 209, 239, 257, 284, 285, 300, 301], "oneshotcrd": 308, "onli": [3, 7, 10, 11, 12, 19, 24, 31, 115, 120, 125, 128, 133, 139, 153, 159, 175, 180, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 221, 222, 223, 229, 231, 233, 234, 235, 238, 239, 240, 245, 246, 247, 257, 265, 266, 279, 284, 285, 286, 289, 291, 294, 296, 297, 298, 301, 303, 305, 308, 309], "onoffseq": 238, "open": 303, "openmp": [171, 185, 303], "oper": [10, 12, 279, 284, 285], "opinion": 153, "opinion_valu": 153, "oppon": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 307], "opponent_act": 307, "opponent_payoff": 307, "opposit": [209, 239, 245, 257], "optim": [2, 25, 31, 165, 175, 176, 179, 180, 191, 223, 256, 263, 302, 305], "optimizeresult": [31, 223], "option": [3, 7, 10, 11, 12, 19, 21, 22, 23, 24, 25, 26, 31, 209, 210, 223, 229, 234, 235, 236, 238, 239, 245, 257, 261, 262, 263, 265, 266, 267, 279, 284, 285, 286, 288, 289, 298, 303], "order": [5, 10, 12, 24, 30, 166, 187, 209, 239, 245, 257, 269, 279, 283, 284, 285, 286, 303], "ordinari": [10, 11, 12, 24, 245, 284, 285, 286, 295], "org": [31, 120, 139, 223, 279, 303], "organ": 310, "orient": [238, 245], "origin": [10, 12, 279, 284, 285], "osx": 303, "other": [3, 5, 7, 10, 12, 19, 30, 31, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 121, 166, 175, 180, 187, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 223, 238, 239, 253, 257, 269, 279, 284, 285, 295, 296, 297, 303, 305], "otherwis": [3, 7, 10, 12, 19, 21, 57, 66, 73, 89, 117, 126, 127, 175, 180, 209, 216, 228, 236, 238, 239, 245, 257, 260, 267, 279, 284, 285], "ouc": 289, "our": [245, 294, 300, 301, 303], "out": [10, 12, 112, 120, 130, 138, 139, 228, 231, 233, 252, 278, 279, 284, 285, 303, 306], "outcom": [107, 125, 298], "outer": 279, "outgo": 279, "output": [10, 12, 105, 113, 116, 117, 118, 119, 121, 122, 124, 126, 128, 131, 145, 146, 147, 152, 153, 158, 159, 175, 180, 238, 245, 253, 254, 283, 284, 285, 289, 295, 298, 306], "outsid": [10, 12, 217, 218, 219, 238, 264, 284, 285, 289], "over": [2, 10, 12, 15, 21, 32, 101, 113, 115, 117, 118, 120, 123, 126, 131, 132, 133, 139, 145, 146, 148, 152, 158, 165, 174, 175, 178, 179, 180, 183, 190, 191, 209, 236, 238, 239, 249, 256, 257, 267, 275, 279, 284, 285, 295, 296, 297, 305, 308, 309, 310], "overflow": [107, 175, 180], "overlap": [231, 233, 287], "overload": [109, 124, 125, 175, 180, 240], "overrid": [228, 238, 306], "overridden": [38, 134, 238, 240], "overview": 304, "overwrit": [11, 24, 115, 132, 133, 286, 289], "overwrite_a": [11, 24, 286, 289], "overwrite_b": 11, "own": [279, 298, 307], "own_act": 307, "own_payoff": 307, "p": [10, 12, 31, 70, 74, 75, 77, 90, 91, 105, 108, 120, 139, 168, 169, 210, 223, 229, 271, 272, 284, 285, 295, 296, 297, 299, 305, 311], "p_": [296, 297], "p_bottom": [31, 223], "p_left": [31, 223], "p_right": [31, 223], "p_top": [31, 223], "pacheco": [120, 123, 126, 127, 139, 148, 308, 311], "packag": [0, 110, 279, 303], "pad": [209, 231, 233, 239, 257, 298], "page": 302, "pair": [22, 80, 92, 121, 122, 124, 125, 126, 253, 254, 261, 279, 289, 295, 296, 297], "pairwis": [2, 3, 7, 19, 23, 124, 125, 175, 179, 180, 186, 194, 195, 196, 197, 200, 201, 202, 203, 234, 235, 236, 256, 262, 265, 266, 267, 291, 294, 296, 297, 299, 304], "pairwisecomparison": [3, 5, 7, 19, 30, 166, 175, 180, 186, 187, 234, 235, 265, 266, 269, 294, 295, 296, 297, 299, 300, 305, 310], "pairwisecomparisonnumer": [2, 3, 4, 7, 14, 19, 29, 101, 115, 132, 133, 173, 177, 179, 183, 256, 268, 298, 306], "pairwisemorannumer": 309, "panchor": [209, 239, 257], "parallel": [279, 302, 303], "param": [3, 7, 19, 54, 70, 74, 75, 79, 90, 91, 107, 108, 109, 119, 120, 139, 147, 283], "paramet": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 99, 100, 101, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 164, 165, 166, 167, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 295, 296, 297, 302, 305, 308, 309], "parent": 307, "parselmouth": 302, "part": [220, 238, 244, 279, 289, 302], "particip": [3, 7, 19, 117, 124], "particular": [31, 115, 132, 133, 223, 303], "pass": [3, 7, 10, 12, 19, 25, 31, 115, 132, 133, 223, 230, 232, 236, 245, 263, 267, 279, 284, 285, 289, 299, 308], "past": 125, "patch": [238, 296, 297, 298], "path": [113, 116, 117, 118, 119, 123, 124, 128, 131, 132, 145, 146, 147, 148, 152, 153, 158, 159, 238, 279, 303, 309], "path_effect": 238, "path_graph": 279, "pattern": 238, "pavlov": [53, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 210, 229, 299], "payoff": [2, 3, 4, 5, 7, 14, 15, 19, 22, 23, 27, 28, 29, 30, 77, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 165, 166, 168, 169, 175, 179, 180, 186, 187, 191, 194, 195, 196, 197, 200, 201, 202, 203, 209, 234, 235, 236, 239, 252, 253, 254, 256, 257, 261, 262, 265, 266, 267, 268, 269, 271, 272, 278, 288, 291, 294, 295, 296, 297, 298, 300, 304, 305, 306, 307, 310], "payoff_matrix": [3, 5, 7, 19, 22, 23, 30, 121, 122, 124, 125, 165, 166, 175, 180, 186, 187, 191, 234, 235, 236, 253, 254, 261, 262, 265, 266, 267, 269, 295, 297, 301, 305], "payoffs_": [113, 115, 118, 123, 131, 132, 133, 145, 146, 148, 152, 158, 308], "payoffs_contain": 308, "pc": [175, 180], "pchang": 238, "pcolormesh": [31, 223], "peer": 153, "peer_pressure_import": 153, "peer_pressure_ratio": 153, "pend": 245, "pendulum": 245, "peopl": 279, "pep": 240, "per": [12, 108, 112, 116, 117, 120, 124, 125, 126, 130, 138, 139, 174, 175, 178, 180, 252, 278, 309], "perfectli": 228, "perform": [2, 10, 11, 16, 24, 136, 142, 150, 155, 161, 165, 175, 179, 180, 188, 191, 224, 238, 245, 248, 256, 274, 284, 285, 286, 289, 294], "period": [173, 174, 175, 177, 178, 180, 298], "permit": 279, "perpendicular": 238, "person": [123, 148, 311], "personal_threshold": 54, "perturb": [209, 221, 222, 239, 246, 247, 257], "pgf": 238, "pgg": [96, 308], "pgg_behavior": [128, 159], "pggoneshotstrategi": [98, 128, 159], "phase": [173, 174, 177, 178, 309], "php": 303, "physic": [238, 311], "physrevlett": 311, "pi": 245, "pi_": [123, 126, 148], "pi_i": 305, "pick": 238, "pickabl": 238, "picker": 238, "pickev": 238, "pickl": [13, 240], "pixel": [210, 229, 238], "place": [10, 12, 112, 115, 120, 125, 130, 133, 138, 139, 228, 238, 252, 278, 284, 285], "plai": [57, 66, 73, 80, 89, 92, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 194, 195, 196, 197, 200, 201, 202, 203, 252, 253, 254, 278, 306, 307, 308], "plain": 240, "plan": [209, 239, 257, 298, 305, 307, 309, 310], "plane": [209, 239, 257, 289], "platform": [10, 12, 279, 284, 285, 303], "player": [3, 4, 5, 6, 7, 14, 15, 19, 22, 28, 29, 30, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 73, 74, 75, 82, 89, 90, 91, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 139, 145, 146, 147, 148, 152, 153, 158, 159, 165, 166, 186, 187, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 234, 235, 236, 253, 254, 261, 265, 266, 267, 268, 269, 277, 291, 295, 296, 297, 304, 306], "player_strategi": [115, 116, 117, 120, 121, 122, 124, 126, 133, 139, 253, 254], "player_typ": [121, 253], "pleas": [281, 296, 297, 303], "plot": [162, 277, 294, 295, 296, 297, 304, 305], "plot_gradi": [168, 169, 209, 210, 229, 239, 257, 271, 272, 295, 296, 297, 305, 310], "plot_pairwise_comparison_rule_dynamics_in_simplex": 301, "plot_pairwise_comparison_rule_dynamics_in_simplex_without_root": [295, 301], "plot_quiv": 310, "plot_replicator_dynamics_in_simplex": [295, 301], "plot_stationary_distribut": 310, "plot_strategy_distribut": 310, "plote": [210, 229], "plt": [31, 209, 210, 223, 229, 234, 235, 236, 238, 239, 245, 257, 265, 266, 267, 295, 296, 297, 298, 299, 300, 301], "pltote": [209, 239, 257], "pna": [116, 126, 311], "png": [296, 297], "point": [3, 7, 10, 12, 19, 21, 22, 23, 25, 26, 32, 164, 165, 190, 191, 209, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 228, 230, 231, 232, 233, 234, 236, 238, 239, 241, 242, 244, 245, 246, 247, 249, 257, 258, 260, 261, 262, 263, 264, 265, 267, 275, 277, 284, 285, 287, 294, 295, 300, 303], "point_barycentr": [164, 214, 242, 258], "pointer": [10, 125, 284, 285], "polar": [116, 117], "polygon": 238, "pool": [117, 119, 147, 307], "poor": 289, "pop_siz": [3, 7, 16, 19, 101, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 130, 131, 132, 133, 136, 138, 139, 142, 145, 146, 147, 148, 150, 152, 153, 155, 158, 159, 161, 175, 180, 183, 188, 189, 210, 224, 229, 248, 252, 253, 254, 274, 278, 298, 306, 308], "pop_stat": [295, 296, 297], "popul": [2, 3, 4, 5, 6, 7, 8, 9, 14, 16, 19, 20, 22, 25, 27, 28, 29, 30, 32, 99, 100, 101, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 165, 166, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 219, 222, 224, 229, 234, 235, 239, 243, 247, 248, 249, 252, 253, 254, 256, 257, 259, 261, 263, 264, 265, 266, 268, 269, 271, 272, 274, 275, 278, 287, 288, 291, 294, 304, 308, 309, 311], "population_count": [108, 109], "population_s": [2, 22, 116, 117, 124, 126, 179, 194, 195, 196, 197, 200, 201, 202, 203, 234, 235, 256, 261, 265, 266, 295, 297, 301], "population_st": [3, 7, 19, 20, 115, 116, 117, 119, 120, 121, 122, 124, 126, 133, 139, 147, 253, 254, 308], "population_strategi": [194, 195, 196, 197, 200, 201, 202, 203], "posit": [3, 7, 19, 23, 26, 31, 209, 210, 213, 223, 229, 236, 238, 239, 241, 245, 257, 262, 267, 289], "possibl": [3, 7, 8, 10, 12, 15, 19, 99, 112, 115, 117, 120, 122, 126, 128, 130, 132, 133, 138, 139, 140, 153, 159, 175, 180, 181, 193, 194, 195, 196, 197, 200, 201, 202, 203, 215, 230, 231, 232, 233, 238, 243, 252, 254, 259, 278, 283, 284, 285, 291, 295, 298, 303, 305, 308, 309], "possibli": [228, 279], "potenti": 117, "powel": [31, 223], "power": [10, 12, 279, 284, 285, 303], "pre": [12, 112, 120, 130, 138, 139, 252, 278], "pre_calculate_edge_fit": [2, 179, 256], "pre_computed_payoff": [3, 7, 19], "preced": 279, "precis": [3, 7, 10, 12, 19, 175, 180, 284, 285, 296, 300, 303], "precomput": [2, 122, 126, 179, 254, 256, 304], "pred": 279, "predecessor": 279, "predefin": [117, 122, 254], "predifin": 105, "predominantli": 238, "present": [3, 7, 19, 25, 115, 132, 133, 193, 210, 229, 263, 279, 308], "preserv": [10, 12, 189, 284, 285], "press": 311, "pressur": [153, 300, 301], "prevent": [116, 127, 311], "previou": [3, 7, 19, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 296, 297, 307], "previous": [238, 296, 297], "primarili": 240, "prime": 245, "princeton": 311, "print": [10, 12, 31, 112, 120, 130, 138, 139, 223, 228, 245, 252, 276, 278, 283, 284, 285, 296, 297, 306], "printmessg": 245, "prob_increase_decreas": [3, 7, 19], "prob_increase_decrease_with_mut": [3, 7, 19], "probabl": [2, 3, 7, 19, 21, 32, 70, 74, 75, 77, 80, 82, 90, 91, 92, 105, 108, 109, 116, 117, 126, 127, 175, 179, 180, 190, 194, 195, 196, 197, 200, 201, 202, 203, 210, 229, 249, 256, 275, 279, 294, 295, 296, 297, 298, 304, 305, 310], "problem": [11, 24, 31, 175, 180, 217, 223, 245, 286, 289, 298, 302, 303, 309], "proceed": [127, 311], "process": [3, 7, 19, 175, 180, 238, 279, 291, 294, 296, 297, 300, 305, 311], "prod_": 305, "produc": [106, 194, 195, 196, 197, 200, 201, 202, 203, 211, 221, 222, 246, 247], "product": [10, 12, 107, 284, 285], "prof": 302, "project": [238, 303], "prop": 238, "propag": [10, 127, 284, 285], "proper": 238, "properli": 238, "properti": [10, 12, 38, 68, 73, 74, 75, 80, 88, 89, 90, 91, 92, 94, 97, 103, 105, 116, 117, 120, 124, 126, 134, 139, 160, 175, 180, 238, 279, 284, 285], "proport": [194, 195, 196, 197, 200, 201, 202, 203], "propos": [117, 119, 147], "proposes_commit": [37, 40, 41, 42, 43, 44, 45, 46, 47, 144], "protect": 279, "provid": [2, 10, 12, 36, 105, 126, 127, 132, 168, 169, 175, 179, 180, 193, 234, 235, 236, 238, 256, 265, 266, 267, 271, 272, 279, 284, 285, 294, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311], "prune": [10, 284, 285], "public": [126, 127, 128, 153, 159, 308], "publish": 302, "pull": 303, "punish": [77, 78], "pure": [306, 308], "purpos": [308, 310], "py": [225, 296, 297, 306], "pybind11": [303, 306, 307], "pybind11_object": [2, 53, 59, 62, 65, 68, 88, 103, 105, 112, 114, 130, 138, 173, 174, 175, 177, 178, 179, 180, 193, 199, 252, 256, 278], "pycharmproject": [296, 297], "pygraphviz": 279, "pylab": [295, 296, 297], "pypa": 303, "pyplot": [31, 209, 210, 223, 229, 231, 233, 239, 245, 257, 298, 299, 300, 301], "python": [6, 124, 225, 245, 277, 279, 302, 304, 307], "qr": 289, "quad": 245, "quasi": 289, "queri": 238, "quick": 303, "quietli": 279, "quit": 298, "r": [10, 12, 13, 77, 126, 210, 229, 284, 285, 298, 299, 303], "rad2deg": [10, 284, 285], "radiu": 238, "rais": [10, 11, 17, 24, 228, 240, 279, 284, 285, 286, 289, 292], "raise_if_exce": 228, "ralf": 311, "ram": 309, "rand": [2, 5, 30, 165, 166, 179, 187, 191, 256, 269, 310], "randint": 298, "random": [2, 5, 22, 25, 26, 30, 32, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 165, 166, 179, 187, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 229, 234, 238, 239, 249, 256, 257, 261, 263, 265, 269, 275, 294, 296, 297, 299, 305, 307, 310], "random_drift_edg": [209, 239, 257], "random_gener": 105, "randomli": [126, 194, 195, 196, 197, 200, 201, 202, 203, 295, 296, 297, 305], "rang": [3, 7, 13, 19, 209, 228, 238, 239, 257, 279, 295, 297, 298, 300, 302, 305, 308, 310], "rare": [305, 309], "raster": 238, "rasterization_demo": 238, "rate": [3, 7, 19, 175, 180, 186, 204, 205, 206, 207, 305, 309], "rather": [10, 12, 31, 223, 284, 285], "ratio": [153, 209, 239, 257], "ration": [209, 239, 257], "raydan": [31, 223], "rc": [228, 298], "re": [122, 238, 254], "reach": [117, 126, 127, 175, 180, 245, 296, 297], "read": [10, 12, 279, 284, 285], "readabl": 279, "readi": 308, "real": [10, 11, 12, 24, 284, 285, 286, 289], "realli": [238, 303], "realloc": [112, 120, 130, 138, 139, 252, 278], "reason": [3, 7, 10, 12, 19, 115, 133, 193, 209, 238, 239, 257, 284, 285, 296, 297, 302, 308], "recalcul": 125, "receiv": [115, 125, 126, 127, 132, 133, 307], "receive_result": 307, "recent": 303, "recommend": [3, 7, 19, 115, 132, 133, 193, 231, 233, 281, 303, 305], "recomput": [121, 253], "reconstruct": 305, "rectangl": 238, "rectilinear": 238, "recurs": 238, "red": [279, 298], "redefin": [57, 66], "redrawn": 238, "reduc": [2, 3, 7, 10, 12, 19, 179, 256, 279, 284, 285, 295, 296, 297], "reduct": 279, "redund": 309, "reed": 311, "ref": 306, "refer": [1, 31, 33, 52, 67, 69, 111, 208, 209, 223, 239, 240, 257, 279, 304], "refernec": [209, 239, 257], "refin": [209, 239, 257], "reflect": 279, "regardless": 307, "region": 238, "regist": [238, 304], "regular": 238, "rel": 116, "relat": 304, "relationship": [10, 284, 285], "releas": [303, 305], "relev": 279, "reli": [2, 179, 256], "relim": 238, "remain": [10, 12, 116, 117, 126, 238, 284, 285], "remov": [10, 12, 238, 279, 284, 285], "remove_callback": 238, "remove_edg": 279, "remove_edges_from": 279, "remove_nod": 279, "remove_nodes_from": 279, "renam": 193, "render": 238, "rendererbas": 238, "reorder": 289, "repeat": [2, 11, 24, 70, 75, 91, 124, 125, 179, 238, 240, 245, 256, 286, 307], "repeatedli": [2, 179, 256], "replac": [10, 12, 121, 122, 210, 229, 253, 254, 279, 284, 285, 295, 296, 297, 299], "replic": [4, 5, 9, 14, 15, 22, 23, 27, 28, 29, 30, 100, 135, 141, 149, 165, 166, 182, 186, 187, 191, 209, 210, 229, 231, 233, 236, 239, 257, 261, 262, 267, 268, 269, 294, 300, 301, 304, 310], "replicator_equ": [3, 5, 7, 19, 30, 166, 187, 209, 239, 257, 269, 295, 296, 297, 300, 301, 305, 310], "replicator_equation_n_play": [165, 186, 191, 305], "report": [238, 279, 303], "repositori": 302, "repr": [10, 12, 240, 284, 285], "repres": [2, 5, 9, 10, 12, 15, 16, 20, 23, 30, 31, 32, 100, 101, 112, 113, 114, 118, 119, 123, 124, 125, 127, 128, 130, 131, 132, 135, 136, 138, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 164, 165, 166, 174, 178, 179, 182, 183, 186, 187, 188, 190, 191, 199, 209, 210, 214, 223, 224, 229, 231, 233, 238, 239, 242, 248, 249, 252, 256, 257, 258, 262, 269, 274, 275, 278, 279, 284, 285, 291, 295, 296, 297, 300, 301, 303, 307, 309], "represent": [3, 7, 9, 10, 12, 19, 100, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 138, 139, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 182, 199, 238, 252, 278, 279, 284, 285, 308], "reproduc": [3, 7, 19, 279], "request": [10, 12, 245, 279, 284, 285, 289, 303], "requir": [3, 7, 10, 12, 19, 31, 38, 112, 115, 117, 126, 127, 130, 133, 134, 138, 168, 169, 175, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 223, 245, 252, 271, 272, 278, 279, 280, 284, 285, 302, 303, 304, 305, 307, 308], "research": 302, "reset": 307, "reshap": [10, 12, 284, 285], "resid": [2, 3, 7, 19, 27, 28, 175, 179, 180, 238, 256, 305, 309], "resident_strategy_index": [2, 179, 256, 305], "residu": [31, 223], "resiz": [10, 12, 284, 285], "resolut": [236, 267, 296, 297], "resourc": [110, 117, 119, 147, 307], "respect": [10, 12, 245, 279, 284, 285, 289], "respons": 78, "rest": [54, 55, 56, 57, 60, 63, 66, 76, 245, 279], "result": [2, 10, 11, 12, 24, 106, 107, 121, 124, 162, 174, 175, 178, 179, 180, 186, 194, 195, 196, 197, 200, 201, 202, 203, 209, 238, 239, 253, 256, 257, 279, 284, 285, 286, 289, 294, 296, 297, 300, 303, 304, 305], "retriev": [236, 267, 308], "return": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 307, 308, 309, 310], "return_mod": [216, 260], "reus": [112, 120, 130, 138, 139, 252, 278], "revers": [10, 12, 284, 285, 298], "review": 311, "reward": 77, "rgen": 311, "rho_": 305, "rhp": 289, "rich": 307, "right": [11, 24, 31, 209, 213, 223, 231, 233, 239, 240, 241, 257, 286, 289, 295, 300, 301, 305], "rightarrow": 305, "rigor": [10, 284, 285], "rint": [10, 284, 285], "risk": [116, 117, 120, 126, 127, 139, 294, 308, 311], "rng": 238, "room": 279, "root": [25, 26, 209, 216, 217, 219, 231, 233, 235, 236, 238, 239, 257, 260, 263, 264, 266, 267, 295, 296, 297, 300, 301, 305, 310], "roots_xi": [209, 239, 257, 295, 300, 301], "rotat": [209, 238, 239, 257], "roughli": [194, 195, 196, 197, 200, 201, 202, 203], "round": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 105, 115, 116, 117, 124, 125, 126, 133, 238, 308], "roundoff": 289, "routin": 279, "row": [3, 5, 7, 10, 12, 15, 19, 20, 30, 103, 113, 115, 118, 119, 123, 128, 131, 132, 133, 145, 146, 147, 148, 152, 153, 158, 159, 166, 174, 178, 187, 245, 269, 284, 285], "row_ind": [10, 284, 285], "royal": 311, "rsf2csf": 289, "rspb": 311, "rtol": 245, "rule": [2, 173, 175, 177, 179, 180, 234, 235, 256, 265, 266, 279, 294, 304, 307], "run": [3, 7, 10, 19, 115, 117, 132, 133, 173, 174, 175, 177, 178, 180, 194, 195, 196, 197, 200, 201, 202, 203, 228, 284, 285, 294, 296, 300, 302, 303, 304, 306], "run_with_mut": [175, 180, 309], "run_without_mut": [175, 180, 309], "runtim": 240, "runtimeerror": 279, "runtimewarn": [296, 297], "s1r0": [55, 60], "s1r1": [55, 60], "s1r2": [55, 60], "s1r3": [55, 60], "s1r4": [55, 60], "s2r0": [55, 60], "s2r1": [55, 60], "s2r2": [55, 60], "s2r3": [55, 60], "s2r4": [55, 60], "s41893": [120, 139], "saddl": [23, 209, 216, 230, 231, 232, 233, 234, 236, 239, 257, 260, 262, 265, 267, 277, 287], "saddle_point": [230, 232], "saddle_points_idx": 287, "saddle_typ": [230, 232], "safe": [10, 12, 279, 284, 285], "same": [2, 3, 7, 10, 12, 19, 31, 70, 73, 89, 165, 174, 175, 178, 179, 180, 191, 223, 230, 232, 234, 238, 245, 256, 265, 279, 284, 285, 295, 298, 303, 307, 309, 310], "same_kind": [10, 12, 284, 285], "sampl": [26, 32, 108, 109, 189, 190, 209, 236, 239, 245, 249, 257, 267, 275, 295, 296, 297, 298], "sample_count": [108, 109], "sample_simplex": [3, 5, 7, 8, 9, 19, 30, 32, 99, 100, 101, 135, 140, 141, 149, 166, 181, 182, 183, 187, 189, 190, 209, 215, 239, 243, 249, 257, 259, 269, 275, 298, 305, 308], "sample_simplex_directli": [32, 190, 249, 275], "sane": [31, 223], "santo": [120, 126, 127, 139, 302, 308, 311], "sate": [221, 222, 246, 247], "satisfi": [10, 284, 285, 289], "satisifi": 225, "save": [112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 194, 195, 196, 197, 200, 201, 202, 203, 238, 252, 253, 254, 278, 279, 308], "save_payoff": [112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 252, 253, 254, 278, 306, 308], "savefig": 238, "scalar": [10, 12, 31, 223, 238, 245, 284, 285], "scale": [31, 223, 225, 228, 238, 245], "scan": [10, 284, 285], "scatter": 298, "scenario": [115, 132, 133, 303], "scienc": [127, 311], "scipi": [2, 3, 7, 10, 11, 12, 19, 24, 25, 31, 101, 106, 107, 175, 179, 180, 183, 223, 236, 245, 256, 263, 267, 279, 281, 282, 284, 285, 286, 289, 303], "scope": 240, "scratch": [304, 307], "screen": 238, "scypi": 295, "sd": [210, 229, 295, 300, 301], "sdim": 289, "seaborn": 298, "search": [25, 31, 219, 223, 236, 263, 264, 267, 302], "second": [3, 7, 10, 12, 19, 31, 165, 191, 223, 226, 245, 250, 273, 279, 284, 285, 302, 311], "section": [31, 223], "sed_analyt": 296, "see": [3, 7, 10, 19, 31, 209, 223, 238, 239, 240, 257, 279, 284, 285, 298, 306, 308], "seed": [238, 298, 299], "segment": 238, "select": [2, 3, 7, 10, 12, 19, 20, 22, 25, 27, 28, 31, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 125, 174, 175, 178, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 223, 228, 230, 231, 232, 233, 234, 235, 239, 256, 257, 261, 263, 265, 266, 279, 284, 285, 287, 294, 295, 296, 297, 298, 300, 304, 305, 309], "self": [10, 12, 13, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 138, 144, 145, 146, 147, 148, 152, 153, 158, 159, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 238, 240, 252, 253, 254, 278, 279, 284, 285, 307, 308], "selfish": 311, "semant": [10, 12, 284, 285], "sens": [31, 223, 279], "separ": [209, 210, 229, 238, 239, 257, 279, 289], "seq": 238, "sequenc": [73, 89, 245, 279, 309], "seri": [209, 239, 257, 298], "serv": 240, "set": [10, 12, 15, 106, 107, 115, 117, 119, 127, 132, 133, 147, 162, 163, 168, 169, 228, 238, 245, 271, 272, 279, 284, 285, 295, 302, 307, 308, 310], "set_aa": 238, "set_agg_filt": 238, "set_alpha": 238, "set_angl": 238, "set_anim": 238, "set_antialias": 238, "set_aspect": [295, 300, 301], "set_axi": 228, "set_capstyl": 238, "set_cent": 238, "set_clip_box": 238, "set_clip_on": 238, "set_clip_path": 238, "set_color": 238, "set_context": 298, "set_ec": 238, "set_edgecolor": 238, "set_facecolor": [238, 296, 297, 298], "set_fc": 238, "set_figur": 238, "set_fil": 238, "set_gid": 238, "set_hatch": 238, "set_hatch_linewidth": 238, "set_height": 238, "set_in_layout": 238, "set_joinstyl": 238, "set_l": 238, "set_label": 238, "set_linestyl": 238, "set_linewidth": 238, "set_lw": 238, "set_mouseov": 238, "set_param": 228, "set_path_effect": 238, "set_pick": 238, "set_radiu": 238, "set_raster": 238, "set_shap": [10, 12, 284, 285], "set_sketch_param": 238, "set_snap": 238, "set_transform": 238, "set_url": 238, "set_vis": 238, "set_width": 238, "set_xlabel": [296, 297, 298], "set_xlim": [296, 297, 298], "set_xscal": 298, "set_ylabel": [296, 297, 298], "set_zord": 238, "setdefault": [10, 285], "setdiag": [10, 12, 284, 285], "setp": [296, 297, 298], "sever": [10, 12, 115, 133, 279, 284, 285, 294, 304, 309], "sg": 279, "shade": [31, 209, 223, 239, 257, 295, 300, 301], "shadow": [209, 239, 257], "shall": [194, 195, 196, 197, 200, 201, 202, 203], "shallow": 279, "shape": [2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 100, 101, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 130, 131, 132, 133, 135, 138, 139, 141, 145, 146, 147, 148, 149, 152, 153, 158, 159, 165, 166, 168, 169, 174, 175, 178, 179, 180, 182, 183, 186, 187, 191, 238, 245, 252, 253, 254, 256, 261, 262, 263, 268, 269, 271, 272, 278, 284, 285, 286, 291, 295, 300, 306, 308], "share": [10, 12, 120, 139, 279, 284, 285], "shift": 81, "short": 279, "shortcut": 279, "shot": [115, 126, 127, 133, 308], "should": [3, 7, 10, 12, 19, 31, 57, 66, 80, 92, 106, 107, 108, 112, 115, 120, 130, 132, 133, 138, 139, 168, 169, 175, 180, 186, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 217, 219, 222, 223, 228, 229, 238, 239, 245, 247, 252, 257, 264, 271, 272, 278, 279, 280, 284, 285, 289, 291, 303], "show": [31, 210, 223, 229, 245, 295, 296, 297, 298, 299, 300, 301, 304], "show_opt": [31, 223], "shown": [210, 229, 231, 233, 301], "shrink": [209, 239, 257, 295], "shrunken": 238, "si": 298, "siam": [31, 223], "side": [11, 24, 286], "side_slop": [209, 239, 257], "sigmund": 311, "sign": [10, 12, 23, 262, 284, 285], "signatur": [10, 12, 31, 223, 238, 240, 245, 284, 285], "significantli": [23, 112, 120, 130, 138, 139, 252, 262, 278], "silent": 279, "similar": [12, 279], "similarli": 279, "simpl": [209, 238, 239, 257, 279, 295, 298, 310], "simpler": 279, "simplex": [2, 3, 7, 8, 19, 21, 25, 26, 32, 99, 140, 164, 168, 169, 179, 181, 189, 190, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 231, 233, 234, 235, 236, 239, 242, 243, 244, 246, 247, 249, 250, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 271, 272, 273, 275, 294, 310], "simplex2d": [168, 169, 226, 234, 235, 236, 265, 266, 267, 271, 272, 273, 295, 300, 301, 304], "simplex_s": [219, 264], "simpli": [228, 279, 298, 303, 307, 308], "simplif": [296, 297], "simplifi": [3, 7, 19, 294, 295, 304, 305, 307], "simul": [2, 102, 112, 115, 116, 120, 121, 122, 126, 130, 132, 133, 138, 139, 162, 172, 173, 174, 175, 176, 177, 178, 179, 180, 234, 252, 253, 254, 256, 265, 278, 294, 302, 303, 304, 306, 307, 311], "simultan": [5, 30, 166, 187, 235, 266, 269], "sin": [10, 245, 284, 285], "sinc": [107, 115, 132, 133, 175, 180, 209, 239, 257, 279, 295, 296, 297, 298, 300, 301, 303], "singl": [12, 116, 126, 174, 178, 189, 194, 195, 196, 197, 200, 201, 202, 203, 228, 238, 279, 294, 296, 297, 304], "single_edge_dict": 279, "singleton": 279, "singular": [228, 245], "sinh": [10, 284, 285], "situat": 295, "size": [2, 3, 7, 8, 9, 10, 12, 13, 16, 19, 22, 28, 55, 56, 60, 63, 99, 100, 106, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 169, 175, 179, 180, 181, 182, 188, 189, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 215, 219, 222, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 245, 247, 248, 252, 253, 254, 256, 257, 259, 261, 264, 265, 266, 267, 272, 274, 278, 279, 283, 284, 285, 289, 294, 295, 296, 297, 298, 300, 305, 309, 310], "sketch": 238, "sketch_param": 238, "skip": [175, 180, 235, 266, 303], "sklearn": 298, "skyrm": 311, "slice": [10, 12, 284, 285], "slightli": 279, "slop": 228, "slot": 280, "slots_per_bin": 280, "slow": [10, 12, 284, 285], "slower": 305, "small": [2, 3, 7, 19, 179, 210, 229, 238, 256, 291, 296, 297, 299, 304, 311], "smaller": [175, 180], "sml": [2, 3, 7, 19, 179, 210, 229, 256, 291, 296, 297, 299, 304], "sn": 298, "snap": 238, "snippet": [10, 285], "so": [10, 11, 24, 209, 231, 233, 238, 239, 245, 257, 279, 284, 285, 286, 287, 295, 296, 297, 298, 299, 303], "social": [116, 209, 239, 257, 294, 299, 305, 311], "societi": [31, 223, 311], "socrat": 302, "sol": [31, 223, 245], "sole": [10, 12, 284, 285], "solid": 238, "solut": [31, 223, 245, 303], "solv": [11, 31, 223, 245, 302, 303], "solve_ivp": 245, "solver": [31, 175, 180, 223, 236, 245, 267], "some": [10, 12, 105, 193, 194, 195, 196, 197, 200, 201, 202, 203, 228, 238, 240, 277, 279, 284, 285, 295, 296, 297, 300], "someconcretestructur": [173, 177], "someth": 279, "sometim": 279, "sommerfeld": 311, "soon": [296, 298, 300], "sort": [10, 12, 279, 284, 285, 289], "sort_indic": [10, 284, 285], "sorted_indic": [10, 284, 285], "sourc": [3, 4, 7, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 60, 63, 66, 73, 74, 75, 80, 89, 90, 91, 92, 94, 95, 97, 98, 110, 115, 118, 119, 120, 123, 128, 132, 133, 134, 139, 144, 146, 147, 148, 153, 154, 156, 159, 160, 164, 167, 168, 169, 204, 205, 206, 207, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "souza": 311, "sp": [10, 12, 284, 285], "space": [2, 9, 10, 100, 135, 141, 149, 175, 179, 180, 182, 228, 238, 245, 256, 284, 285, 296, 297, 302, 305, 309, 310], "spars": [2, 3, 7, 10, 12, 19, 101, 175, 179, 180, 183, 256, 279, 281, 282, 284, 285, 309], "sparsiti": [10, 12, 284, 285], "spatial": [114, 125, 127, 173, 177, 199, 306], "spec": [296, 297], "special": [10, 106, 107, 284, 285], "specif": [2, 24, 31, 112, 115, 117, 120, 122, 124, 130, 133, 138, 139, 175, 179, 180, 193, 223, 252, 254, 256, 278, 279, 286], "specifi": [2, 10, 12, 21, 112, 115, 116, 120, 125, 130, 133, 138, 139, 174, 175, 178, 179, 180, 210, 229, 238, 252, 256, 278, 279, 284, 285, 289, 298], "spectral": [31, 223], "speed": [112, 115, 120, 130, 132, 133, 138, 139, 238, 252, 278, 279, 309], "spend": [295, 300, 301], "spent": [296, 297], "spine": [231, 233], "spine_bottom_linewidth": [231, 233], "spine_left_linewidth": [231, 233], "spine_right_linewidth": [231, 233], "spine_top_linewidth": [231, 233], "spline": 238, "spmatrix": [10, 12, 284, 285], "springer": 311, "sqrt": [10, 284, 285], "squar": [3, 7, 11, 19, 31, 223, 238, 291, 308], "src": [296, 297], "stabil": [23, 26, 209, 216, 231, 233, 234, 235, 236, 239, 257, 260, 262, 265, 266, 267, 295, 296, 297, 300, 301, 304, 305, 309], "stability_mod": [234, 236, 265, 267], "stabl": [23, 26, 209, 216, 230, 231, 232, 233, 234, 236, 239, 257, 260, 262, 265, 267, 287, 296, 297, 300, 301, 303, 309], "stack": 238, "stacklevel": [17, 292], "stag": [123, 148, 304, 311], "stai": 81, "stale": 238, "standalon": 304, "standard": [4, 10, 14, 29, 36, 125, 186, 268, 284, 285, 303, 305], "star": [8, 99, 140, 181, 215, 238, 243, 259], "start": [3, 7, 19, 25, 174, 175, 178, 180, 209, 236, 239, 245, 257, 263, 267, 294], "state": [2, 3, 7, 8, 9, 13, 16, 19, 20, 25, 99, 100, 101, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 210, 215, 221, 222, 224, 229, 230, 232, 238, 243, 245, 246, 247, 248, 253, 254, 256, 259, 263, 274, 287, 295, 296, 297, 298, 302, 305, 307, 308, 309, 310], "state_frequ": 298, "stateless": 307, "static": [3, 7, 19, 37, 40, 41, 42, 43, 44, 45, 46, 47, 80, 92, 144, 174, 178, 194, 195, 196, 197, 200, 201, 202, 203, 240, 307], "stationari": [3, 7, 19, 23, 25, 101, 116, 117, 126, 175, 180, 183, 209, 210, 229, 231, 233, 239, 257, 262, 263, 281, 282, 294, 295, 296, 297, 304], "stationary_distribut": [101, 116, 117, 126, 183, 209, 210, 229, 239, 257, 299, 310], "stationary_point": [23, 262, 298], "stationary_points_analyt": 298, "stationary_sml": [296, 297], "stationary_with_mu": [296, 297], "statu": 238, "std": [105, 306], "stem": 238, "step": [2, 173, 175, 177, 179, 180, 194, 195, 196, 197, 200, 201, 202, 203, 209, 228, 239, 245, 256, 257, 295, 296, 297, 300, 301, 303], "stick": 238, "sticki": 238, "sticky_edg": 238, "stiff": 245, "still": [114, 115, 132, 133, 175, 180, 193, 199, 240, 295, 303], "stochast": [3, 7, 19, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 104, 175, 180, 294, 296, 297, 299, 304, 309, 310, 311], "stochdynam": [2, 4, 5, 14, 29, 30, 166, 175, 179, 180, 186, 187, 209, 210, 229, 239, 256, 257, 268, 269, 294, 296, 298, 300, 301, 305], "stop": [175, 180, 298], "storag": [10, 12, 284, 285], "store": [3, 7, 10, 12, 19, 102, 103, 112, 115, 116, 120, 121, 122, 124, 126, 130, 133, 138, 139, 175, 180, 209, 239, 245, 252, 253, 254, 257, 278, 279, 284, 285, 309], "str": [10, 12, 25, 26, 31, 37, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 97, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 144, 145, 146, 147, 148, 152, 153, 158, 159, 160, 199, 209, 210, 223, 229, 236, 238, 239, 240, 252, 253, 254, 257, 263, 267, 278, 279, 284, 285, 308], "straightforward": [209, 239, 257, 279], "strang": 228, "strateg": 308, "strategi": [2, 3, 4, 5, 7, 8, 9, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 165, 166, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 215, 224, 229, 231, 233, 243, 248, 249, 252, 253, 254, 256, 259, 261, 262, 263, 268, 269, 274, 275, 277, 278, 288, 291, 294, 296, 297, 298, 301, 304, 305, 306, 308], "strategist": [3, 7, 19, 288], "strategy_distribut": 310, "strategy_i": [288, 295, 296, 297], "strategy_id": [118, 146], "strategy_index": [112, 113, 114, 118, 119, 123, 125, 127, 128, 130, 131, 132, 138, 145, 146, 147, 148, 152, 153, 158, 159, 199, 252, 278, 306, 308], "strategy_j": 288, "strategy_label": [210, 229, 299, 310], "strategy_pair": 124, "strategy_payoff": 308, "streamplot": [209, 239, 257, 294], "strength": [2, 179, 209, 234, 235, 239, 256, 257, 265, 266, 295, 296, 297], "string": [10, 12, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 199, 209, 210, 229, 230, 232, 238, 239, 240, 252, 257, 278, 279, 284, 285, 289, 306, 308], "stroke": 238, "strongli": [31, 223], "struct": [173, 177], "structur": [3, 4, 7, 10, 12, 14, 19, 29, 102, 103, 114, 125, 173, 174, 175, 177, 178, 180, 268, 279, 284, 285, 304, 306, 309], "studi": [0, 296, 297, 298, 302, 309], "style": [209, 231, 233, 238, 239, 257, 279, 296, 297, 298], "sub": [228, 238], "subclass": [113, 118, 123, 124, 125, 131, 132, 145, 146, 148, 152, 158, 193, 228, 238, 240, 279, 306], "subdivis": 228, "subfigur": 238, "subgraph": 279, "submodul": [1, 33, 52, 67, 69, 96, 111, 192, 208], "subplot": [209, 210, 229, 239, 257, 295, 296, 297, 298, 299, 300, 301], "subscript": 279, "subsequ": [74, 75, 78, 90, 91, 126], "subset": [106, 107], "subtract": [10, 12, 284, 285], "success": [13, 31, 116, 117, 126, 127, 223, 245, 305], "successfulli": [31, 223, 245, 309], "successor": 279, "sucker": 77, "suit": [235, 266], "suitabl": [31, 223, 309], "sum": [2, 5, 10, 12, 21, 30, 32, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 108, 109, 128, 159, 165, 166, 179, 186, 187, 190, 191, 209, 239, 249, 256, 257, 269, 275, 279, 280, 284, 285, 310], "sum_": [120, 139, 295, 296, 297, 305], "sum_along_axi": [10, 12, 284, 285], "sum_dupl": [10, 284, 285], "summari": 279, "super": [38, 134, 307, 308], "suppli": [10, 234, 238, 265, 284, 285], "support": [3, 7, 10, 12, 19, 114, 122, 125, 171, 185, 199, 228, 238, 254, 279, 284, 285, 303, 305, 306, 309, 310], "suppos": [31, 223, 307], "sure": 12, "surplu": 116, "suspicioustft": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92], "sustain": [120, 139], "svg": [296, 297], "swapax": 300, "switch": [55, 60, 245], "symbol": [2, 179, 256], "symmetr": [11, 24, 113, 118, 123, 124, 131, 132, 145, 146, 148, 152, 158, 286, 295], "syntax": 279, "system": [2, 3, 7, 19, 31, 175, 179, 180, 209, 210, 223, 229, 231, 233, 239, 245, 256, 257, 295, 296, 297, 307, 309], "systemat": 225, "t": [2, 10, 12, 31, 54, 77, 179, 209, 210, 221, 222, 223, 229, 231, 233, 236, 238, 239, 240, 245, 246, 247, 256, 257, 267, 279, 284, 285, 287, 289, 295, 296, 297, 298, 299, 300, 303, 305], "t2": 289, "tabl": 103, "tag": 94, "tailor": 306, "take": [3, 7, 9, 10, 12, 19, 20, 100, 105, 115, 132, 133, 135, 141, 149, 182, 209, 210, 229, 238, 239, 257, 279, 284, 285, 295, 296, 297, 303, 309], "taken": [10, 12, 107, 120, 139, 213, 241, 245, 279, 284, 285, 296, 297, 298], "tan": [10, 284, 285], "tanh": [10, 284, 285], "target": [116, 117, 238], "tat": [75, 84, 85, 86, 91], "tax": [296, 297], "taylor": 311, "tcrit": 245, "tcur": 245, "technic": [238, 279], "temperatur": [156, 194, 195, 196, 197, 200, 201, 202, 203], "templat": 307, "temptat": 77, "tensor": [163, 167, 168, 169, 270, 271, 272], "term": [10, 285, 309], "termin": [11, 24, 31, 223, 286, 289, 303], "ternari": [216, 225, 234, 260, 265], "test": [3, 7, 19, 175, 180, 238, 279, 303, 304], "tetrahedron": 310, "text": [10, 113, 117, 118, 119, 121, 122, 123, 124, 126, 128, 131, 132, 145, 146, 147, 148, 152, 153, 158, 159, 209, 239, 253, 254, 257, 285, 298], "tfirst": 245, "tft": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 210, 229, 299], "tftt": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92], "th": [12, 245, 298], "than": [5, 10, 12, 30, 31, 107, 126, 166, 175, 180, 187, 219, 223, 228, 245, 264, 269, 279, 284, 285, 291, 296, 297, 303, 304, 305], "thank": 302, "thei": [10, 12, 31, 81, 127, 223, 238, 240, 279, 284, 285, 295], "them": [10, 194, 195, 196, 197, 200, 201, 202, 203, 209, 219, 238, 239, 245, 257, 264, 279, 284, 285, 300, 301, 303], "theoret": [112, 130, 138, 252, 278, 295, 302], "theori": 311, "thereaft": [83, 84], "therefor": [209, 239, 257, 295, 296, 297], "theta": [126, 245], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 23, 24, 29, 30, 31, 32, 54, 57, 66, 71, 72, 73, 74, 75, 80, 82, 89, 90, 91, 92, 99, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 148, 149, 150, 152, 155, 158, 159, 161, 165, 166, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 210, 215, 217, 219, 220, 222, 223, 224, 225, 228, 229, 231, 233, 234, 235, 238, 239, 240, 243, 244, 245, 247, 248, 249, 252, 253, 254, 256, 257, 259, 262, 264, 265, 266, 268, 269, 271, 272, 274, 275, 277, 278, 279, 281, 284, 285, 286, 289, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310], "thing": 107, "thingraph": 279, "third": [165, 191, 289], "those": [2, 10, 179, 256, 279, 284, 285], "though": 279, "three": [165, 191, 279, 289, 310], "threshold": [26, 54, 116, 117, 119, 126, 127, 147, 236, 267], "through": [225, 279, 295, 302, 303, 311], "thu": [2, 3, 7, 19, 115, 132, 133, 175, 179, 180, 245, 256, 279, 302, 303], "tick": [228, 231, 233], "tick_valu": 228, "ticks_bottom": [231, 233], "ticks_direct": [231, 233], "ticks_labels_fontweight": [231, 233], "ticks_labels_pad": [231, 233], "ticks_labels_s": [231, 233], "ticks_left": [231, 233], "ticks_right": [231, 233], "ticks_top": [231, 233], "ticks_width": [231, 233], "tight": 238, "tight_layout": 238, "time": [4, 12, 14, 15, 29, 31, 105, 107, 117, 174, 175, 178, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 223, 229, 239, 245, 257, 268, 279, 283, 291, 295, 296, 297, 298, 300, 301, 302, 303, 305, 309], "time_step": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92], "timestep": 305, "timinguncertainti": 117, "tit": [75, 84, 85, 86, 91], "titfortat": 307, "titl": [230, 231, 232, 233, 302, 303], "to_direct": 279, "to_directed_class": 279, "to_networkx_graph": 279, "to_undirect": 279, "to_undirected_class": 279, "toarrai": [10, 12, 284, 285], "tobsr": [10, 12, 284, 285], "tocoo": [10, 12, 284, 285], "tocsc": [10, 12, 284, 285], "tocsr": [10, 12, 284, 285], "todens": [10, 12, 284, 285], "todia": [10, 12, 284, 285], "todo": [3, 7, 19], "todok": [10, 12, 284, 285], "togeth": [10, 209, 230, 232, 239, 257, 284, 285], "tol": [31, 223], "tol_close_point": [25, 26, 263, 295], "toler": [21, 22, 23, 25, 26, 31, 209, 210, 216, 217, 218, 219, 223, 229, 234, 236, 238, 239, 245, 257, 260, 261, 262, 263, 264, 265, 267, 296, 297, 298], "tolil": [10, 12, 284, 285], "tolsf": 245, "tom": 302, "too": [175, 180, 210, 229, 245, 302, 310], "tool": 303, "toolcursorposit": 238, "top": [209, 231, 233, 239, 257, 289], "top_corn": [209, 239, 257, 295, 300, 301], "tor": 311, "tostr": 306, "total": [3, 7, 9, 16, 19, 20, 22, 27, 100, 101, 108, 112, 113, 115, 116, 117, 118, 119, 120, 123, 124, 126, 128, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 173, 174, 175, 177, 178, 180, 182, 183, 188, 189, 193, 194, 195, 196, 197, 200, 201, 202, 203, 224, 248, 252, 261, 274, 278, 279, 280, 288], "total_nb_st": 298, "trace": [10, 12, 174, 178, 284, 285], "track": [309, 310], "tragedi": [126, 127, 311], "trajectori": [174, 175, 178, 180, 209, 235, 236, 239, 257, 266, 267, 294, 304, 310], "trajectory_length": [209, 239, 257, 300, 301], "transax": 238, "transfer": 279, "transform": [164, 167, 209, 214, 226, 238, 239, 242, 250, 257, 258, 270, 273, 289, 291], "transformed_interior_point": 238, "transformedbbox": 238, "transformedpath": 238, "transformm": [226, 250, 273], "transient": [175, 180, 309], "transit": [2, 3, 7, 19, 179, 194, 195, 196, 197, 200, 201, 202, 203, 210, 229, 256, 281, 282, 295, 296, 297, 301, 305], "transition_and_fixation_matrix": [3, 7, 19, 210, 229], "transition_matrix": [281, 282, 299], "transitori": [173, 174, 175, 177, 178, 180, 298, 309], "translat": [209, 239, 257], "transpar": [209, 239, 257], "transpos": [10, 12, 245, 284, 285, 295, 297, 299, 301], "traulsen": 311, "travers": [110, 279], "treat": [279, 289, 307], "tree": 238, "tri": [73, 89, 209, 239, 257], "trial": [194, 195, 196, 197, 200, 201, 202, 203], "triangl": [164, 167, 209, 214, 217, 239, 242, 257, 258, 270, 295, 310], "triangul": [209, 239, 257], "triangular": [209, 225, 239, 257, 289], "tridiagon": [11, 24, 286], "trigger": [76, 238], "trimesh": [209, 239, 257], "tripcolor": [209, 239, 257], "true": [10, 11, 12, 21, 24, 31, 80, 92, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 216, 223, 225, 229, 231, 233, 234, 236, 238, 239, 240, 245, 257, 260, 265, 267, 279, 284, 285, 286, 289, 300, 301], "trunc": [10, 284, 285], "try": [238, 303, 306, 307], "tsw": 245, "ttft": [53, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 92], "tu": 117, "tune": [31, 223], "tupl": [2, 3, 7, 10, 12, 19, 22, 26, 31, 80, 92, 165, 179, 191, 209, 210, 212, 217, 220, 221, 222, 223, 225, 229, 230, 232, 234, 235, 236, 238, 239, 244, 245, 246, 247, 255, 256, 257, 261, 265, 266, 267, 279, 280, 284, 285, 287], "tuxfamili": 303, "tweak": 279, "twice": [85, 86, 279], "two": [3, 5, 7, 10, 12, 19, 25, 27, 28, 30, 78, 124, 125, 126, 166, 187, 217, 219, 231, 233, 238, 240, 245, 263, 264, 269, 279, 284, 285, 289, 301, 302, 303, 305, 308], "twoaction": [53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 210, 229, 299], "txt": [303, 306], "type": [2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 101, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 295, 299, 302, 306, 308], "type_label": [209, 239, 257, 295, 300, 301], "typecod": [10, 12, 284, 285], "typeerror": [240, 307], "typic": [9, 32, 100, 114, 121, 135, 141, 149, 182, 190, 199, 238, 249, 253, 275, 279], "u": [209, 239, 257, 279, 296, 297, 300, 301, 303], "u1": [165, 191], "u2": [165, 191], "u3": [165, 191], "u_of_edg": 279, "ubuntu": 303, "ui": [209, 239, 257, 300], "uint128_t": 107, "uint64": [108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 145, 146, 147, 148, 152, 153, 158, 159, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 252, 253, 254, 278, 298], "uncertainti": [105, 117], "undefin": [10, 284, 285], "under": [2, 4, 14, 15, 29, 114, 116, 117, 175, 179, 180, 199, 234, 235, 245, 256, 265, 266, 268, 289, 299, 302, 305, 309, 310], "underli": [10, 12, 279, 284, 285], "undirect": [194, 195, 196, 197, 200, 201, 202, 203, 209, 239, 257, 279], "unexpect": 238, "uniform": 82, "uniformli": [32, 189, 190, 249, 275, 298], "uniformtrirefin": [209, 239, 257], "union": [80, 92, 115, 123, 132, 133, 148, 209, 221, 222, 226, 239, 246, 247, 250, 257, 273, 280, 281, 282, 287, 308], "uniqu": [9, 100, 124, 135, 141, 149, 182, 280], "unit": [21, 25, 32, 190, 209, 218, 219, 238, 239, 249, 257, 263, 264, 275, 289], "unitari": 289, "univers": 311, "universal2": 303, "unknown": 238, "unless": [10, 11, 12, 24, 38, 134, 238, 279, 284, 285, 286], "unlik": [10, 12, 238, 284, 285], "unord": [106, 107], "unpack": 279, "unsaf": [10, 12, 284, 285], "unset": 238, "unsign": [3, 7, 10, 12, 19, 105, 284, 285], "unstabl": [23, 26, 209, 216, 230, 231, 232, 233, 234, 236, 239, 257, 260, 262, 265, 267, 287, 300, 301], "until": [74, 76, 90, 194, 195, 196, 197, 200, 201, 202, 203, 238], "up": [112, 115, 120, 124, 130, 132, 133, 138, 139, 228, 238, 252, 278, 308, 309], "upcast": [10, 12, 284, 285], "updat": [3, 7, 19, 112, 113, 118, 119, 120, 123, 126, 128, 130, 131, 132, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 173, 177, 193, 194, 195, 196, 197, 200, 201, 202, 203, 238, 252, 278, 279, 303], "update_from": 238, "update_group_s": [3, 7, 19], "update_nod": [194, 195, 196, 197, 200, 201, 202, 203], "update_payoff": [3, 7, 19, 113, 118, 119, 123, 128, 131, 132, 145, 146, 147, 148, 152, 153, 158, 159], "update_payoff_matrix": [121, 122, 253, 254], "update_popul": [193, 194, 195, 196, 197, 200, 201, 202, 203], "update_population_s": [2, 3, 7, 19, 179, 256], "upgrad": 303, "upper": [238, 245, 289], "upstream": 303, "url": [238, 302], "us": [2, 3, 5, 7, 8, 9, 10, 12, 16, 19, 21, 23, 25, 26, 27, 28, 30, 31, 32, 36, 38, 96, 99, 100, 102, 108, 109, 112, 114, 115, 116, 117, 120, 121, 122, 124, 125, 127, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 149, 150, 155, 161, 162, 163, 165, 166, 173, 175, 177, 179, 180, 181, 182, 187, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 219, 223, 224, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 243, 245, 248, 249, 252, 253, 254, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 274, 275, 278, 279, 281, 284, 285, 289, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310], "usag": [12, 38, 134, 240, 279, 305, 309], "user": [31, 173, 177, 193, 223, 228, 238, 279, 296, 297, 303, 304], "usual": [124, 238, 279, 289], "util": [209, 239, 257, 295, 296, 297, 299, 300, 301, 305, 307, 310], "utm": 279, "ux": [209, 239, 257, 300], "v": [10, 12, 209, 239, 257, 279, 284, 285, 295, 296, 297, 298, 300, 305, 311], "v0": 228, "v1": 228, "v_int": 300, "v_of_edg": 279, "valid": [10, 32, 190, 238, 249, 275, 284, 285, 306], "valu": [3, 7, 10, 12, 19, 22, 31, 54, 80, 92, 105, 106, 112, 113, 115, 118, 119, 120, 123, 125, 128, 130, 131, 132, 133, 138, 139, 145, 146, 147, 148, 152, 153, 158, 159, 165, 175, 180, 191, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 223, 228, 229, 238, 239, 240, 245, 252, 257, 261, 278, 279, 283, 284, 285, 289, 295, 298, 309], "vari": [10, 12, 31, 223, 284, 285, 289], "variabl": [115, 133, 240, 245, 279], "vasconcelo": 311, "vec": 305, "vector": [2, 3, 4, 7, 9, 10, 12, 14, 16, 19, 23, 26, 28, 29, 31, 32, 100, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 161, 175, 179, 180, 182, 186, 188, 189, 190, 191, 199, 209, 223, 224, 226, 230, 232, 236, 238, 239, 245, 248, 249, 250, 252, 253, 254, 256, 257, 262, 267, 268, 270, 273, 274, 275, 278, 281, 282, 284, 285, 295, 300, 306, 310], "vectorint": 306, "vectorized_barycentric_to_xy_coordin": [209, 239, 257, 300], "vectorized_replicator_equ": [165, 191, 209, 239, 257, 300], "vectorized_replicator_equation_n_play": 165, "veloc": 245, "venv": 303, "veri": [175, 180, 303, 309], "version": [3, 7, 9, 10, 12, 19, 31, 100, 114, 117, 125, 126, 127, 135, 141, 149, 174, 178, 182, 199, 223, 235, 238, 245, 266, 279, 284, 285, 305, 307, 309, 310], "versu": [3, 7, 19], "vertex": [209, 220, 221, 222, 238, 239, 244, 246, 247, 257], "vertic": [25, 209, 217, 238, 239, 245, 257, 263], "via": [236, 267, 279, 305, 306, 307], "view": [12, 228, 238, 245, 279], "view_limit": 228, "viridi": [209, 239, 257], "virtual": 303, "visibl": [238, 303], "visit": 309, "visual": [209, 210, 227, 229, 234, 235, 239, 257, 265, 266, 294, 295, 301, 304], "vl": 11, "vmax": [209, 228, 239, 257, 300], "vmin": [209, 228, 239, 257], "vocabulari": [10, 285], "vode": 245, "void": 306, "vr": [11, 24, 286], "v\u00e3": 311, "w": [11, 24, 238, 279, 286, 303], "wa": [10, 12, 170, 171, 184, 185, 238, 245, 284, 285, 289], "wai": [8, 10, 12, 36, 99, 132, 140, 168, 169, 181, 193, 215, 243, 259, 271, 272, 279, 284, 285, 295, 302, 303, 304, 307], "want": [3, 7, 10, 12, 19, 175, 180, 238, 279, 284, 285, 294, 298, 300, 301, 303, 306, 307, 308], "warn": [228, 238, 279, 296, 297], "warren": 311, "we": [2, 3, 7, 10, 12, 19, 31, 115, 132, 133, 175, 179, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 217, 221, 222, 223, 239, 245, 246, 247, 256, 257, 279, 284, 285, 291, 294, 295, 296, 297, 300, 301, 302, 303, 305, 307], "weight": [126, 231, 233, 245, 279], "well": [238, 240, 279, 296, 300, 309], "were": [209, 217, 238, 239, 257, 301], "wether": [210, 229], "what": [10, 12, 279, 284, 285, 294, 303, 304, 309], "wheel": 303, "when": [2, 3, 7, 10, 12, 19, 55, 56, 60, 63, 115, 119, 125, 132, 133, 147, 175, 179, 180, 186, 209, 210, 228, 229, 231, 233, 238, 239, 240, 245, 256, 257, 279, 284, 285, 289, 291, 295, 296, 297, 298, 301, 303, 305, 306, 307, 308, 309, 310], "whenev": [10, 12, 238, 284, 285], "where": [2, 3, 4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 20, 23, 25, 29, 31, 77, 100, 108, 113, 114, 115, 118, 119, 121, 122, 124, 125, 126, 128, 131, 132, 133, 135, 136, 141, 142, 145, 146, 147, 149, 150, 152, 153, 155, 158, 159, 161, 175, 179, 180, 182, 188, 189, 195, 196, 199, 201, 202, 209, 217, 220, 223, 224, 225, 238, 239, 244, 245, 248, 253, 254, 256, 257, 262, 263, 268, 274, 279, 284, 285, 289, 295, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309], "wheter": [210, 229], "whether": [10, 11, 12, 21, 24, 31, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 126, 127, 209, 210, 218, 223, 229, 230, 231, 232, 233, 234, 236, 238, 239, 245, 257, 265, 267, 279, 284, 285, 286, 287, 289, 309], "which": [2, 3, 7, 9, 10, 12, 19, 31, 55, 56, 57, 60, 63, 66, 96, 100, 105, 112, 113, 115, 117, 118, 119, 120, 123, 130, 131, 132, 133, 135, 138, 139, 141, 145, 146, 147, 148, 149, 152, 153, 158, 167, 168, 169, 179, 182, 193, 194, 195, 196, 197, 200, 201, 202, 203, 209, 210, 216, 217, 220, 221, 222, 223, 229, 231, 233, 236, 238, 239, 244, 245, 246, 247, 252, 256, 257, 260, 267, 270, 271, 272, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 294, 295, 296, 297, 300, 303, 305, 309], "while": [10, 12, 126, 168, 169, 238, 271, 272, 279, 284, 285, 302, 303, 305], "white": [209, 239, 257, 295, 296, 297, 298, 300, 301, 305], "whitesmok": [209, 239, 257], "who": [73, 89], "whole": [2, 10, 12, 179, 256, 284, 285], "whose": [11, 24, 112, 125, 130, 138, 193, 194, 195, 196, 197, 200, 201, 202, 203, 245, 252, 278, 286], "why": [296, 297], "wide": 238, "width": [209, 210, 229, 231, 233, 238, 239, 257], "wiggl": 238, "win": 81, "window": [238, 303], "wise": [10, 12, 284, 285, 295, 296, 297], "wish": 193, "within": [10, 12, 21, 238, 284, 285, 306, 309], "without": [10, 12, 54, 121, 122, 175, 180, 228, 235, 238, 253, 254, 266, 279, 284, 285, 295, 296, 297, 303, 305, 306, 308, 309], "wn2898": 279, "work": [31, 209, 223, 238, 239, 240, 245, 257, 279, 289, 306, 307], "world": [10, 285], "worst": 12, "would": [108, 109, 175, 180, 193, 194, 195, 196, 197, 200, 201, 202, 203, 228, 238, 291, 295, 298, 302, 303], "would_like_to_commit": [37, 40, 41, 42, 43, 44, 45, 46, 47, 144], "wrap": [10, 12, 31, 223, 236, 267, 284, 285], "wright": 305, "write": [10, 12, 284, 285, 303, 308], "written": [113, 118, 119, 128, 131, 145, 146, 147, 152, 153, 158, 159, 176, 245, 306], "wrong": 279, "www": 303, "x": [3, 4, 7, 10, 12, 14, 15, 19, 27, 28, 29, 31, 108, 118, 126, 146, 154, 156, 165, 191, 209, 213, 217, 223, 225, 226, 230, 231, 232, 233, 238, 239, 240, 241, 250, 257, 268, 273, 284, 285, 289, 291, 295, 296, 297, 298, 300, 305, 310], "x0": [31, 223], "x1": [165, 191], "x2": [165, 191], "x3": [165, 191], "x_": [295, 305], "x_i": [295, 296, 297, 305], "x_if": [296, 297], "x_total": [118, 146], "xaxi": 238, "xdata": [213, 241], "xi": 310, "xlabel": [230, 231, 232, 233, 245, 295, 296, 297, 305, 310], "xlim": [295, 300, 301], "xmax": 238, "xmin": 238, "xrightarrow": [295, 296, 297], "xtick": 228, "xtol": [31, 223], "xy": 238, "xy_result": [209, 239, 257, 300], "xy_to_barycentric_coordin": [209, 239, 257, 300], "y": [31, 165, 191, 209, 210, 217, 223, 225, 226, 229, 231, 233, 238, 239, 240, 245, 250, 257, 273, 289, 300], "y0": 245, "yannick": 302, "yaxi": 238, "year": [298, 302], "yet": [279, 295, 303], "yield": [225, 238, 279, 309], "ylabel": [231, 233, 295, 310], "ylim": [295, 300, 301], "ymax": 238, "ymin": 238, "yml": 303, "york": 311, "you": [3, 7, 10, 12, 19, 55, 56, 57, 60, 63, 66, 115, 132, 133, 175, 180, 193, 210, 229, 230, 231, 232, 233, 238, 279, 284, 285, 294, 295, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310], "your": [115, 132, 133, 153, 175, 180, 279, 303, 304, 307], "yourself": [238, 303], "ytick": 228, "z": [209, 210, 225, 229, 238, 239, 257, 289, 295, 296, 297, 298, 299, 300, 301, 305, 310], "z2": 289, "zenodo": 302, "zero": [3, 7, 10, 12, 19, 22, 23, 26, 31, 216, 220, 223, 225, 236, 238, 244, 245, 260, 261, 262, 267, 284, 285, 295, 308], "zeros_lik": [31, 112, 120, 130, 138, 139, 223, 252, 278], "zip": 279, "zorder": [209, 213, 238, 239, 241, 257, 295, 300, 301], "\u00fc": 311}, "titles": ["egttools", "egttools.analytical", "egttools.analytical.PairwiseComparison", "egttools.analytical.StochDynamics", "egttools.analytical.replicator_equation", "egttools.analytical.replicator_equation_n_player", "egttools.analytical.sed_analytical", "egttools.analytical.sed_analytical.StochDynamics", "egttools.analytical.sed_analytical.calculate_nb_states", "egttools.analytical.sed_analytical.calculate_state", "egttools.analytical.sed_analytical.csr_matrix", "egttools.analytical.sed_analytical.eig", "egttools.analytical.sed_analytical.lil_matrix", "egttools.analytical.sed_analytical.permutations", "egttools.analytical.sed_analytical.replicator_equation", "egttools.analytical.sed_analytical.replicator_equation_n_player", "egttools.analytical.sed_analytical.sample_simplex", "egttools.analytical.sed_analytical.warn", "egttools.analytical.utils", "egttools.analytical.utils.StochDynamics", "egttools.analytical.utils.calculate_gradients", "egttools.analytical.utils.check_if_point_in_unit_simplex", "egttools.analytical.utils.check_if_there_is_random_drift", "egttools.analytical.utils.check_replicator_stability_pairwise_games", "egttools.analytical.utils.eigvals", "egttools.analytical.utils.find_roots", "egttools.analytical.utils.find_roots_and_stability", "egttools.analytical.utils.get_pairwise_gradient_from_replicator", "egttools.analytical.utils.get_pairwise_gradient_from_replicator_n_player", "egttools.analytical.utils.replicator_equation", "egttools.analytical.utils.replicator_equation_n_player", "egttools.analytical.utils.root", "egttools.analytical.utils.sample_unit_simplex", "egttools.behaviors", "egttools.behaviors.CPR", "egttools.behaviors.CPR.abstract_cpr_strategy", "egttools.behaviors.CPR.abstract_cpr_strategy.ABC", "egttools.behaviors.CPR.abstract_cpr_strategy.AbstractCPRStrategy", "egttools.behaviors.CPR.abstract_cpr_strategy.abstractmethod", "egttools.behaviors.CPR.cpr_strategies", "egttools.behaviors.CPR.cpr_strategies.AbstractCPRStrategy", "egttools.behaviors.CPR.cpr_strategies.CommitmentStrategy", "egttools.behaviors.CPR.cpr_strategies.FairExtraction", "egttools.behaviors.CPR.cpr_strategies.FakeStrategy", "egttools.behaviors.CPR.cpr_strategies.FixedExtraction", "egttools.behaviors.CPR.cpr_strategies.FreeStrategy", "egttools.behaviors.CPR.cpr_strategies.HighExtraction", "egttools.behaviors.CPR.cpr_strategies.NashExtraction", "egttools.behaviors.CPR.cpr_strategies.fair_extraction", "egttools.behaviors.CPR.cpr_strategies.high_extraction", "egttools.behaviors.CPR.cpr_strategies.nash_extraction", "egttools.behaviors.CPR.cpr_strategies.payoff_no_commitment", "egttools.behaviors.CRD", "egttools.behaviors.CRD.AbstractCRDStrategy", "egttools.behaviors.CRD.CRDMemoryOnePlayer", "egttools.behaviors.CRD.GoalBasedCRDStrategy", "egttools.behaviors.CRD.MovingAverageCRDStrategy", "egttools.behaviors.CRD.TimeBasedCRDStrategy", "egttools.behaviors.CRD.goal_based", "egttools.behaviors.CRD.goal_based.AbstractCRDStrategy", "egttools.behaviors.CRD.goal_based.GoalBasedCRDStrategy", "egttools.behaviors.CRD.moving_average", "egttools.behaviors.CRD.moving_average.AbstractCRDStrategy", "egttools.behaviors.CRD.moving_average.MovingAverageCRDStrategy", "egttools.behaviors.CRD.time_based", "egttools.behaviors.CRD.time_based.AbstractCRDStrategy", "egttools.behaviors.CRD.time_based.TimeBasedCRDStrategy", "egttools.behaviors.NormalForm", "egttools.behaviors.NormalForm.AbstractNFGStrategy", "egttools.behaviors.NormalForm.TwoActions", "egttools.behaviors.NormalForm.TwoActions.ActionInertia", "egttools.behaviors.NormalForm.TwoActions.Cooperator", "egttools.behaviors.NormalForm.TwoActions.Defector", "egttools.behaviors.NormalForm.TwoActions.Detective", "egttools.behaviors.NormalForm.TwoActions.EpsilonGRIM", "egttools.behaviors.NormalForm.TwoActions.EpsilonTFT", "egttools.behaviors.NormalForm.TwoActions.GRIM", "egttools.behaviors.NormalForm.TwoActions.GenerousTFT", "egttools.behaviors.NormalForm.TwoActions.GradualTFT", "egttools.behaviors.NormalForm.TwoActions.ImperfectTFT", "egttools.behaviors.NormalForm.TwoActions.MemoryOneStrategy", "egttools.behaviors.NormalForm.TwoActions.Pavlov", "egttools.behaviors.NormalForm.TwoActions.Random", "egttools.behaviors.NormalForm.TwoActions.SuspiciousTFT", "egttools.behaviors.NormalForm.TwoActions.TFT", "egttools.behaviors.NormalForm.TwoActions.TFTT", "egttools.behaviors.NormalForm.TwoActions.TTFT", "egttools.behaviors.NormalForm.TwoActions.nfg_strategies", "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.AbstractNFGStrategy", "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.Detective", "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonGRIM", "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.EpsilonTFT", "egttools.behaviors.NormalForm.TwoActions.nfg_strategies.MemoryOneStrategy", "egttools.behaviors.opinion_behaviors", "egttools.behaviors.opinion_behaviors.Opinion", "egttools.behaviors.opinion_behaviors.opinion_factory", "egttools.behaviors.pgg_behaviors", "egttools.behaviors.pgg_behaviors.PGGOneShotStrategy", "egttools.behaviors.pgg_behaviors.player_factory", "egttools.calculate_nb_states", "egttools.calculate_state", "egttools.calculate_strategies_distribution", "egttools.datastructures", "egttools.datastructures.DataTable", "egttools.distributions", "egttools.distributions.TimingUncertainty", "egttools.distributions.binom", "egttools.distributions.comb", "egttools.distributions.multinomial_pmf", "egttools.distributions.multivariate_hypergeometric_pdf", "egttools.files", "egttools.games", "egttools.games.AbstractGame", "egttools.games.AbstractNPlayerGame", "egttools.games.AbstractSpatialGame", "egttools.games.AbstractTwoPLayerGame", "egttools.games.CRDGame", "egttools.games.CRDGameTU", "egttools.games.CommonPoolResourceDilemma", "egttools.games.CommonPoolResourceDilemmaCommitment", "egttools.games.InformalRiskGame", "egttools.games.Matrix2PlayerGameHolder", "egttools.games.MatrixNPlayerGameHolder", "egttools.games.NPlayerStagHunt", "egttools.games.NormalFormGame", "egttools.games.NormalFormNetworkGame", "egttools.games.OneShotCRD", "egttools.games.OneShotCRDNetworkGame", "egttools.games.PGG", "egttools.games.abstract_games", "egttools.games.abstract_games.AbstractGame", "egttools.games.abstract_games.AbstractNPlayerGame", "egttools.games.abstract_games.AbstractNPlayerGameExpectedPayoff", "egttools.games.abstract_games.AbstractTwoPLayerGame", "egttools.games.abstract_games.abstractmethod", "egttools.games.abstract_games.calculate_state", "egttools.games.abstract_games.sample_simplex", "egttools.games.informal_risk", "egttools.games.informal_risk.AbstractGame", "egttools.games.informal_risk.InformalRiskGame", "egttools.games.informal_risk.calculate_nb_states", "egttools.games.informal_risk.calculate_state", "egttools.games.informal_risk.sample_simplex", "egttools.games.nonlinear_games", "egttools.games.nonlinear_games.AbstractCPRStrategy", "egttools.games.nonlinear_games.AbstractNPlayerGame", "egttools.games.nonlinear_games.CommonPoolResourceDilemma", "egttools.games.nonlinear_games.CommonPoolResourceDilemmaCommitment", "egttools.games.nonlinear_games.NPlayerStagHunt", "egttools.games.nonlinear_games.calculate_state", "egttools.games.nonlinear_games.sample_simplex", "egttools.games.opinion_game", "egttools.games.opinion_game.AbstractNPlayerGame", "egttools.games.opinion_game.OpinionGame", "egttools.games.opinion_game.moment", "egttools.games.opinion_game.sample_simplex", "egttools.games.opinion_game.sigmoid", "egttools.games.pgg", "egttools.games.pgg.AbstractNPlayerGame", "egttools.games.pgg.PGG", "egttools.games.pgg.PGGOneShotStrategy", "egttools.games.pgg.sample_simplex", "egttools.helpers", "egttools.helpers.vectorized", "egttools.helpers.vectorized.barycentric_to_xy_coordinates", "egttools.helpers.vectorized.cpp_vectorized_replicator_equation_n_player", "egttools.helpers.vectorized.replicator_equation_n_player", "egttools.helpers.vectorized.vectorized_barycentric_to_xy_coordinates", "egttools.helpers.vectorized.vectorized_replicator_equation", "egttools.helpers.vectorized.vectorized_replicator_equation_n_player", "egttools.is_blas_lapack_enabled", "egttools.is_openmp_enabled", "egttools.numerical", "egttools.numerical.GeneralPopulationEvolver", "egttools.numerical.NetworkEvolver", "egttools.numerical.PairwiseComparisonNumerical", "egttools.numerical.numerical_", "egttools.numerical.numerical_.GeneralPopulationEvolver", "egttools.numerical.numerical_.NetworkEvolver", "egttools.numerical.numerical_.PairwiseComparison", "egttools.numerical.numerical_.PairwiseComparisonNumerical", "egttools.numerical.numerical_.calculate_nb_states", "egttools.numerical.numerical_.calculate_state", "egttools.numerical.numerical_.calculate_strategies_distribution", "egttools.numerical.numerical_.is_blas_lapack_enabled", "egttools.numerical.numerical_.is_openmp_enabled", "egttools.numerical.numerical_.replicator_equation", "egttools.numerical.numerical_.replicator_equation_n_player", "egttools.numerical.numerical_.sample_simplex", "egttools.numerical.numerical_.sample_simplex_directly", "egttools.numerical.numerical_.sample_unit_simplex", "egttools.numerical.numerical_.vectorized_replicator_equation_n_player", "egttools.numerical.structure", "egttools.numerical.structure.AbstractStructure", "egttools.numerical.structure.Network", "egttools.numerical.structure.NetworkGroup", "egttools.numerical.structure.NetworkGroupSync", "egttools.numerical.structure.NetworkSync", "egttools.numerical.structure.factories", "egttools.numerical.structure.factories.AbstractSpatialGame", "egttools.numerical.structure.factories.Network", "egttools.numerical.structure.factories.NetworkGroup", "egttools.numerical.structure.factories.NetworkGroupSync", "egttools.numerical.structure.factories.NetworkSync", "egttools.numerical.structure.factories.network_factory", "egttools.numerical.structure.factories.network_group_factory", "egttools.numerical.structure.factories.network_group_sync_factory", "egttools.numerical.structure.factories.network_sync_factory", "egttools.plotting", "egttools.plotting.Simplex2D", "egttools.plotting.draw_invasion_diagram", "egttools.plotting.helpers", "egttools.plotting.helpers.NDArray", "egttools.plotting.helpers.add_arrow", "egttools.plotting.helpers.barycentric_to_xy_coordinates", "egttools.plotting.helpers.calculate_nb_states", "egttools.plotting.helpers.calculate_stability", "egttools.plotting.helpers.calculate_stationary_points", "egttools.plotting.helpers.check_if_point_in_unit_simplex", "egttools.plotting.helpers.find_roots_in_discrete_barycentric_coordinates", "egttools.plotting.helpers.find_where_point_is_in_simplex", "egttools.plotting.helpers.perturb_state", "egttools.plotting.helpers.perturb_state_discrete", "egttools.plotting.helpers.root", "egttools.plotting.helpers.sample_simplex", "egttools.plotting.helpers.simplex_iterator", "egttools.plotting.helpers.xy_to_barycentric_coordinates", "egttools.plotting.indicators", "egttools.plotting.indicators.AutoMinorLocator", "egttools.plotting.indicators.draw_invasion_diagram", "egttools.plotting.indicators.plot_gradient", "egttools.plotting.indicators.plot_gradients", "egttools.plotting.plot_gradient", "egttools.plotting.plot_gradients", "egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex", "egttools.plotting.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots", "egttools.plotting.plot_replicator_dynamics_in_simplex", "egttools.plotting.simplex2d", "egttools.plotting.simplex2d.Circle", "egttools.plotting.simplex2d.Simplex2D", "egttools.plotting.simplex2d.TypeVar", "egttools.plotting.simplex2d.add_arrow", "egttools.plotting.simplex2d.barycentric_to_xy_coordinates", "egttools.plotting.simplex2d.calculate_nb_states", "egttools.plotting.simplex2d.find_where_point_is_in_simplex", "egttools.plotting.simplex2d.odeint", "egttools.plotting.simplex2d.perturb_state", "egttools.plotting.simplex2d.perturb_state_discrete", "egttools.plotting.simplex2d.sample_simplex", "egttools.plotting.simplex2d.sample_unit_simplex", "egttools.plotting.simplex2d.xy_to_barycentric_coordinates", "egttools.plotting.simplified", "egttools.plotting.simplified.AbstractGame", "egttools.plotting.simplified.Matrix2PlayerGameHolder", "egttools.plotting.simplified.MatrixNPlayerGameHolder", "egttools.plotting.simplified.NDArray", "egttools.plotting.simplified.PairwiseComparison", "egttools.plotting.simplified.Simplex2D", "egttools.plotting.simplified.barycentric_to_xy_coordinates", "egttools.plotting.simplified.calculate_nb_states", "egttools.plotting.simplified.calculate_stability", "egttools.plotting.simplified.check_if_there_is_random_drift", "egttools.plotting.simplified.check_replicator_stability_pairwise_games", "egttools.plotting.simplified.find_roots", "egttools.plotting.simplified.find_roots_in_discrete_barycentric_coordinates", "egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex", "egttools.plotting.simplified.plot_pairwise_comparison_rule_dynamics_in_simplex_without_roots", "egttools.plotting.simplified.plot_replicator_dynamics_in_simplex", "egttools.plotting.simplified.replicator_equation", "egttools.plotting.simplified.replicator_equation_n_player", "egttools.plotting.simplified.vectorized_barycentric_to_xy_coordinates", "egttools.plotting.simplified.vectorized_replicator_equation", "egttools.plotting.simplified.vectorized_replicator_equation_n_player", "egttools.plotting.simplified.xy_to_barycentric_coordinates", "egttools.sample_simplex", "egttools.sample_unit_simplex", "egttools.show_build_info", "egttools.utils", "egttools.utils.AbstractGame", "egttools.utils.Graph", "egttools.utils.calculate_nb_unique_combinations", "egttools.utils.calculate_stationary_distribution", "egttools.utils.calculate_stationary_distribution_non_hermitian", "egttools.utils.combine", "egttools.utils.csc_matrix", "egttools.utils.csr_matrix", "egttools.utils.eigvals", "egttools.utils.find_saddle_type_and_gradient_direction", "egttools.utils.get_payoff_function", "egttools.utils.schur", "egttools.utils.transform_graph_to_dict_of_lists", "egttools.utils.transform_payoffs_to_pairwise", "egttools.utils.warn", "&lt;no title&gt;", "Examples", "Examples of use of EGTtools", "Evolutionary dynamics of Hawk-Dove", "Evolutionary dynamics of Hawk-Dove with new Analytical module", "Numerical simulations", "Fixation probabilities and Invasion diagram", "Plot the evolutionary dynamics in a 2-Simplex", "Simplified 2-Simplex plot", "EGTtools \u2013 Toolbox for Evolutionary Game Theory", "Installation", "Tutorials", "Apply Analytical Methods", "Creating a New Game in C++ (EGTtools)", "Creating New Strategies", "Creating a New Game Directly in Python", "Numerical Methods in EGTtools", "Visualizing Results", "References", "Utility functions"], "titleterms": {"1": 295, "2": [295, 300, 301, 305, 310], "3": [295, 310], "And": 298, "The": [295, 305, 308, 310], "abc": 36, "abstract_cpr_strategi": [35, 36, 37, 38], "abstract_gam": [129, 130, 131, 132, 133, 134, 135, 136], "abstractcprstrategi": [37, 40, 144], "abstractcrdstrategi": [53, 59, 62, 65], "abstractgam": [112, 130, 138, 252, 278, 308], "abstractmethod": [38, 134], "abstractnfgstrategi": [68, 88], "abstractnplayergam": [113, 131, 145, 152, 158, 308], "abstractnplayergameexpectedpayoff": 132, "abstractspatialgam": [114, 199], "abstractstructur": 193, "abstracttwoplayergam": [115, 133, 308], "acknowledg": 302, "actioninertia": 70, "add_arrow": [213, 241], "alreadi": 308, "also": 298, "analys": 299, "analyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 297, 298, 299, 305], "appli": 305, "approxim": 298, "ar": 298, "autominorloc": 228, "barycentric_to_xy_coordin": [164, 214, 242, 258], "behavior": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "binom": 106, "build": 303, "c": 306, "calcul": [299, 300], "calculate_gradi": 20, "calculate_nb_st": [8, 99, 140, 181, 215, 243, 259], "calculate_nb_unique_combin": 280, "calculate_st": [9, 100, 135, 141, 149, 182, 216, 260], "calculate_stationary_distribut": 281, "calculate_stationary_distribution_non_hermitian": 282, "calculate_stationary_point": 217, "calculate_strategies_distribut": [101, 183], "can": 298, "check_if_point_in_unit_simplex": [21, 218], "check_if_there_is_random_drift": [22, 261], "check_replicator_stability_pairwise_gam": [23, 262], "circl": 238, "cite": 302, "class": [299, 308, 310], "comb": 107, "combin": 283, "commitmentstrategi": 41, "commonpoolresourcedilemma": [118, 146], "commonpoolresourcedilemmacommit": [119, 147], "compar": 298, "comparison": [295, 301, 305], "cooper": 71, "cpp_vectorized_replicator_equation_n_play": 165, "cpr": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 307], "cpr_strategi": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "crd": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "crdgame": 116, "crdgametu": 117, "crdmemoryoneplay": 54, "creat": [306, 307, 308], "csc_matrix": 284, "csr_matrix": [10, 285], "custom": 307, "datastructur": [102, 103], "datat": 103, "defector": 72, "defin": [301, 307], "detect": [73, 89], "diagram": 299, "directli": 308, "distribut": [104, 105, 106, 107, 108, 109, 298, 300, 301, 303, 309, 310], "dove": [296, 297, 305], "draw_invasion_diagram": [210, 229], "dynam": [295, 296, 297, 300, 301, 305], "egttool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 302, 305, 306, 309], "eig": 11, "eigval": [24, 286], "epsilongrim": [74, 90], "epsilontft": [75, 91], "equat": [296, 297], "estim": [298, 309], "evolutionari": [296, 297, 300, 301, 302], "exampl": [294, 295, 305, 307, 308], "exist": 307, "extend": 307, "factori": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "fair_extract": 48, "fairextract": 42, "fakestrategi": 43, "far": 298, "field": 301, "file": 110, "find_root": [25, 263], "find_roots_and_st": 26, "find_roots_in_discrete_barycentric_coordin": [219, 264], "find_saddle_type_and_gradient_direct": 287, "find_where_point_is_in_simplex": [220, 244], "finit": [295, 296, 297, 300, 301, 305, 310], "fixat": [299, 309], "fixedextract": 44, "form": [299, 307], "freestrategi": 45, "from": [298, 301, 303, 308], "full": 309, "function": 312, "game": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 296, 297, 299, 302, 305, 306, 307, 308], "generalpopulationevolv": [173, 177], "generoustft": 77, "get_pairwise_gradient_from_repl": 27, "get_pairwise_gradient_from_replicator_n_play": 28, "get_payoff_funct": 288, "goal_bas": [58, 59, 60], "goalbasedcrdstrategi": [55, 60], "gradient": [300, 301, 310], "gradualtft": 78, "graph": 279, "grim": 76, "happen": 298, "have": 308, "hawk": [296, 297, 305], "helper": [162, 163, 164, 165, 166, 167, 168, 169, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226], "high_extract": 49, "highextract": 46, "how": 298, "hunt": 308, "imperfecttft": 79, "implement": [307, 308], "indic": [227, 228, 229, 230, 231, 302], "infinit": [296, 297, 300, 301, 310], "informal_risk": [137, 138, 139, 140, 141, 142], "informalriskgam": [120, 139], "instal": 303, "instanci": 299, "instanti": 299, "integr": 306, "intens": 301, "invas": 299, "is_blas_lapack_en": [170, 184], "is_openmp_en": [171, 185], "lil_matrix": 12, "limit": 305, "list": 308, "matrix": [299, 301, 308], "matrix2playergamehold": [121, 253], "matrixnplayergamehold": [122, 254], "memoryonestrategi": [80, 92], "method": [305, 306, 309], "model": 305, "modul": 297, "moment": 154, "moran": [295, 301], "more": 310, "moving_averag": [61, 62, 63], "movingaveragecrdstrategi": [56, 63], "multinomial_pmf": 108, "multivariate_hypergeometric_pdf": 109, "mutat": 305, "n": [305, 308], "nash_extract": 50, "nashextract": 47, "ndarrai": [212, 255], "network": [194, 200], "network_factori": 204, "network_group_factori": 205, "network_group_sync_factori": 206, "network_sync_factori": 207, "networkevolv": [174, 178], "networkgroup": [195, 201], "networkgroupsync": [196, 202], "networksync": [197, 203], "new": [297, 306, 307, 308], "nfg_strategi": [87, 88, 89, 90, 91, 92], "nonlinear_gam": [143, 144, 145, 146, 147, 148, 149, 150], "normal": [299, 307], "normalform": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "normalformgam": 124, "normalformnetworkgam": 125, "note": 307, "now": 299, "nplayerstaghunt": [123, 148], "numer": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 298, 309], "numerical_": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "odeint": 245, "oneshotcrd": 126, "oneshotcrdnetworkgam": 127, "onli": 295, "opinion": 94, "opinion_behavior": [93, 94, 95], "opinion_factori": 95, "opinion_gam": [151, 152, 153, 154, 155, 156], "opiniongam": 153, "our": 298, "overview": [306, 309], "pairwis": [295, 301, 305], "pairwisecomparison": [2, 179, 256], "pairwisecomparisonnumer": [175, 180], "pavlov": 81, "payoff": [299, 301, 308], "payoff_no_commit": 51, "perform": 299, "permut": 13, "perturb_st": [221, 246], "perturb_state_discret": [222, 247], "pgg": [128, 157, 158, 159, 160, 161], "pgg_behavior": [96, 97, 98], "pggoneshotstrategi": [97, 160], "pip": 303, "player": [305, 308], "player_factori": 98, "plot": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 298, 299, 300, 301, 310], "plot_gradi": [230, 231, 232, 233], "plot_pairwise_comparison_rule_dynamics_in_simplex": [234, 265], "plot_pairwise_comparison_rule_dynamics_in_simplex_without_root": [235, 266], "plot_replicator_dynamics_in_simplex": [236, 267], "point": [298, 301], "popul": [295, 296, 297, 300, 301, 305, 310], "precomput": 308, "probabl": [299, 309], "process": [295, 301], "project": 294, "pypi": 303, "python": [303, 306, 308], "random": [82, 298], "refer": 311, "regist": 306, "relat": 306, "replic": [295, 296, 297, 305], "replicator_equ": [4, 14, 29, 186, 268], "replicator_equation_n_play": [5, 15, 30, 166, 187, 269], "requir": 306, "result": [298, 310], "root": [31, 223], "rule": [295, 305], "run": [298, 309], "sample_simplex": [16, 136, 142, 150, 155, 161, 188, 224, 248, 274], "sample_simplex_directli": 189, "sample_unit_simplex": [32, 190, 249, 275], "schur": 289, "scratch": 308, "sed_analyt": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "select": [299, 301, 310], "sever": 298, "show_build_info": 276, "sigmoid": 156, "simplex": [295, 298, 300, 301], "simplex2d": [209, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 310], "simplex_iter": 225, "simplifi": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 301, 308], "simul": [298, 309], "singl": [298, 309], "size": 301, "small": 305, "sml": 305, "sourc": 303, "stabil": 310, "stag": 308, "standalon": 307, "start": 298, "stationari": [298, 300, 301, 309, 310], "stochast": [295, 301, 305], "stochdynam": [3, 7, 19, 299], "strategi": [295, 299, 307, 309, 310], "streamplot": 301, "structur": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "suspicioustft": 83, "tabl": 302, "test": 306, "tft": 84, "tftt": 85, "than": 310, "theori": 302, "time_bas": [64, 65, 66], "timebasedcrdstrategi": [57, 66], "timinguncertainti": 105, "toolbox": 302, "trajectori": [301, 309], "transform_graph_to_dict_of_list": 290, "transform_payoffs_to_pairwis": 291, "troubleshoot": 303, "ttft": 86, "tutori": [304, 306, 309], "twoaction": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "typevar": 240, "us": [294, 295, 301], "util": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 312], "vector": [163, 164, 165, 166, 167, 168, 169], "vectorized_barycentric_to_xy_coordin": [167, 270], "vectorized_replicator_equ": [168, 271], "vectorized_replicator_equation_n_play": [169, 191, 272], "version": 303, "visual": [298, 310], "want": 299, "warn": [17, 292], "we": [298, 299], "what": 298, "which": 299, "xy_to_barycentric_coordin": [226, 250, 273], "your": 306}})
name: Build MacosX

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

jobs:
  wheels:
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        include:
          - runs-on: macos-latest
            cibw-arch: macosx_x86_64
          - runs-on: macos-latest
            cibw-arch: macosx_arm64
          - runs-on: macos-latest
            cibw-arch: macosx_universal2

    name: Wheels â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.0
        env:
          CIBW_BUILD_FRONTEND: "build"
          CIBW_BUILD: "cp*-${{ matrix.cibw-arch }}"
          CIBW_SKIP: "cp311-* cp310-win* cp38-win32 cp39-win32 cp310-win32"
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"
          CIBW_ARCHS_WINDOWS: "AMD64 x86"
          CIBW_BEFORE_ALL: pip install --upgrade pip
          CIBW_BEFORE_BUILD_MACOS: bash build_tools/github/before_all_mac.sh
          CIBW_BEFORE_ALL_LINUX: bash build_tools/github/download_eigen3.sh
          CIBW_BEFORE_ALL_WINDOWS: bash build_tools/github/download_eigen3_windows.sh
          CIBW_ENVIRONMENT: CMAKE_BUILD_PARALLEL_LEVEL=2
          CIBW_ENVIRONMENT_WINDOWS: CMAKE_BUILD_PARALLEL_LEVEL=2 CMAKE_ARCH="${{ matrix.platform_id == 'win32' && '-A Win32' || '' }}"
          CIBW_ENVIRONMENT_MACOS: CMAKE_BUILD_PARALLEL_LEVEL=2 CMAKE_OSX_ARCHITECTURES=${{ matrix.cibw-arch == 'macosx_x86_64' && 'x86_64' || matrix.cibw-arch == 'macosx_arm64' && 'arm64' || matrix.cibw-arch == 'macosx_universal2' && '"arm64;x86_64"' || '' }} BUILD_ARCH=${{ matrix.cibw-arch }} MACOSX_DEPLOYMENT_TARGET=10.9
          CIBW_TEST_SKIP: "*_arm64 *_universal2:arm64"
          CIBW_TEST_REQUIRES: pytest
          CIBW_BEFORE_TEST_MACOS: cd .. && cp -r EGTTools/tests/ /Users/runner/tests/
          CIBW_BEFORE_TEST_WINDOWS: cd .. && cp -r EGTTools/tests/ c:\tests\
          CIBW_BEFORE_TEST_LINUX: cp -r tests/ /root/tests/ && cd ..
          CIBW_TEST_COMMAND: pytest tests -s --import-mode=importlib
          CIBW_BUILD_VERBOSITY: 1
          CONDA_HOME: /usr/local/miniconda

      - name: Upload built wheels
        if: startsWith(github.ref, 'refs/heads/docs') != true
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheelhouse/egttools-*.whl
          if-no-files-found: error

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
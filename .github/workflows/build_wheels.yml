name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - develop
#    tags:
#      - v*
#  release:
#    types:
#      - published

env:
  CIBW_TEST_COMMAND: pytest


jobs:
  build_sdist:
    name: Build source distribution (sdist)
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/docs') != true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.8

      - name: Install system dependencies macOS
        if: runner.os == 'macOS'
        run: |
          brew install libomp
          echo "LIBOMP=$(brew --prefix libomp)" >> $GITHUB_ENV
          brew install eigen
          echo "EIGEN=$(brew --prefix eigen)" >> $GITHUB_ENV
          brew install gfortran
          echo "GFORTRAN=$(brew --prefix gfortran)" >> $GITHUB_ENV
      - name: Install system dependencies Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install libomp-dev
          sudo apt-get install libeigen3-dev
          echo "Eigen3_DIR='/usr/include/eigen3'" >> $GITHUB_ENV

      - name: Install requirements
        run: |
          pip install --user check-manifest twine

      - name: Run check-manifest
        run: |
          python -m check_manifest

      - name: Build sdist
        run: |
          python -m build --sdist --outdir wheelhouse

      - name: Install from sdist
        run: |
          pip install --user wheelhouse/*.tar.gz

      - name: Check sdist metadata
        run: |
          python -m twine check wheelhouse/*

      - name: Upload sdist
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:  # Windows wheels currently not supported very well by scikit-build
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
          - runs-on: macos-latest
            cibw-arch: macosx_x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: ${{ matrix.python-arch }}

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.8

      - uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_BEFORE_TEST: pip install --upgrade -r tests/requirements.txt
          CIBW_TEST_COMMAND: pytest {package}/tests
          # Python 2.7 on Windows with workaround not supported by scikit-build
          CIBW_SKIP: cp27-win*
          CIBW_BUILD: cp38-${{ matrix.cibw-arch }}
          CIBW_BEFORE_ALL_COMMON: "cmake -S . -B build_dependencies $CMAKE_ARCH && cmake --build build_dependencies --target egttools -j 2"
          CIBW_BEFORE_ALL: $CIBW_BEFORE_ALL_COMMON
          CIBW_BEFORE_ALL_MACOS: |
            brew install libomp && brew install eigen && brew install openblas && $CIBW_BEFORE_ALL_COMMON
#            echo "LIBOMP=$(brew --prefix libomp)" >> $GITHUB_ENV && \
#            echo "EIGEN=$(brew --prefix eigen)" >> $GITHUB_ENV && \
#            echo "OPENBLAS=$(brew --prefix openblas)" >> $GITHUB_ENV
          CIBW_BEFORE_BUILD_LINUX: |
            yum install libomp-dev libeigen3-dev && $CIBW_BEFORE_ALL_COMMON
#            echo "EIGEN=/usr/include/eigen3" >> $GITHUB_ENV
          CIBW_ENVIRONMENT_COMMON: "EGTTOOLS_EXTRA_CMAKE_ARGS=\"-DPREBUILT_DEPENDENCIES=\$(python -c 'import os; print(os.getcwd().replace(os.path.sep, '/'))')/build_dependencies\" CMAKE_BUILD_PARALLEL_LEVEL=2"
          CIBW_ENVIRONMENT_LINUX: "$CIBW_ENVIRONMENT_COMMON PIP_ONLY_BINARY='numpy' -DEigen3_DIR='/usr/include/eigen3/cmake'"
          CIBW_ENVIRONMENT_MACOS: "$CIBW_ENVIRONMENT_COMMON -DEigen3_DIR='$(brew --prefix eigen)/cmake'"


      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl


#  upload_all:
#    name: Upload if release
#    needs: [build_wheels, build_sdist]
#    runs-on: ubuntu-latest
#    if: github.event_name == 'release' && github.event.action == 'published'
#
#    steps:
#      - uses: actions/setup-python@v2
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: artifact
#          path: dist
#
#      - uses: pypa/gh-action-pypi-publish@v1.4.2
#        with:
#          user: __token__
#          password: ${{ secrets.pypi_password }}

name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - fix_github_ci
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            python: "3.10"
            openmp_enabled: "ON"
            platform: linux-x86_64

          - runs-on: macos-13
            python: "3.10"
            openmp_enabled: "OFF"
            platform: macos-x86_64

    name: Python ${{ matrix.python }} â€¢ ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Bootstrap vcpkg
        if: runner.os != 'Windows'  # Windows support can be added later
        run: |
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Cache vcpkg artifacts
        uses: actions/cache@v4
        with:
          path: |
            vcpkg_installed
            _skbuild/**/cmake-build/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      - name: Install EGTtools
        run: |
          pip install .

      - name: Install testing dependencies
        run: |
          pip install --no-deps -r tests/requirements.txt

      - name: Configure project
        shell: bash
        run: |
          cmake -S . -B build -DPython_EXECUTABLE="$(which python)" -DUSE_OPENMP=${{ matrix.openmp_enabled }}

      - name: Build project
        run: |
          cmake --build build --parallel

      - name: Test project
        run: |
          python build_tools/github/check_if_egttools_is_installed.py
          pytest tests -s --import-mode=importlib

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          limit-access-to-actor: true

  docs:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Bootstrap vcpkg
        run: |
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Cache vcpkg artifacts
        uses: actions/cache@v4
        with:
          path: |
            vcpkg_installed
            _skbuild/**/cmake-build/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      - name: Install documentation dependencies
        run: |
          pip install --no-deps -r docs/requirements.txt

      - name: Configure project
        run: |
          cmake -S . -B build -DPython_EXECUTABLE="$(which python)" -DUSE_OPENMP=OFF

      - name: Build project
        run: |
          cmake --build build --parallel
          pip install .

      - name: Build documentation
        run: |
          sphinx-build -b html docs docs/_build/html

      - name: Check documentation links
        run: |
          sphinx-build -b linkcheck docs docs/_build/linkcheck

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          limit-access-to-actor: true

name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - develop
#    tags:
#      - v*
#  release:
#    types:
#      - published

env:
  CIBW_TEST_COMMAND: pytest


jobs:
  build_sdist:
    name: Build source distribution (sdist)
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/docs') != true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.8

      - name: Install system dependencies macOS
        if: runner.os == 'macOS'
        run: |
          brew install libomp
          echo "LIBOMP=$(brew --prefix libomp)" >> $GITHUB_ENV
          brew install eigen
          echo "EIGEN=$(brew --prefix eigen)" >> $GITHUB_ENV
          brew install gfortran
          echo "GFORTRAN=$(brew --prefix gfortran)" >> $GITHUB_ENV
      - name: Install system dependencies Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install libomp-dev
          sudo apt-get install libeigen3-dev
          echo "Eigen3_DIR='/usr/include/eigen3'" >> $GITHUB_ENV

      - name: Install requirements
        run: |
          pip install --user check-manifest twine

      - name: Run check-manifest
        run: |
          python -m check_manifest

      - name: Build sdist
        run: |
          python -m build --sdist --outdir wheelhouse

      - name: Install from sdist
        run: |
          pip install --user wheelhouse/*.tar.gz

      - name: Check sdist metadata
        run: |
          python -m twine check wheelhouse/*

      - name: Upload sdist
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.tar.gz


  build_wheels:
    name: Wheels â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_i686
          - runs-on: macos-latest
            cibw-arch: macosx_x86_64
          - runs-on: windows-latest
            cibw-arch: win_amd64
          - runs-on: windows-latest
            cibw-arch: win32
            python-arch: x86
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: ${{ matrix.python-arch }}

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.8

      - name: Build and test wheels
        env:
          CIBW_BUILD: "cp*-${{ matrix.cibw-arch }}"
          CIBW_ENVIRONMENT: CMAKE_BUILD_PARALLEL_LEVEL=2
                            CMAKE_OSX_ARCHITECTURES=${{ matrix.cibw-arch == 'macosx_x86_64' && 'x86_64' || matrix.cibw-arch == 'macosx_arm64' && 'arm64' || matrix.cibw-arch == 'macosx_universal2' && '"arm64;x86_64"' || '' }}
                            BUILD_ARCH=${{ matrix.cibw-arch }}
                            CMAKE_ARCH="${{ matrix.cibw-arch == 'win32' && '-A Win32' || '' }}"
          CIBW_ARCHS_MACOS: "x86_64"
#          CIBW_ARCHS_WINDOWS: "AMD64 x86"
          CIBW_BEFORE_ALL_LINUX: bash build_tools/github/download_eigen3.sh
          CIBW_BEFORE_ALL_WINDOWS: bash build_tools/github/download_eigen3.sh
          CIBW_BEFORE_TEST: pip install --upgrade -r tests/requirements.txt
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: bash {project}/build_tools/github/test_wheels.sh {project}
          CIBW_BUILD_VERBOSITY: 2
        run: bash build_tools/github/build_wheels.sh

      - name: Check built wheels
        if: startsWith(github.ref, 'refs/heads/docs') != true || matrix.platform_id == 'manylinux_x86_64'
        run: |
          twine check wheelhouse/*

      - name: Upload wheels
        if: startsWith(github.ref, 'refs/heads/docs') != true
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl
          if-no-files-found: error


#  upload_all:
#    name: Upload if release
#    needs: [build_wheels, build_sdist]
#    runs-on: ubuntu-latest
#    if: github.event_name == 'release' && github.event.action == 'published'
#
#    steps:
#      - uses: actions/setup-python@v2
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: artifact
#          path: dist
#
#      - uses: pypa/gh-action-pypi-publish@v1.4.2
#        with:
#          user: __token__
#          password: ${{ secrets.pypi_password }}
